!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS_ROOT	test\testnames.c	31;"	d	file:
ABS_ROOT	test\testnames.c	33;"	d	file:
ABS_ROOT	test\testnames.c	35;"	d	file:
ABTS_ASSERT	test\abts.h	94;"	d
ABTS_FAIL	test\abts.h	92;"	d
ABTS_H	test\abts.h	32;"	d
ABTS_INT_EQUAL	test\abts.h	85;"	d
ABTS_INT_NEQUAL	test\abts.h	86;"	d
ABTS_NOT_IMPL	test\abts.h	93;"	d
ABTS_PTR_EQUAL	test\abts.h	90;"	d
ABTS_PTR_NOTNULL	test\abts.h	89;"	d
ABTS_SIZE_EQUAL	test\abts.h	96;"	d
ABTS_STAT_SIZE	test\abts.c	21;"	d	file:
ABTS_STR_EQUAL	test\abts.h	87;"	d
ABTS_STR_NEQUAL	test\abts.h	88;"	d
ABTS_SUCCESS	test\testcond.c	28;"	d	file:
ABTS_TRUE	test\abts.h	91;"	d
ADDINC128	random\unix\sha2.c	81;"	d	file:
ADD_MINUS_L	build\jlibtool.c	113;"	d	file:
ADD_MINUS_L	build\jlibtool.c	93;"	d	file:
ADD_SUITE	test\abts.h	65;"	d
AIX_SERVNAME_HACK	network_io\unix\sockaddr.c	65;"	d	file:
AIX_SERVNAME_HACK	network_io\unix\sockaddr.c	67;"	d	file:
ALLOC_BYTES	test\testpools.c	30;"	d	file:
APP_DATA	include\arch\netware\apr_private.h	/^} APP_DATA;$/;"	t	typeref:struct:app_data
APRMAXHOSTLEN	include\apr_network_io.h	51;"	d
APR_ALIGN	include\apr_general.h	136;"	d
APR_ALIGN_DEFAULT	include\apr_general.h	140;"	d
APR_ALLOCATOR_H	include\apr_allocator.h	18;"	d
APR_ALLOCATOR_MAX_FREE_UNLIMITED	include\apr_allocator.h	67;"	d
APR_ANONYMOUS	include\apr_errno.h	466;"	d
APR_ANYADDR	include\apr_network_io.h	56;"	d
APR_APPEND	include\apr_file_io.h	88;"	d
APR_ARCH_POLL_PRIVATE_H	include\arch\unix\apr_arch_poll_private.h	18;"	d
APR_ARRAY_IDX	include\apr_tables.h	141;"	d
APR_ARRAY_PUSH	include\apr_tables.h	150;"	d
APR_ASCII_BLANK	include\apr_general.h	59;"	d
APR_ASCII_CR	include\apr_general.h	61;"	d
APR_ASCII_LF	include\apr_general.h	63;"	d
APR_ASCII_TAB	include\apr_general.h	65;"	d
APR_ASSERT_SUCCESS	test\testutil.h	58;"	d
APR_ATOMIC_H	include\apr_atomic.h	18;"	d
APR_BADARG	include\apr_errno.h	457;"	d
APR_BADCH	include\apr_errno.h	455;"	d
APR_BEGIN_DECLS	include\apr.h	468;"	d
APR_BEGIN_DECLS	include\apr.h	471;"	d
APR_BINARY	include\apr_file_io.h	90;"	d
APR_BLK	include\apr_file_info.h	/^    APR_BLK,            \/**< a block device *\/$/;"	e	enum:__anon9
APR_BUFFERED	include\apr_file_io.h	92;"	d
APR_BUFFERSIZE	test\testfile.c	31;"	d	file:
APR_CHARSET_EBCDIC	include\apr.h	338;"	d
APR_CHILD_BLOCK	include\apr_thread_proc.h	87;"	d
APR_CHILD_DONE	include\apr_errno.h	444;"	d
APR_CHILD_NOTDONE	include\apr_errno.h	446;"	d
APR_CHR	include\apr_file_info.h	/^    APR_CHR,            \/**< a character device *\/$/;"	e	enum:__anon9
APR_CREATE	include\apr_file_io.h	87;"	d
APR_CTIME_LEN	include\apr_time.h	196;"	d
APR_CUR	include\apr_file_io.h	133;"	d
APR_DBG_WIN32_HANDLES_H	include\arch\win32\apr_dbg_win32_handles.h	18;"	d
APR_DECLARE	atomic\netware\apr_atomic.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *pool)$/;"	f
APR_DECLARE	atomic\netware\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\netware\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,apr_uint32_t cmp)$/;"	f
APR_DECLARE	atomic\netware\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\netware\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\netware\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\builtins.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\unix\builtins.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\builtins.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\unix\builtins.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\builtins.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\builtins.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\ia32.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\unix\ia32.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\ia32.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\unix\ia32.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\ia32.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\ia32.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\mutex.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\unix\mutex.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\mutex.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\unix\mutex.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\mutex.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\mutex.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\ppc.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\unix\ppc.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\ppc.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\unix\ppc.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\ppc.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\ppc.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\s390.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\unix\s390.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\s390.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\unix\s390.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\s390.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\s390.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\solaris.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\unix\solaris.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\unix\solaris.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\unix\solaris.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\solaris.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\unix\solaris.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\win32\apr_atomic.c	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p)$/;"	f
APR_DECLARE	atomic\win32\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	atomic\win32\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t with,$/;"	f
APR_DECLARE	atomic\win32\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\win32\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
APR_DECLARE	atomic\win32\apr_atomic.c	/^APR_DECLARE(apr_uint32_t) apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
APR_DECLARE	dso\aix\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, $/;"	f
APR_DECLARE	dso\aix\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, $/;"	f
APR_DECLARE	dso\aix\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\aix\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\aix\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	dso\beos\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, $/;"	f
APR_DECLARE	dso\beos\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, apr_dso_handle_t *handle,$/;"	f
APR_DECLARE	dso\beos\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\beos\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\beos\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	dso\netware\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, $/;"	f
APR_DECLARE	dso\netware\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, $/;"	f
APR_DECLARE	dso\netware\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\netware\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\netware\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	dso\os2\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, const char *path, apr_pool_t *ctx)$/;"	f
APR_DECLARE	dso\os2\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, $/;"	f
APR_DECLARE	dso\os2\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\os2\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\os2\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	dso\os390\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, $/;"	f
APR_DECLARE	dso\os390\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, $/;"	f
APR_DECLARE	dso\os390\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\os390\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\os390\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	dso\unix\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(apr_dso_handle_t **res_handle, $/;"	f
APR_DECLARE	dso\unix\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, $/;"	f
APR_DECLARE	dso\unix\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\unix\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\unix\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	dso\win32\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_load(struct apr_dso_handle_t **res_handle, $/;"	f
APR_DECLARE	dso\win32\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_sym(apr_dso_handle_sym_t *ressym, $/;"	f
APR_DECLARE	dso\win32\dso.c	/^APR_DECLARE(apr_status_t) apr_dso_unload(struct apr_dso_handle_t *handle)$/;"	f
APR_DECLARE	dso\win32\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_get(apr_os_dso_handle_t *osdso,$/;"	f
APR_DECLARE	dso\win32\dso.c	/^APR_DECLARE(apr_status_t) apr_os_dso_handle_put(apr_dso_handle_t **aprdso,$/;"	f
APR_DECLARE	file_io\netware\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_attrs_set(const char *fname,$/;"	f
APR_DECLARE	file_io\netware\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_info_get(apr_finfo_t *finfo, $/;"	f
APR_DECLARE	file_io\netware\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_mtime_set(const char *fname,$/;"	f
APR_DECLARE	file_io\netware\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_perms_set(const char *fname, $/;"	f
APR_DECLARE	file_io\netware\filestat.c	/^APR_DECLARE(apr_status_t) apr_stat(apr_finfo_t *finfo, $/;"	f
APR_DECLARE	file_io\netware\filesys.c	/^APR_DECLARE(apr_status_t) apr_filepath_get(char **rootpath, apr_int32_t flags,$/;"	f
APR_DECLARE	file_io\netware\filesys.c	/^APR_DECLARE(apr_status_t) apr_filepath_set(const char *rootpath,$/;"	f
APR_DECLARE	file_io\netware\mktemp.c	/^APR_DECLARE(apr_status_t) apr_file_mktemp(apr_file_t **fp, char *template, apr_int32_t flags, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_namedpipe_create(const char *filename, $/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create(apr_file_t **in, apr_file_t **out, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create_ex(apr_file_t **in, $/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_get(apr_file_t *thepipe, apr_interval_time_t *timeout)$/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_set(apr_file_t *thepipe, apr_interval_time_t timeout)$/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\netware\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put_ex(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\os2\buffer.c	/^APR_DECLARE(apr_size_t) apr_file_buffer_size_get(apr_file_t *file)$/;"	f
APR_DECLARE	file_io\os2\buffer.c	/^APR_DECLARE(apr_status_t) apr_file_buffer_set(apr_file_t *file, $/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_close(apr_dir_t *thedir)$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_make(const char *path, apr_fileperms_t perm, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_open(apr_dir_t **new, const char *dirname, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_read(apr_finfo_t *finfo, apr_int32_t wanted,$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_remove(const char *path, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_rewind(apr_dir_t *thedir)$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_os_dir_get(apr_os_dir_t **thedir, apr_dir_t *dir)$/;"	f
APR_DECLARE	file_io\os2\dir.c	/^APR_DECLARE(apr_status_t) apr_os_dir_put(apr_dir_t **dir, apr_os_dir_t *thedir,$/;"	f
APR_DECLARE	file_io\os2\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_dup(apr_file_t **new_file, apr_file_t *old_file, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\os2\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_dup2(apr_file_t *new_file, apr_file_t *old_file, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\os2\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_setaside(apr_file_t **new_file,$/;"	f
APR_DECLARE	file_io\os2\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_attrs_set(const char *fname,$/;"	f
APR_DECLARE	file_io\os2\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_info_get(apr_finfo_t *finfo, apr_int32_t wanted, $/;"	f
APR_DECLARE	file_io\os2\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_mtime_set(const char *fname,$/;"	f
APR_DECLARE	file_io\os2\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_perms_set(const char *fname, apr_fileperms_t perms)$/;"	f
APR_DECLARE	file_io\os2\filestat.c	/^APR_DECLARE(apr_status_t) apr_stat(apr_finfo_t *finfo, const char *fname,$/;"	f
APR_DECLARE	file_io\os2\filesys.c	/^APR_DECLARE(apr_status_t) apr_filepath_get(char **defpath, apr_int32_t flags,$/;"	f
APR_DECLARE	file_io\os2\filesys.c	/^APR_DECLARE(apr_status_t) apr_filepath_set(const char *path, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\os2\flock.c	/^APR_DECLARE(apr_status_t) apr_file_lock(apr_file_t *thefile, int type)$/;"	f
APR_DECLARE	file_io\os2\flock.c	/^APR_DECLARE(apr_status_t) apr_file_unlock(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_close(apr_file_t *file)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_eof(apr_file_t *fptr)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_inherit_set(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_inherit_unset(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open(apr_file_t **new, const char *fname, apr_int32_t flag,  apr_fileperms_t perm, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stderr(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stdin(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stdout(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stderr(apr_file_t **thefile, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stdin(apr_file_t **thefile, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stdout(apr_file_t **thefile, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_remove(const char *path, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_file_rename(const char *from_path, const char *to_path,$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_os_file_get(apr_os_file_t *thefile, apr_file_t *file)$/;"	f
APR_DECLARE	file_io\os2\open.c	/^APR_DECLARE(apr_status_t) apr_os_file_put(apr_file_t **file, apr_os_file_t *thefile, apr_int32_t flags, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_namedpipe_create(const char *filename, apr_fileperms_t perm, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create(apr_file_t **in, apr_file_t **out, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create_ex(apr_file_t **in, $/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_get(apr_file_t *thepipe, apr_interval_time_t *timeout)$/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_set(apr_file_t *thepipe, apr_interval_time_t timeout)$/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\os2\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put_ex(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_datasync(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_flush(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_getc(char *ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_gets(char *str, int len, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_putc(char ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_puts(const char *str, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_read(apr_file_t *thefile, void *buf, apr_size_t *nbytes)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_sync(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_ungetc(char ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_write(apr_file_t *thefile, const void *buf, apr_size_t *nbytes)$/;"	f
APR_DECLARE	file_io\os2\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_writev(apr_file_t *thefile, const struct iovec *vec, apr_size_t nvec, apr_size_t *nbytes)$/;"	f
APR_DECLARE	file_io\os2\seek.c	/^APR_DECLARE(apr_status_t) apr_file_seek(apr_file_t *thefile, apr_seek_where_t where, apr_off_t *offset)$/;"	f
APR_DECLARE	file_io\os2\seek.c	/^APR_DECLARE(apr_status_t) apr_file_trunc(apr_file_t *fp, apr_off_t offset)$/;"	f
APR_DECLARE	file_io\unix\buffer.c	/^APR_DECLARE(apr_size_t) apr_file_buffer_size_get(apr_file_t *file)$/;"	f
APR_DECLARE	file_io\unix\buffer.c	/^APR_DECLARE(apr_status_t) apr_file_buffer_set(apr_file_t *file, $/;"	f
APR_DECLARE	file_io\unix\copy.c	/^APR_DECLARE(apr_status_t) apr_file_append(const char *from_path,$/;"	f
APR_DECLARE	file_io\unix\copy.c	/^APR_DECLARE(apr_status_t) apr_file_copy(const char *from_path,$/;"	f
APR_DECLARE	file_io\unix\fileacc.c	/^APR_DECLARE(apr_int32_t) apr_file_flags_get(apr_file_t *f)$/;"	f
APR_DECLARE	file_io\unix\fileacc.c	/^APR_DECLARE(apr_status_t) apr_file_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	file_io\unix\fileacc.c	/^APR_DECLARE(apr_status_t) apr_file_data_set(apr_file_t *file, void *data,$/;"	f
APR_DECLARE	file_io\unix\fileacc.c	/^APR_DECLARE(apr_status_t) apr_file_name_get(const char **fname,$/;"	f
APR_DECLARE	file_io\unix\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_dup(apr_file_t **new_file,$/;"	f
APR_DECLARE	file_io\unix\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_dup2(apr_file_t *new_file,$/;"	f
APR_DECLARE	file_io\unix\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_setaside(apr_file_t **new_file,$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_encoding(int *style, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_get(char **defpath, apr_int32_t flags,$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_list_merge(char **liststr,$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_list_split(apr_array_header_t **pathelts,$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_merge(char **newpath,$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_root(const char **rootpath,$/;"	f
APR_DECLARE	file_io\unix\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_set(const char *path, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\unix\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_attrs_set(const char *fname,$/;"	f
APR_DECLARE	file_io\unix\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_info_get(apr_finfo_t *finfo, $/;"	f
APR_DECLARE	file_io\unix\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_mtime_set(const char *fname,$/;"	f
APR_DECLARE	file_io\unix\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_perms_set(const char *fname, $/;"	f
APR_DECLARE	file_io\unix\filestat.c	/^APR_DECLARE(apr_status_t) apr_stat(apr_finfo_t *finfo, $/;"	f
APR_DECLARE	file_io\unix\flock.c	/^APR_DECLARE(apr_status_t) apr_file_lock(apr_file_t *thefile, int type)$/;"	f
APR_DECLARE	file_io\unix\flock.c	/^APR_DECLARE(apr_status_t) apr_file_unlock(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\fullrw.c	/^APR_DECLARE(apr_status_t) apr_file_read_full(apr_file_t *thefile, void *buf,$/;"	f
APR_DECLARE	file_io\unix\fullrw.c	/^APR_DECLARE(apr_status_t) apr_file_write_full(apr_file_t *thefile,$/;"	f
APR_DECLARE	file_io\unix\fullrw.c	/^APR_DECLARE(apr_status_t) apr_file_writev_full(apr_file_t *thefile,$/;"	f
APR_DECLARE	file_io\unix\mktemp.c	/^APR_DECLARE(apr_status_t) apr_file_mktemp(apr_file_t **fp, char *template, apr_int32_t flags, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_close(apr_file_t *file)$/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_eof(apr_file_t *fptr)$/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open(apr_file_t **new, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stderr(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stdin(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stdout(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stderr(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stdin(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stdout(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_remove(const char *path, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_file_rename(const char *from_path, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_os_file_get(apr_os_file_t *thefile, $/;"	f
APR_DECLARE	file_io\unix\open.c	/^APR_DECLARE(apr_status_t) apr_os_file_put(apr_file_t **file, $/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_namedpipe_create(const char *filename, $/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create(apr_file_t **in, apr_file_t **out, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create_ex(apr_file_t **in, $/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_get(apr_file_t *thepipe, apr_interval_time_t *timeout)$/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_set(apr_file_t *thepipe, apr_interval_time_t timeout)$/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\unix\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put_ex(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_datasync(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_flush(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_getc(char *ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_gets(char *str, int len, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_putc(char ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_puts(const char *str, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_read(apr_file_t *thefile, void *buf, apr_size_t *nbytes)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_sync(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_ungetc(char ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_write(apr_file_t *thefile, const void *buf, apr_size_t *nbytes)$/;"	f
APR_DECLARE	file_io\unix\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_writev(apr_file_t *thefile, const struct iovec *vec,$/;"	f
APR_DECLARE	file_io\unix\seek.c	/^APR_DECLARE(apr_status_t) apr_file_seek(apr_file_t *thefile, apr_seek_where_t where, apr_off_t *offset)$/;"	f
APR_DECLARE	file_io\unix\tempdir.c	/^APR_DECLARE(apr_status_t) apr_temp_dir_get(const char **temp_dir, $/;"	f
APR_DECLARE	file_io\win32\buffer.c	/^APR_DECLARE(apr_size_t) apr_file_buffer_size_get(apr_file_t *file)$/;"	f
APR_DECLARE	file_io\win32\buffer.c	/^APR_DECLARE(apr_status_t) apr_file_buffer_set(apr_file_t *file, $/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_close(apr_dir_t *dir)$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_make(const char *path, apr_fileperms_t perm,$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_make_recursive(const char *path,$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_open(apr_dir_t **new, const char *dirname,$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_read(apr_finfo_t *finfo, apr_int32_t wanted,$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_remove(const char *path, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_dir_rewind(apr_dir_t *dir)$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_os_dir_get(apr_os_dir_t **thedir,$/;"	f
APR_DECLARE	file_io\win32\dir.c	/^APR_DECLARE(apr_status_t) apr_os_dir_put(apr_dir_t **dir,$/;"	f
APR_DECLARE	file_io\win32\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_dup(apr_file_t **new_file,$/;"	f
APR_DECLARE	file_io\win32\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_dup2(apr_file_t *new_file,$/;"	f
APR_DECLARE	file_io\win32\filedup.c	/^APR_DECLARE(apr_status_t) apr_file_setaside(apr_file_t **new_file,$/;"	f
APR_DECLARE	file_io\win32\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_encoding(int *style, apr_pool_t *p)$/;"	f
APR_DECLARE	file_io\win32\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_list_merge(char **liststr,$/;"	f
APR_DECLARE	file_io\win32\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_list_split(apr_array_header_t **pathelts,$/;"	f
APR_DECLARE	file_io\win32\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_merge(char **newpath, $/;"	f
APR_DECLARE	file_io\win32\filepath.c	/^APR_DECLARE(apr_status_t) apr_filepath_root(const char **rootpath, $/;"	f
APR_DECLARE	file_io\win32\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_attrs_set(const char *fname,$/;"	f
APR_DECLARE	file_io\win32\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_info_get(apr_finfo_t *finfo, apr_int32_t wanted,$/;"	f
APR_DECLARE	file_io\win32\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_mtime_set(const char *fname,$/;"	f
APR_DECLARE	file_io\win32\filestat.c	/^APR_DECLARE(apr_status_t) apr_file_perms_set(const char *fname,$/;"	f
APR_DECLARE	file_io\win32\filestat.c	/^APR_DECLARE(apr_status_t) apr_stat(apr_finfo_t *finfo, const char *fname,$/;"	f
APR_DECLARE	file_io\win32\filesys.c	/^APR_DECLARE(apr_status_t) apr_filepath_get(char **rootpath, apr_int32_t flags,$/;"	f
APR_DECLARE	file_io\win32\filesys.c	/^APR_DECLARE(apr_status_t) apr_filepath_set(const char *rootpath,$/;"	f
APR_DECLARE	file_io\win32\flock.c	/^APR_DECLARE(apr_status_t) apr_file_lock(apr_file_t *thefile, int type)$/;"	f
APR_DECLARE	file_io\win32\flock.c	/^APR_DECLARE(apr_status_t) apr_file_unlock(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_close(apr_file_t *file)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_eof(apr_file_t *fptr)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_link(const char *from_path, $/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open(apr_file_t **new, const char *fname,$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stderr(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stdin(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_flags_stdout(apr_file_t **thefile, $/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stderr(apr_file_t **thefile, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stdin(apr_file_t **thefile, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_open_stdout(apr_file_t **thefile, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_remove(const char *path, apr_pool_t *pool)$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_file_rename(const char *frompath,$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_os_file_get(apr_os_file_t *thefile,$/;"	f
APR_DECLARE	file_io\win32\open.c	/^APR_DECLARE(apr_status_t) apr_os_file_put(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_namedpipe_create(const char *filename,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create(apr_file_t **in,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_create_ex(apr_file_t **in,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_get(apr_file_t *thepipe,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_file_pipe_timeout_set(apr_file_t *thepipe,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\win32\pipe.c	/^APR_DECLARE(apr_status_t) apr_os_pipe_put_ex(apr_file_t **file,$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_datasync(apr_file_t *thefile){$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_flush(apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_getc(char *ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_gets(char *str, int len, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_putc(char ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_puts(const char *str, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_read(apr_file_t *thefile, void *buf, apr_size_t *len)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_sync(apr_file_t *thefile){$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_ungetc(char ch, apr_file_t *thefile)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_write(apr_file_t *thefile, const void *buf, apr_size_t *nbytes)$/;"	f
APR_DECLARE	file_io\win32\readwrite.c	/^APR_DECLARE(apr_status_t) apr_file_writev(apr_file_t *thefile,$/;"	f
APR_DECLARE	file_io\win32\seek.c	/^APR_DECLARE(apr_status_t) apr_file_seek(apr_file_t *thefile, apr_seek_where_t where, apr_off_t *offset)$/;"	f
APR_DECLARE	file_io\win32\seek.c	/^APR_DECLARE(apr_status_t) apr_file_trunc(apr_file_t *thefile, apr_off_t offset)$/;"	f
APR_DECLARE	include\apr.h	510;"	d
APR_DECLARE	include\apr.h	542;"	d
APR_DECLARE	include\apr.h	546;"	d
APR_DECLARE	include\apr.h	550;"	d
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_os_proc_mutex_put(apr_proc_mutex_t **pmutex,$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_child_init(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_cleanup(void *mutex)$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_create(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_destroy(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_lock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_trylock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_unlock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_broadcast(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\beos\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_create(apr_thread_cond_t **cond,$/;"	f
APR_DECLARE	locks\beos\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_destroy(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\beos\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_signal(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\beos\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_timedwait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\beos\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_wait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\beos\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\beos\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_create_np(apr_thread_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\beos\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_destroy(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_lock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_trylock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_unlock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_create(apr_thread_rwlock_t **rwlock,$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_destroy(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_rdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_tryrdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_trywrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_unlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\beos\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_wrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_child_init(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_cleanup(void *mutex)$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_create(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_destroy(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_lock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_trylock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_unlock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_broadcast(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\netware\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_create(apr_thread_cond_t **cond,$/;"	f
APR_DECLARE	locks\netware\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_destroy(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\netware\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_signal(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\netware\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_timedwait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\netware\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_wait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\netware\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\netware\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_destroy(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_lock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_trylock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_unlock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_create(apr_thread_rwlock_t **rwlock,$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_destroy(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_rdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_tryrdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_trywrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_unlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\netware\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_wrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_os_proc_mutex_put(apr_proc_mutex_t **pmutex,$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_child_init(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_cleanup(void *vmutex)$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_create(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_destroy(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_lock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_trylock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_unlock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_broadcast(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\os2\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_create(apr_thread_cond_t **cond,$/;"	f
APR_DECLARE	locks\os2\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_destroy(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\os2\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_signal(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\os2\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_timedwait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\os2\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_wait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\os2\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\os2\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_destroy(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_lock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_trylock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_unlock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_create(apr_thread_rwlock_t **rwlock,$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_destroy(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_rdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_tryrdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_trywrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_unlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\os2\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_wrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_global_mutex_child_init($/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_global_mutex_create(apr_global_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_global_mutex_destroy(apr_global_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_global_mutex_lock(apr_global_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_global_mutex_trylock(apr_global_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_global_mutex_unlock(apr_global_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\global_mutex.c	/^APR_DECLARE(apr_status_t) apr_os_global_mutex_get(apr_os_global_mutex_t *ospmutex,$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_os_proc_mutex_put(apr_proc_mutex_t **pmutex,$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_child_init(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_cleanup(void *mutex)$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_create(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_destroy(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_lock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_trylock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_unlock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_broadcast(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\unix\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_create(apr_thread_cond_t **cond,$/;"	f
APR_DECLARE	locks\unix\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_destroy(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\unix\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_signal(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\unix\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_timedwait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\unix\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_wait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\unix\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\unix\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_destroy(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_lock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_trylock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_unlock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_create(apr_thread_rwlock_t **rwlock,$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_destroy(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_rdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_tryrdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_trywrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_unlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\unix\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_wrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_os_proc_mutex_put(apr_proc_mutex_t **pmutex,$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_child_init(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_cleanup(void *mutex)$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_create(apr_proc_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_destroy(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_lock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_trylock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\proc_mutex.c	/^APR_DECLARE(apr_status_t) apr_proc_mutex_unlock(apr_proc_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_broadcast(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\win32\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_create(apr_thread_cond_t **cond,$/;"	f
APR_DECLARE	locks\win32\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_destroy(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\win32\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_signal(apr_thread_cond_t *cond)$/;"	f
APR_DECLARE	locks\win32\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_timedwait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\win32\thread_cond.c	/^APR_DECLARE(apr_status_t) apr_thread_cond_wait(apr_thread_cond_t *cond,$/;"	f
APR_DECLARE	locks\win32\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,$/;"	f
APR_DECLARE	locks\win32\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_destroy(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_lock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_trylock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\thread_mutex.c	/^APR_DECLARE(apr_status_t) apr_thread_mutex_unlock(apr_thread_mutex_t *mutex)$/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t) $/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_destroy(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_rdlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_unlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_wrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t)apr_thread_rwlock_create(apr_thread_rwlock_t **rwlock,$/;"	f
APR_DECLARE	locks\win32\thread_rwlock.c	/^APR_DECLARE(apr_status_t)apr_thread_rwlock_trywrlock(apr_thread_rwlock_t *rwlock)$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_abortfunc_t) apr_pool_abort_get(apr_pool_t *pool)$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_size_t) apr_pool_num_bytes(apr_pool_t *pool, int recurse)$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_allocator_create(apr_allocator_t **allocator)$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_cleanup_run(apr_pool_t *p, void *data,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_create_core_ex(apr_pool_t **newpool,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_create_core_ex_debug(apr_pool_t **newpool,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_create_ex(apr_pool_t **newpool,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_create_ex_debug(apr_pool_t **newpool,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_create_unmanaged_ex(apr_pool_t **newpool,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_create_unmanaged_ex_debug(apr_pool_t **newpool,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_initialize(void)$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_userdata_get(void **data, const char *key,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_userdata_set(const void *data, const char *key,$/;"	f
APR_DECLARE	memory\unix\apr_pools.c	/^APR_DECLARE(apr_status_t) apr_pool_userdata_setn(const void *data,$/;"	f
APR_DECLARE	misc\netware\rand.c	/^APR_DECLARE(apr_status_t) apr_generate_random_bytes(unsigned char *buf, $/;"	f
APR_DECLARE	misc\netware\start.c	/^APR_DECLARE(apr_status_t) apr_app_initialize(int *argc, $/;"	f
APR_DECLARE	misc\netware\start.c	/^APR_DECLARE(apr_status_t) apr_initialize(void)$/;"	f
APR_DECLARE	misc\unix\env.c	/^APR_DECLARE(apr_status_t) apr_env_delete(const char *envvar, apr_pool_t *pool)$/;"	f
APR_DECLARE	misc\unix\env.c	/^APR_DECLARE(apr_status_t) apr_env_get(char **value,$/;"	f
APR_DECLARE	misc\unix\env.c	/^APR_DECLARE(apr_status_t) apr_env_set(const char *envvar,$/;"	f
APR_DECLARE	misc\unix\getopt.c	/^APR_DECLARE(apr_status_t) apr_getopt(apr_getopt_t *os, const char *opts, $/;"	f
APR_DECLARE	misc\unix\getopt.c	/^APR_DECLARE(apr_status_t) apr_getopt_init(apr_getopt_t **os, apr_pool_t *cont,$/;"	f
APR_DECLARE	misc\unix\getopt.c	/^APR_DECLARE(apr_status_t) apr_getopt_long(apr_getopt_t *os,$/;"	f
APR_DECLARE	misc\unix\otherchild.c	/^APR_DECLARE(apr_status_t) apr_proc_other_child_alert(apr_proc_t *proc,$/;"	f
APR_DECLARE	misc\unix\rand.c	/^APR_DECLARE(apr_status_t) apr_generate_random_bytes(unsigned char *buf, $/;"	f
APR_DECLARE	misc\unix\rand.c	/^APR_DECLARE(apr_status_t) apr_os_uuid_get(unsigned char *uuid_data)$/;"	f
APR_DECLARE	misc\unix\start.c	/^APR_DECLARE(apr_status_t) apr_app_initialize(int *argc, $/;"	f
APR_DECLARE	misc\unix\start.c	/^APR_DECLARE(apr_status_t) apr_initialize(void)$/;"	f
APR_DECLARE	misc\win32\env.c	/^APR_DECLARE(apr_status_t) apr_env_delete(const char *envvar, apr_pool_t *pool)$/;"	f
APR_DECLARE	misc\win32\env.c	/^APR_DECLARE(apr_status_t) apr_env_get(char **value,$/;"	f
APR_DECLARE	misc\win32\env.c	/^APR_DECLARE(apr_status_t) apr_env_set(const char *envvar,$/;"	f
APR_DECLARE	misc\win32\rand.c	/^APR_DECLARE(apr_status_t) apr_generate_random_bytes(unsigned char * buf,$/;"	f
APR_DECLARE	misc\win32\rand.c	/^APR_DECLARE(apr_status_t) apr_os_uuid_get(unsigned char *uuid_data)$/;"	f
APR_DECLARE	misc\win32\start.c	/^APR_DECLARE(apr_status_t) apr_app_initialize(int *argc,$/;"	f
APR_DECLARE	misc\win32\start.c	/^APR_DECLARE(apr_status_t) apr_initialize(void)$/;"	f
APR_DECLARE	misc\win32\utf8.c	/^APR_DECLARE(apr_status_t) apr_conv_ucs2_to_utf8(const apr_wchar_t *in, $/;"	f
APR_DECLARE	misc\win32\utf8.c	/^APR_DECLARE(apr_status_t) apr_conv_utf8_to_ucs2(const char *in, $/;"	f
APR_DECLARE	mmap\unix\common.c	/^APR_DECLARE(apr_status_t) apr_mmap_offset(void **addr, apr_mmap_t *mmap,$/;"	f
APR_DECLARE	mmap\unix\mmap.c	/^APR_DECLARE(apr_status_t) apr_mmap_create(apr_mmap_t **new, $/;"	f
APR_DECLARE	mmap\unix\mmap.c	/^APR_DECLARE(apr_status_t) apr_mmap_delete(apr_mmap_t *mm)$/;"	f
APR_DECLARE	mmap\unix\mmap.c	/^APR_DECLARE(apr_status_t) apr_mmap_dup(apr_mmap_t **new_mmap,$/;"	f
APR_DECLARE	mmap\win32\mmap.c	/^APR_DECLARE(apr_status_t) apr_mmap_create(apr_mmap_t **new, apr_file_t *file,$/;"	f
APR_DECLARE	mmap\win32\mmap.c	/^APR_DECLARE(apr_status_t) apr_mmap_delete(apr_mmap_t *mm)$/;"	f
APR_DECLARE	mmap\win32\mmap.c	/^APR_DECLARE(apr_status_t) apr_mmap_dup(apr_mmap_t **new_mmap,$/;"	f
APR_DECLARE	network_io\beos\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_recv(apr_socket_t *sock, char *buf, $/;"	f
APR_DECLARE	network_io\beos\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_recvfrom(apr_sockaddr_t *from,$/;"	f
APR_DECLARE	network_io\beos\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_send(apr_socket_t *sock, const char *buf,$/;"	f
APR_DECLARE	network_io\beos\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_sendto(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\beos\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_sendv(apr_socket_t * sock, $/;"	f
APR_DECLARE	network_io\os2\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_recv(apr_socket_t *sock, char *buf,$/;"	f
APR_DECLARE	network_io\os2\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_send(apr_socket_t *sock, const char *buf,$/;"	f
APR_DECLARE	network_io\os2\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_sendv(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\os2\sendrecv_udp.c	/^APR_DECLARE(apr_status_t) apr_socket_recvfrom(apr_sockaddr_t *from,$/;"	f
APR_DECLARE	network_io\os2\sendrecv_udp.c	/^APR_DECLARE(apr_status_t) apr_socket_sendto(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_os_sock_get(apr_os_sock_t *thesock, apr_socket_t *sock)$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_os_sock_make(apr_socket_t **apr_sock, $/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_os_sock_put(apr_socket_t **sock, apr_os_sock_t *thesock, apr_pool_t *cont)$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_accept(apr_socket_t **new, $/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_bind(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_close(apr_socket_t *thesocket)$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_connect(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_create(apr_socket_t **new, int family, int type,$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_data_set(apr_socket_t *sock, void *data, const char *key,$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_listen(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_protocol_get(apr_socket_t *sock, int *protocol)$/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_shutdown(apr_socket_t *thesocket, $/;"	f
APR_DECLARE	network_io\os2\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_type_get(apr_socket_t *sock, int *type)$/;"	f
APR_DECLARE	network_io\os2\sockopt.c	/^APR_DECLARE(apr_status_t) apr_gethostname(char *buf, apr_int32_t len, $/;"	f
APR_DECLARE	network_io\os2\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_atmark(apr_socket_t *sock, int *atmark)$/;"	f
APR_DECLARE	network_io\os2\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_opt_get(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\os2\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_opt_set(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\os2\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_timeout_get(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\os2\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_timeout_set(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\unix\multicast.c	/^APR_DECLARE(apr_status_t) apr_mcast_hops(apr_socket_t *sock, apr_byte_t ttl)$/;"	f
APR_DECLARE	network_io\unix\multicast.c	/^APR_DECLARE(apr_status_t) apr_mcast_interface(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\unix\multicast.c	/^APR_DECLARE(apr_status_t) apr_mcast_join(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\unix\multicast.c	/^APR_DECLARE(apr_status_t) apr_mcast_leave(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\unix\multicast.c	/^APR_DECLARE(apr_status_t) apr_mcast_loopback(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_getnameinfo(char **hostname,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_getservbyname(apr_sockaddr_t *sockaddr,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_ipsubnet_create(apr_ipsubnet_t **ipsub, const char *ipstr, $/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_parse_addr_port(char **addr,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_sockaddr_info_get(apr_sockaddr_t **sa,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_sockaddr_ip_get(char **addr,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_sockaddr_ip_getbuf(char *buf, apr_size_t buflen,$/;"	f
APR_DECLARE	network_io\unix\sockaddr.c	/^APR_DECLARE(apr_status_t) apr_socket_addr_get(apr_sockaddr_t **sa,$/;"	f
APR_DECLARE	network_io\unix\socket_util.c	/^APR_DECLARE(apr_status_t) apr_socket_atreadeof(apr_socket_t *sock, int *atreadeof)$/;"	f
APR_DECLARE	network_io\win32\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_recv(apr_socket_t *sock, char *buf,$/;"	f
APR_DECLARE	network_io\win32\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_recvfrom(apr_sockaddr_t *from, $/;"	f
APR_DECLARE	network_io\win32\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_send(apr_socket_t *sock, const char *buf,$/;"	f
APR_DECLARE	network_io\win32\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_sendfile(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\win32\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_sendto(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sendrecv.c	/^APR_DECLARE(apr_status_t) apr_socket_sendv(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_os_sock_get(apr_os_sock_t *thesock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_os_sock_make(apr_socket_t **apr_sock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_os_sock_put(apr_socket_t **sock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_accept(apr_socket_t **new, $/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_bind(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_close(apr_socket_t *thesocket)$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_connect(apr_socket_t *sock, $/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_create(apr_socket_t **new, int family,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_data_set(apr_socket_t *sock, void *data,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_inherit_set(apr_socket_t *socket)    $/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_inherit_unset(apr_socket_t *socket)    $/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_listen(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_protocol_get(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_shutdown(apr_socket_t *thesocket,$/;"	f
APR_DECLARE	network_io\win32\sockets.c	/^APR_DECLARE(apr_status_t) apr_socket_type_get(apr_socket_t *sock, int *type)$/;"	f
APR_DECLARE	network_io\win32\sockopt.c	/^APR_DECLARE(apr_status_t) apr_gethostname(char *buf, int len,$/;"	f
APR_DECLARE	network_io\win32\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_atmark(apr_socket_t *sock, int *atmark)$/;"	f
APR_DECLARE	network_io\win32\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_opt_get(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_opt_set(apr_socket_t *sock,$/;"	f
APR_DECLARE	network_io\win32\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_timeout_get(apr_socket_t *sock, apr_interval_time_t *t)$/;"	f
APR_DECLARE	network_io\win32\sockopt.c	/^APR_DECLARE(apr_status_t) apr_socket_timeout_set(apr_socket_t *sock, apr_interval_time_t t)$/;"	f
APR_DECLARE	passwd\apr_getpass.c	/^APR_DECLARE(apr_status_t) apr_password_get(const char *prompt, char *pwbuf, apr_size_t *bufsiz)$/;"	f
APR_DECLARE	poll\os2\poll.c	/^APR_DECLARE(apr_status_t) apr_poll(apr_pollfd_t *aprset, apr_int32_t num,$/;"	f
APR_DECLARE	poll\os2\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_add(apr_pollset_t *pollset,$/;"	f
APR_DECLARE	poll\os2\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_create(apr_pollset_t **pollset,$/;"	f
APR_DECLARE	poll\os2\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_create_ex(apr_pollset_t **pollset,$/;"	f
APR_DECLARE	poll\os2\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_destroy(apr_pollset_t *pollset)$/;"	f
APR_DECLARE	poll\os2\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_poll(apr_pollset_t *pollset,$/;"	f
APR_DECLARE	poll\os2\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_remove(apr_pollset_t *pollset,$/;"	f
APR_DECLARE	poll\unix\poll.c	/^APR_DECLARE(apr_status_t) apr_poll(apr_pollfd_t *aprset, apr_int32_t num,$/;"	f
APR_DECLARE	poll\unix\pollcb.c	/^APR_DECLARE(apr_status_t) apr_pollcb_add(apr_pollcb_t *pollcb,$/;"	f
APR_DECLARE	poll\unix\pollcb.c	/^APR_DECLARE(apr_status_t) apr_pollcb_create(apr_pollcb_t **pollcb,$/;"	f
APR_DECLARE	poll\unix\pollcb.c	/^APR_DECLARE(apr_status_t) apr_pollcb_create_ex(apr_pollcb_t **ret_pollcb,$/;"	f
APR_DECLARE	poll\unix\pollcb.c	/^APR_DECLARE(apr_status_t) apr_pollcb_poll(apr_pollcb_t *pollcb,$/;"	f
APR_DECLARE	poll\unix\pollcb.c	/^APR_DECLARE(apr_status_t) apr_pollcb_remove(apr_pollcb_t *pollcb,$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_add(apr_pollset_t *pollset,$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_create(apr_pollset_t **pollset,$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_create_ex(apr_pollset_t **ret_pollset,$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_destroy(apr_pollset_t * pollset)$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_poll(apr_pollset_t *pollset,$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_remove(apr_pollset_t *pollset,$/;"	f
APR_DECLARE	poll\unix\pollset.c	/^APR_DECLARE(apr_status_t) apr_pollset_wakeup(apr_pollset_t *pollset)$/;"	f
APR_DECLARE	poll\unix\select.c	/^APR_DECLARE(apr_status_t) apr_poll(apr_pollfd_t *aprset, int num,$/;"	f
APR_DECLARE	random\unix\apr_random.c	/^APR_DECLARE(apr_status_t) apr_random_insecure_bytes(apr_random_t *g,$/;"	f
APR_DECLARE	random\unix\apr_random.c	/^APR_DECLARE(apr_status_t) apr_random_insecure_ready(apr_random_t *r)$/;"	f
APR_DECLARE	random\unix\apr_random.c	/^APR_DECLARE(apr_status_t) apr_random_secure_bytes(apr_random_t *g,$/;"	f
APR_DECLARE	random\unix\apr_random.c	/^APR_DECLARE(apr_status_t) apr_random_secure_ready(apr_random_t *r)$/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_size_t) apr_shm_size_get(const apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_status_t) apr_os_shm_put(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_attach(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_create(apr_shm_t **m, $/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_destroy(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_detach(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\beos\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_remove(const char *filename,$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_size_t) apr_shm_size_get(const apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_status_t) apr_os_shm_put(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_attach(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_create(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_destroy(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_detach(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\os2\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_remove(const char *filename,$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_size_t) apr_shm_size_get(const apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_status_t) apr_os_shm_put(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_attach(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_create(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_destroy(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_detach(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\unix\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_remove(const char *filename,$/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_size_t) apr_shm_size_get(const apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_status_t) apr_os_shm_put(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_attach(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_create(apr_shm_t **m,$/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_destroy(apr_shm_t *m) $/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_detach(apr_shm_t *m)$/;"	f
APR_DECLARE	shmem\win32\shm.c	/^APR_DECLARE(apr_status_t) apr_shm_remove(const char *filename,$/;"	f
APR_DECLARE	strings\apr_cpystrn.c	/^APR_DECLARE(apr_status_t) apr_tokenize_to_argv(const char *arg_str, $/;"	f
APR_DECLARE	strings\apr_fnmatch.c	/^APR_DECLARE(apr_status_t) apr_match_glob(const char *pattern, $/;"	f
APR_DECLARE	strings\apr_strings.c	/^APR_DECLARE(apr_int64_t) apr_atoi64(const char *buf)$/;"	f
APR_DECLARE	strings\apr_strings.c	/^APR_DECLARE(apr_int64_t) apr_strtoi64(const char *nptr, char **endptr, int base)$/;"	f
APR_DECLARE	strings\apr_strings.c	/^APR_DECLARE(apr_status_t) apr_strtoff(apr_off_t *offset, const char *nptr,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_create(apr_proc_t *new, const char *progname, $/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_fork(apr_proc_t *proc, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait_all_procs(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_addrspace_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_errfn_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_in_set(apr_procattr_t *attr, apr_file_t *child_in,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_cmdtype_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_create(apr_procattr_t **new, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_detach_set(apr_procattr_t *attr, apr_int32_t detach) $/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_dir_set(apr_procattr_t *attr, $/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_error_check_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_io_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_os_thread_t) apr_os_thread_current(void)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_get(apr_os_thread_t **thethd, apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_put(apr_thread_t **thd, apr_os_thread_t *thethd, $/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_create(apr_thread_t **new, apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_get(void **data, const char *key, apr_thread_t *thread)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_detach(apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_exit(apr_thread_t *thd, apr_status_t retval)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_join(apr_status_t *retval, apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once(apr_thread_once_t *control, $/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once_init(apr_thread_once_t **control,$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_create(apr_threadattr_t **new, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_get(apr_threadattr_t *attr)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_set(apr_threadattr_t *attr, apr_int32_t on)$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_guardsize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_stacksize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_get(apr_os_threadkey_t *thekey, apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_put(apr_threadkey_t **key, $/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_create(apr_threadkey_t **key,$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_delete(apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_get(void **new, apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\beos\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_set(void *priv, apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_create(apr_proc_t *newproc,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_fork(apr_proc_t *proc, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait_all_procs(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_addrspace_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_err_set(apr_procattr_t *attr, apr_file_t *child_err,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_errfn_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_in_set(apr_procattr_t *attr, apr_file_t *child_in,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_out_set(apr_procattr_t *attr, apr_file_t *child_out,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_cmdtype_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_create(apr_procattr_t **new,apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_detach_set(apr_procattr_t *attr, apr_int32_t detach) $/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_dir_set(apr_procattr_t *attr, $/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_error_check_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_group_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_io_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_limit_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_user_set(apr_procattr_t *attr, $/;"	f
APR_DECLARE	threadproc\netware\signals.c	/^APR_DECLARE(apr_status_t) apr_proc_kill(apr_proc_t *proc, int signum)$/;"	f
APR_DECLARE	threadproc\netware\signals.c	/^APR_DECLARE(apr_status_t) apr_setup_signal_thread(void)$/;"	f
APR_DECLARE	threadproc\netware\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_block(int signum)$/;"	f
APR_DECLARE	threadproc\netware\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_unblock(int signum)$/;"	f
APR_DECLARE	threadproc\netware\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_get(apr_os_thread_t **thethd,$/;"	f
APR_DECLARE	threadproc\netware\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_put(apr_thread_t **thd,$/;"	f
APR_DECLARE	threadproc\netware\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once(apr_thread_once_t *control,$/;"	f
APR_DECLARE	threadproc\netware\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once_init(apr_thread_once_t **control,$/;"	f
APR_DECLARE	threadproc\netware\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_guardsize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\netware\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_stacksize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_create(apr_proc_t *proc, const char *progname,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_detach(int daemonize)$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_fork(apr_proc_t *proc, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait_all_procs(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_addrspace_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_err_set(apr_procattr_t *attr, apr_file_t *child_err,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_errfn_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_in_set(apr_procattr_t *attr, apr_file_t *child_in,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_out_set(apr_procattr_t *attr, apr_file_t *child_out,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_cmdtype_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_create(apr_procattr_t **new, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_detach_set(apr_procattr_t *attr, apr_int32_t detach) $/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_dir_set(apr_procattr_t *attr, const char *dir)$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_error_check_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_group_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_io_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_user_set(apr_procattr_t *attr, $/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_os_thread_t) apr_os_thread_current()$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_get(apr_os_thread_t **thethd, apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_put(apr_thread_t **thd, apr_os_thread_t *thethd, $/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_create(apr_thread_t **new, apr_threadattr_t *attr, $/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_get(void **data, const char *key, apr_thread_t *thread)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_detach(apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_exit(apr_thread_t *thd, apr_status_t retval)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_join(apr_status_t *retval, apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once(apr_thread_once_t *control, $/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once_init(apr_thread_once_t **control,$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_create(apr_threadattr_t **new, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_get(apr_threadattr_t *attr)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_set(apr_threadattr_t *attr, apr_int32_t on)$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_guardsize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_stacksize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_get(apr_os_threadkey_t *thekey, apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_put(apr_threadkey_t **key, $/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_create(apr_threadkey_t **key,$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_delete(apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_get(void **new, apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\os2\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_set(void *priv, apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_create(apr_proc_t *new,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_fork(apr_proc_t *proc, apr_pool_t *pool)$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait_all_procs(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_addrspace_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_err_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_errfn_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_in_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_out_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_cmdtype_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_create(apr_procattr_t **new,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_detach_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_dir_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_error_check_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_group_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_io_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_limit_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_user_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\procsup.c	/^APR_DECLARE(apr_status_t) apr_proc_detach(int daemonize)$/;"	f
APR_DECLARE	threadproc\unix\signals.c	/^APR_DECLARE(apr_status_t) apr_proc_kill(apr_proc_t *proc, int signum)$/;"	f
APR_DECLARE	threadproc\unix\signals.c	/^APR_DECLARE(apr_status_t) apr_setup_signal_thread(void)$/;"	f
APR_DECLARE	threadproc\unix\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_block(int signum)$/;"	f
APR_DECLARE	threadproc\unix\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_thread(int(*signal_handler)(int signum))$/;"	f
APR_DECLARE	threadproc\unix\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_unblock(int signum)$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_os_thread_t) apr_os_thread_current(void)$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_get(apr_os_thread_t **thethd,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_put(apr_thread_t **thd,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_create(apr_thread_t **new,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_detach(apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_exit(apr_thread_t *thd,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_join(apr_status_t *retval,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once(apr_thread_once_t *control,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once_init(apr_thread_once_t **control,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_create(apr_threadattr_t **new,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_get(apr_threadattr_t *attr)$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_guardsize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_stacksize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_get(apr_os_threadkey_t *thekey,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_put(apr_threadkey_t **key,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_create(apr_threadkey_t **key,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_delete(apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_get(void **new,$/;"	f
APR_DECLARE	threadproc\unix\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_set(void *priv,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_create(apr_proc_t *new,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_detach(int daemonize)$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_proc_wait_all_procs(apr_proc_t *proc,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_addrspace_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_err_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_errfn_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_in_set(apr_procattr_t *attr, $/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_child_out_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_cmdtype_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_create(apr_procattr_t **new,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_detach_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_dir_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_error_check_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_group_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_io_set(apr_procattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\proc.c	/^APR_DECLARE(apr_status_t) apr_procattr_user_set(apr_procattr_t *attr, $/;"	f
APR_DECLARE	threadproc\win32\signals.c	/^APR_DECLARE(apr_status_t) apr_proc_kill(apr_proc_t *proc, int signal)$/;"	f
APR_DECLARE	threadproc\win32\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_block(int signum)$/;"	f
APR_DECLARE	threadproc\win32\signals.c	/^APR_DECLARE(apr_status_t) apr_signal_unblock(int signum)$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_os_thread_t) apr_os_thread_current(void)$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_get(apr_os_thread_t **thethd,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_os_thread_put(apr_thread_t **thd,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_create(apr_thread_t **new,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_detach(apr_thread_t *thd)$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_exit(apr_thread_t *thd,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_join(apr_status_t *retval,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once(apr_thread_once_t *control,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_thread_once_init(apr_thread_once_t **control,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_create(apr_threadattr_t **new,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_get(apr_threadattr_t *attr)$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_guardsize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\thread.c	/^APR_DECLARE(apr_status_t) apr_threadattr_stacksize_set(apr_threadattr_t *attr,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_get(apr_os_threadkey_t *thekey,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_os_threadkey_put(apr_threadkey_t **key,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_get(void **data, const char *key,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_data_set(void *data, const char *key,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_create(apr_threadkey_t **key,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_delete(apr_threadkey_t *key)$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_get(void **new,$/;"	f
APR_DECLARE	threadproc\win32\threadpriv.c	/^APR_DECLARE(apr_status_t) apr_threadkey_private_set(void *priv,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_apr_time_to_os2_time(FDATE *os2date,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_os2_time_to_apr_time(apr_time_t *result,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_os_exp_time_get(apr_os_exp_time_t **ostime,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_os_exp_time_put(apr_time_exp_t *aprtime,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_os_imp_time_get(apr_os_imp_time_t **ostime,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_os_imp_time_put(apr_time_t *aprtime,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_time_ansi_put(apr_time_t *result,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_get(apr_time_t *t, apr_time_exp_t *xt)$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_gmt(apr_time_exp_t *result,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_gmt_get(apr_time_t *t, $/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_lt(apr_time_exp_t *result,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_tz(apr_time_exp_t *result,$/;"	f
APR_DECLARE	time\unix\time.c	/^APR_DECLARE(apr_time_t) apr_time_now(void)$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_os_exp_time_get(apr_os_exp_time_t **ostime, $/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_os_exp_time_put(apr_time_exp_t *aprtime,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_os_imp_time_get(apr_os_imp_time_t **ostime,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_os_imp_time_put(apr_time_t *aprtime,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_time_ansi_put(apr_time_t *result, $/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_get(apr_time_t *t,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_gmt(apr_time_exp_t *result,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_gmt_get(apr_time_t *t,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_lt(apr_time_exp_t *result,$/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_status_t) apr_time_exp_tz(apr_time_exp_t *result, $/;"	f
APR_DECLARE	time\win32\time.c	/^APR_DECLARE(apr_time_t) apr_time_now(void)$/;"	f
APR_DECLARE	time\win32\timestr.c	/^APR_DECLARE(apr_status_t) apr_ctime(char *date_str, apr_time_t t)$/;"	f
APR_DECLARE	time\win32\timestr.c	/^APR_DECLARE(apr_status_t) apr_rfc822_date(char *date_str, apr_time_t t)$/;"	f
APR_DECLARE	time\win32\timestr.c	/^APR_DECLARE(apr_status_t) apr_strftime(char *s, apr_size_t *retsize,$/;"	f
APR_DECLARE	user\netware\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_get(apr_gid_t *groupid, $/;"	f
APR_DECLARE	user\netware\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_name_get(char **groupname, apr_gid_t groupid,$/;"	f
APR_DECLARE	user\netware\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_current(apr_uid_t *uid,$/;"	f
APR_DECLARE	user\netware\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_get(apr_uid_t *uid, apr_gid_t *gid,$/;"	f
APR_DECLARE	user\netware\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_homepath_get(char **dirname,$/;"	f
APR_DECLARE	user\netware\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_name_get(char **username, apr_uid_t userid,$/;"	f
APR_DECLARE	user\unix\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_get(apr_gid_t *groupid, $/;"	f
APR_DECLARE	user\unix\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_name_get(char **groupname, apr_gid_t groupid,$/;"	f
APR_DECLARE	user\unix\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_current(apr_uid_t *uid,$/;"	f
APR_DECLARE	user\unix\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_get(apr_uid_t *uid, apr_gid_t *gid,$/;"	f
APR_DECLARE	user\unix\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_homepath_get(char **dirname,$/;"	f
APR_DECLARE	user\unix\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_name_get(char **username, apr_uid_t userid,$/;"	f
APR_DECLARE	user\win32\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_compare(apr_gid_t left, apr_gid_t right)$/;"	f
APR_DECLARE	user\win32\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_get(apr_gid_t *gid, $/;"	f
APR_DECLARE	user\win32\groupinfo.c	/^APR_DECLARE(apr_status_t) apr_gid_name_get(char **groupname, apr_gid_t groupid, apr_pool_t *p)$/;"	f
APR_DECLARE	user\win32\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_compare(apr_uid_t left, apr_uid_t right)$/;"	f
APR_DECLARE	user\win32\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_current(apr_uid_t *uid,$/;"	f
APR_DECLARE	user\win32\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_get(apr_uid_t *uid, apr_gid_t *gid,$/;"	f
APR_DECLARE	user\win32\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_homepath_get(char **dirname, $/;"	f
APR_DECLARE	user\win32\userinfo.c	/^APR_DECLARE(apr_status_t) apr_uid_name_get(char **username, apr_uid_t userid,$/;"	f
APR_DECLARE_DATA	include\apr.h	539;"	d
APR_DECLARE_DATA	include\apr.h	544;"	d
APR_DECLARE_DATA	include\apr.h	548;"	d
APR_DECLARE_DATA	include\apr.h	552;"	d
APR_DECLARE_INHERIT_SET	include\apr_inherit.h	35;"	d
APR_DECLARE_INHERIT_UNSET	include\apr_inherit.h	47;"	d
APR_DECLARE_LATE_DLL_FUNC	include\arch\win32\apr_arch_misc.h	189;"	d
APR_DECLARE_NONSTD	include\apr.h	523;"	d
APR_DECLARE_NONSTD	include\apr.h	543;"	d
APR_DECLARE_NONSTD	include\apr.h	547;"	d
APR_DECLARE_NONSTD	include\apr.h	551;"	d
APR_DECLARE_NONSTD	memory\unix\apr_pools.c	/^APR_DECLARE_NONSTD(apr_status_t) apr_pool_cleanup_null(void *data)$/;"	f
APR_DECLARE_NONSTD	misc\win32\misc.c	/^APR_DECLARE_NONSTD(HANDLE) apr_dbg_log(char* fn, HANDLE ha, char* fl, int ln, $/;"	f
APR_DEFAULT_STACK_SIZE	include\arch\netware\apr_arch_threadproc.h	27;"	d
APR_DELONCLOSE	include\apr_file_io.h	93;"	d
APR_DELTA_EPOCH_IN_USEC	include\arch\win32\apr_arch_atime.h	36;"	d
APR_DETACH	include\apr_errno.h	440;"	d
APR_DIR	include\apr_file_info.h	/^    APR_DIR,            \/**< a directory *\/$/;"	e	enum:__anon9
APR_DSOPATH	include\apr.h	590;"	d
APR_DSO_DOT_H	include\apr_dso.h	18;"	d
APR_DWORD_MAX	include\arch\netware\apr_private.h	197;"	d
APR_DWORD_MAX	include\arch\win32\apr_private.h	165;"	d
APR_EABOVEROOT	include\apr_errno.h	328;"	d
APR_EABSOLUTE	include\apr_errno.h	322;"	d
APR_EACCES	include\apr_errno.h	637;"	d
APR_EACCES	include\apr_errno.h	639;"	d
APR_EAFNOSUPPORT	include\apr_errno.h	829;"	d
APR_EAFNOSUPPORT	include\apr_errno.h	831;"	d
APR_EAGAIN	include\apr_errno.h	724;"	d
APR_EAGAIN	include\apr_errno.h	726;"	d
APR_EAGAIN	include\apr_errno.h	728;"	d
APR_EBADDATE	include\apr_errno.h	291;"	d
APR_EBADF	include\apr_errno.h	700;"	d
APR_EBADF	include\apr_errno.h	702;"	d
APR_EBADIP	include\apr_errno.h	315;"	d
APR_EBADMASK	include\apr_errno.h	317;"	d
APR_EBADPATH	include\apr_errno.h	330;"	d
APR_EBUSY	include\apr_errno.h	478;"	d
APR_ECONNABORTED	include\apr_errno.h	765;"	d
APR_ECONNABORTED	include\apr_errno.h	767;"	d
APR_ECONNREFUSED	include\apr_errno.h	747;"	d
APR_ECONNREFUSED	include\apr_errno.h	749;"	d
APR_ECONNRESET	include\apr_errno.h	772;"	d
APR_ECONNRESET	include\apr_errno.h	774;"	d
APR_EDSOOPEN	include\apr_errno.h	320;"	d
APR_EEXIST	include\apr_errno.h	644;"	d
APR_EEXIST	include\apr_errno.h	646;"	d
APR_EFTYPE	include\apr_errno.h	801;"	d
APR_EFTYPE	include\apr_errno.h	803;"	d
APR_EGENERAL	include\apr_errno.h	311;"	d
APR_EHOSTUNREACH	include\apr_errno.h	787;"	d
APR_EHOSTUNREACH	include\apr_errno.h	789;"	d
APR_EINCOMPLETE	include\apr_errno.h	326;"	d
APR_EINIT	include\apr_errno.h	472;"	d
APR_EINPROGRESS	include\apr_errno.h	754;"	d
APR_EINPROGRESS	include\apr_errno.h	756;"	d
APR_EINTR	include\apr_errno.h	733;"	d
APR_EINTR	include\apr_errno.h	735;"	d
APR_EINVAL	include\apr_errno.h	707;"	d
APR_EINVAL	include\apr_errno.h	709;"	d
APR_EINVALSOCK	include\apr_errno.h	293;"	d
APR_EMFILE	include\apr_errno.h	686;"	d
APR_EMFILE	include\apr_errno.h	688;"	d
APR_EMISMATCH	include\apr_errno.h	476;"	d
APR_ENAMETOOLONG	include\apr_errno.h	651;"	d
APR_ENAMETOOLONG	include\apr_errno.h	653;"	d
APR_END	include\apr_file_io.h	135;"	d
APR_END_DECLS	include\apr.h	469;"	d
APR_END_DECLS	include\apr.h	472;"	d
APR_ENETUNREACH	include\apr_errno.h	794;"	d
APR_ENETUNREACH	include\apr_errno.h	796;"	d
APR_ENFILE	include\apr_errno.h	693;"	d
APR_ENFILE	include\apr_errno.h	695;"	d
APR_ENODIR	include\apr_errno.h	299;"	d
APR_ENOENT	include\apr_errno.h	658;"	d
APR_ENOENT	include\apr_errno.h	660;"	d
APR_ENOLOCK	include\apr_errno.h	301;"	d
APR_ENOMEM	include\apr_errno.h	679;"	d
APR_ENOMEM	include\apr_errno.h	681;"	d
APR_ENOPOLL	include\apr_errno.h	303;"	d
APR_ENOPOOL	include\apr_errno.h	288;"	d
APR_ENOPROC	include\apr_errno.h	295;"	d
APR_ENOSHMAVAIL	include\apr_errno.h	313;"	d
APR_ENOSOCKET	include\apr_errno.h	305;"	d
APR_ENOSPC	include\apr_errno.h	672;"	d
APR_ENOSPC	include\apr_errno.h	674;"	d
APR_ENOSTAT	include\apr_errno.h	286;"	d
APR_ENOTDIR	include\apr_errno.h	665;"	d
APR_ENOTDIR	include\apr_errno.h	667;"	d
APR_ENOTEMPTY	include\apr_errno.h	822;"	d
APR_ENOTEMPTY	include\apr_errno.h	824;"	d
APR_ENOTENOUGHENTROPY	include\apr_errno.h	338;"	d
APR_ENOTHDKEY	include\apr_errno.h	309;"	d
APR_ENOTHREAD	include\apr_errno.h	307;"	d
APR_ENOTIME	include\apr_errno.h	297;"	d
APR_ENOTIMPL	include\apr_errno.h	474;"	d
APR_ENOTSOCK	include\apr_errno.h	740;"	d
APR_ENOTSOCK	include\apr_errno.h	742;"	d
APR_ENV_H	include\apr_env.h	18;"	d
APR_EOF	include\apr_errno.h	459;"	d
APR_EOL_STR	include\apr.h	579;"	d
APR_EPATHWILD	include\apr_errno.h	332;"	d
APR_EPIPE	include\apr_errno.h	808;"	d
APR_EPIPE	include\apr_errno.h	810;"	d
APR_EPROC_UNKNOWN	include\apr_errno.h	336;"	d
APR_ERELATIVE	include\apr_errno.h	324;"	d
APR_ERRNO_H	include\apr_errno.h	18;"	d
APR_ESPIPE	include\apr_errno.h	714;"	d
APR_ESPIPE	include\apr_errno.h	716;"	d
APR_ESYMNOTFOUND	include\apr_errno.h	334;"	d
APR_ETIMEDOUT	include\apr_errno.h	780;"	d
APR_ETIMEDOUT	include\apr_errno.h	782;"	d
APR_EXCL	include\apr_file_io.h	91;"	d
APR_EXDEV	include\apr_errno.h	815;"	d
APR_EXDEV	include\apr_errno.h	817;"	d
APR_FILEBASED	include\apr_errno.h	468;"	d
APR_FILEPATH_ENCODING_LOCALE	include\apr_file_info.h	407;"	d
APR_FILEPATH_ENCODING_UNKNOWN	include\apr_file_info.h	404;"	d
APR_FILEPATH_ENCODING_UTF8	include\apr_file_info.h	410;"	d
APR_FILEPATH_NATIVE	include\apr_file_info.h	305;"	d
APR_FILEPATH_NOTABOVEROOT	include\apr_file_info.h	287;"	d
APR_FILEPATH_NOTABSOLUTE	include\apr_file_info.h	301;"	d
APR_FILEPATH_NOTRELATIVE	include\apr_file_info.h	298;"	d
APR_FILEPATH_SECUREROOT	include\apr_file_info.h	295;"	d
APR_FILEPATH_SECUREROOTTEST	include\apr_file_info.h	290;"	d
APR_FILEPATH_TRUENAME	include\apr_file_info.h	311;"	d
APR_FILES_AS_SOCKETS	include\apr.h	334;"	d
APR_FILE_ATTR_EXECUTABLE	include\apr_file_io.h	145;"	d
APR_FILE_ATTR_HIDDEN	include\apr_file_io.h	146;"	d
APR_FILE_ATTR_READONLY	include\apr_file_io.h	144;"	d
APR_FILE_BUFSIZE	include\arch\netware\apr_arch_file_io.h	74;"	d
APR_FILE_BUFSIZE	include\arch\os2\apr_arch_file_io.h	35;"	d
APR_FILE_BUFSIZE	include\arch\unix\apr_arch_file_io.h	91;"	d
APR_FILE_BUFSIZE	include\arch\win32\apr_arch_file_io.h	87;"	d
APR_FILE_DEFAULT_BUFSIZE	include\arch\netware\apr_arch_file_io.h	72;"	d
APR_FILE_DEFAULT_BUFSIZE	include\arch\os2\apr_arch_file_io.h	34;"	d
APR_FILE_DEFAULT_BUFSIZE	include\arch\unix\apr_arch_file_io.h	89;"	d
APR_FILE_DEFAULT_BUFSIZE	include\arch\win32\apr_arch_file_io.h	85;"	d
APR_FILE_INFO_H	include\apr_file_info.h	18;"	d
APR_FILE_IO_H	include\apr_file_io.h	18;"	d
APR_FILE_MAX	include\arch\win32\apr_arch_file_io.h	83;"	d
APR_FILE_NOCLEANUP	include\apr_file_io.h	96;"	d
APR_FILE_SOURCE_PERMS	include\apr_file_info.h	113;"	d
APR_FINFO_ATIME	include\apr_file_info.h	148;"	d
APR_FINFO_CSIZE	include\apr_file_info.h	150;"	d
APR_FINFO_CTIME	include\apr_file_info.h	147;"	d
APR_FINFO_DEV	include\apr_file_info.h	151;"	d
APR_FINFO_DIRENT	include\apr_file_info.h	168;"	d
APR_FINFO_GPROT	include\apr_file_info.h	158;"	d
APR_FINFO_GROUP	include\apr_file_info.h	156;"	d
APR_FINFO_ICASE	include\apr_file_info.h	160;"	d
APR_FINFO_IDENT	include\apr_file_info.h	164;"	d
APR_FINFO_INODE	include\apr_file_info.h	152;"	d
APR_FINFO_LINK	include\apr_file_info.h	145;"	d
APR_FINFO_MIN	include\apr_file_info.h	163;"	d
APR_FINFO_MTIME	include\apr_file_info.h	146;"	d
APR_FINFO_NAME	include\apr_file_info.h	161;"	d
APR_FINFO_NLINK	include\apr_file_info.h	153;"	d
APR_FINFO_NORM	include\apr_file_info.h	167;"	d
APR_FINFO_OWNER	include\apr_file_info.h	165;"	d
APR_FINFO_PROT	include\apr_file_info.h	166;"	d
APR_FINFO_SIZE	include\apr_file_info.h	149;"	d
APR_FINFO_TYPE	include\apr_file_info.h	154;"	d
APR_FINFO_UPROT	include\apr_file_info.h	157;"	d
APR_FINFO_USER	include\apr_file_info.h	155;"	d
APR_FINFO_WIN32_DIR	include\arch\win32\apr_arch_file_io.h	129;"	d
APR_FINFO_WPROT	include\apr_file_info.h	159;"	d
APR_FLOCK_EXCLUSIVE	include\apr_file_io.h	188;"	d
APR_FLOCK_NONBLOCK	include\apr_file_io.h	194;"	d
APR_FLOCK_SHARED	include\apr_file_io.h	182;"	d
APR_FLOCK_TYPEMASK	include\apr_file_io.h	193;"	d
APR_FNM_BITS	test\testfnmatch.c	28;"	d	file:
APR_FNM_CASE_BLIND	include\apr_fnmatch.h	63;"	d
APR_FNM_FAILBIT	test\testfnmatch.c	29;"	d	file:
APR_FNM_NOESCAPE	include\apr_fnmatch.h	60;"	d
APR_FNM_NOMATCH	include\apr_fnmatch.h	58;"	d
APR_FNM_PATHNAME	include\apr_fnmatch.h	61;"	d
APR_FNM_PERIOD	include\apr_fnmatch.h	62;"	d
APR_FOPEN_APPEND	include\apr_file_io.h	57;"	d
APR_FOPEN_BINARY	include\apr_file_io.h	60;"	d
APR_FOPEN_BUFFERED	include\apr_file_io.h	63;"	d
APR_FOPEN_CREATE	include\apr_file_io.h	56;"	d
APR_FOPEN_DELONCLOSE	include\apr_file_io.h	64;"	d
APR_FOPEN_EXCL	include\apr_file_io.h	61;"	d
APR_FOPEN_LARGEFILE	include\apr_file_io.h	77;"	d
APR_FOPEN_NOCLEANUP	include\apr_file_io.h	72;"	d
APR_FOPEN_READ	include\apr_file_io.h	54;"	d
APR_FOPEN_SENDFILE_ENABLED	include\apr_file_io.h	74;"	d
APR_FOPEN_SHARELOCK	include\apr_file_io.h	68;"	d
APR_FOPEN_SPARSE	include\apr_file_io.h	80;"	d
APR_FOPEN_TRUNCATE	include\apr_file_io.h	58;"	d
APR_FOPEN_WRITE	include\apr_file_io.h	55;"	d
APR_FOPEN_XTHREAD	include\apr_file_io.h	65;"	d
APR_FPROT_FILE_SOURCE_PERMS	include\apr_file_info.h	97;"	d
APR_FPROT_GEXECUTE	include\apr_file_info.h	87;"	d
APR_FPROT_GREAD	include\apr_file_info.h	85;"	d
APR_FPROT_GSETID	include\apr_file_info.h	84;"	d
APR_FPROT_GWRITE	include\apr_file_info.h	86;"	d
APR_FPROT_OS_DEFAULT	include\apr_file_info.h	94;"	d
APR_FPROT_UEXECUTE	include\apr_file_info.h	82;"	d
APR_FPROT_UREAD	include\apr_file_info.h	80;"	d
APR_FPROT_USETID	include\apr_file_info.h	79;"	d
APR_FPROT_UWRITE	include\apr_file_info.h	81;"	d
APR_FPROT_WEXECUTE	include\apr_file_info.h	92;"	d
APR_FPROT_WREAD	include\apr_file_info.h	90;"	d
APR_FPROT_WSTICKY	include\apr_file_info.h	89;"	d
APR_FPROT_WWRITE	include\apr_file_info.h	91;"	d
APR_FREADONLY	include\arch\win32\apr_arch_file_io.h	134;"	d
APR_FROM_OS_ERROR	include\apr_errno.h	1010;"	d
APR_FROM_OS_ERROR	include\apr_errno.h	1126;"	d
APR_FROM_OS_ERROR	include\apr_errno.h	1190;"	d
APR_FROM_OS_ERROR	include\apr_errno.h	64;"	d
APR_FROM_OS_ERROR	include\apr_errno.h	838;"	d
APR_FULL_BLOCK	include\apr_thread_proc.h	81;"	d
APR_FULL_NONBLOCK	include\apr_thread_proc.h	83;"	d
APR_GENERAL_H	include\apr_general.h	18;"	d
APR_GETOPT_H	include\apr_getopt.h	18;"	d
APR_GEXECUTE	include\apr_file_info.h	107;"	d
APR_GLOBAL_MUTEX_H	include\apr_global_mutex.h	18;"	d
APR_GREAD	include\apr_file_info.h	105;"	d
APR_GSETID	include\apr_file_info.h	104;"	d
APR_GWRITE	include\apr_file_info.h	106;"	d
APR_H	include\apr.h	19;"	d
APR_HASH_H	include\apr_hash.h	18;"	d
APR_HASH_KEY_STRING	include\apr_hash.h	47;"	d
APR_HAS_ANSI_FS	include\arch\win32\apr_arch_misc.h	126;"	d
APR_HAS_ANSI_FS	include\arch\win32\apr_arch_misc.h	128;"	d
APR_HAS_DSO	include\apr.h	311;"	d
APR_HAS_FCNTL_SERIALIZE	include\apr.h	268;"	d
APR_HAS_FLOCK_SERIALIZE	include\apr.h	265;"	d
APR_HAS_FORK	include\apr.h	308;"	d
APR_HAS_INLINE	include\apr.h	121;"	d
APR_HAS_LARGE_FILES	include\apr.h	320;"	d
APR_HAS_LARGE_FILES	include\apr.h	326;"	d
APR_HAS_MMAP	include\apr.h	307;"	d
APR_HAS_OS_UUID	include\apr.h	315;"	d
APR_HAS_OTHER_CHILD	include\apr.h	310;"	d
APR_HAS_POSIXSEM_SERIALIZE	include\apr.h	267;"	d
APR_HAS_PROC_INVOKED	include\apr.h	314;"	d
APR_HAS_PROC_PTHREAD_SERIALIZE	include\apr.h	269;"	d
APR_HAS_PSA	file_io\netware\filestat.c	31;"	d	file:
APR_HAS_RANDOM	include\apr.h	309;"	d
APR_HAS_SENDFILE	include\apr.h	318;"	d
APR_HAS_SENDFILE	include\apr.h	324;"	d
APR_HAS_SHARED_MEMORY	include\apr.h	305;"	d
APR_HAS_SO_ACCEPTFILTER	include\apr.h	312;"	d
APR_HAS_SYSVSEM_SERIALIZE	include\apr.h	266;"	d
APR_HAS_THREADS	include\apr.h	306;"	d
APR_HAS_UNICODE_FS	include\apr.h	313;"	d
APR_HAS_USER	include\apr.h	319;"	d
APR_HAS_USER	include\apr.h	325;"	d
APR_HAS_XTHREAD_FILES	include\apr.h	321;"	d
APR_HAS_XTHREAD_FILES	include\apr.h	327;"	d
APR_HAVE_ARPA_INET_H	include\apr.h	127;"	d
APR_HAVE_ARPA_INET_H	include\apr.h	166;"	d
APR_HAVE_CONIO_H	include\apr.h	128;"	d
APR_HAVE_CONIO_H	include\apr.h	167;"	d
APR_HAVE_CORKABLE_TCP	include\apr.h	273;"	d
APR_HAVE_CRYPT_H	include\apr.h	129;"	d
APR_HAVE_CRYPT_H	include\apr.h	168;"	d
APR_HAVE_CTYPE_H	include\apr.h	130;"	d
APR_HAVE_CTYPE_H	include\apr.h	169;"	d
APR_HAVE_DIRENT_H	include\apr.h	131;"	d
APR_HAVE_DIRENT_H	include\apr.h	170;"	d
APR_HAVE_ERRNO_H	include\apr.h	132;"	d
APR_HAVE_ERRNO_H	include\apr.h	171;"	d
APR_HAVE_FCNTL_H	include\apr.h	133;"	d
APR_HAVE_FCNTL_H	include\apr.h	172;"	d
APR_HAVE_GETRLIMIT	include\apr.h	274;"	d
APR_HAVE_ICONV	include\apr.h	275;"	d
APR_HAVE_INET_ADDR	include\apr.h	277;"	d
APR_HAVE_INET_NETWORK	include\apr.h	278;"	d
APR_HAVE_IN_ADDR	include\apr.h	276;"	d
APR_HAVE_IOVEC	include\apr.h	294;"	d
APR_HAVE_IO_H	include\apr.h	134;"	d
APR_HAVE_IO_H	include\apr.h	173;"	d
APR_HAVE_IPV6	include\apr.h	279;"	d
APR_HAVE_LATE_DLL_FUNC	include\arch\win32\apr_arch_misc.h	205;"	d
APR_HAVE_LIMITS_H	include\apr.h	135;"	d
APR_HAVE_LIMITS_H	include\apr.h	174;"	d
APR_HAVE_MEMCHR	include\apr.h	290;"	d
APR_HAVE_MEMMOVE	include\apr.h	280;"	d
APR_HAVE_NETDB_H	include\apr.h	136;"	d
APR_HAVE_NETDB_H	include\apr.h	175;"	d
APR_HAVE_NETINET_IN_H	include\apr.h	137;"	d
APR_HAVE_NETINET_IN_H	include\apr.h	176;"	d
APR_HAVE_NETINET_SCTP_H	include\apr.h	138;"	d
APR_HAVE_NETINET_SCTP_H	include\apr.h	177;"	d
APR_HAVE_NETINET_SCTP_UIO_H	include\apr.h	139;"	d
APR_HAVE_NETINET_SCTP_UIO_H	include\apr.h	178;"	d
APR_HAVE_NETINET_TCP_H	include\apr.h	140;"	d
APR_HAVE_NETINET_TCP_H	include\apr.h	179;"	d
APR_HAVE_PROCESS_H	include\apr.h	164;"	d
APR_HAVE_PROCESS_H	include\apr.h	203;"	d
APR_HAVE_PTHREAD_H	include\apr.h	141;"	d
APR_HAVE_PTHREAD_H	include\apr.h	180;"	d
APR_HAVE_SA_STORAGE	include\apr.h	285;"	d
APR_HAVE_SCTP	include\apr.h	293;"	d
APR_HAVE_SEMAPHORE_H	include\apr.h	142;"	d
APR_HAVE_SEMAPHORE_H	include\apr.h	181;"	d
APR_HAVE_SETRLIMIT	include\apr.h	281;"	d
APR_HAVE_SHMEM_BEOS	include\apr.h	248;"	d
APR_HAVE_SHMEM_MMAP_ANON	include\apr.h	247;"	d
APR_HAVE_SHMEM_MMAP_SHM	include\apr.h	243;"	d
APR_HAVE_SHMEM_MMAP_TMP	include\apr.h	242;"	d
APR_HAVE_SHMEM_MMAP_ZERO	include\apr.h	244;"	d
APR_HAVE_SHMEM_SHMGET	include\apr.h	246;"	d
APR_HAVE_SHMEM_SHMGET_ANON	include\apr.h	245;"	d
APR_HAVE_SIGACTION	include\apr.h	282;"	d
APR_HAVE_SIGNAL_H	include\apr.h	143;"	d
APR_HAVE_SIGNAL_H	include\apr.h	182;"	d
APR_HAVE_SIGSUSPEND	include\apr.h	283;"	d
APR_HAVE_SIGWAIT	include\apr.h	284;"	d
APR_HAVE_STDARG_H	include\apr.h	144;"	d
APR_HAVE_STDARG_H	include\apr.h	183;"	d
APR_HAVE_STDDEF_H	include\apr.h	163;"	d
APR_HAVE_STDDEF_H	include\apr.h	202;"	d
APR_HAVE_STDINT_H	include\apr.h	145;"	d
APR_HAVE_STDINT_H	include\apr.h	184;"	d
APR_HAVE_STDIO_H	include\apr.h	146;"	d
APR_HAVE_STDIO_H	include\apr.h	185;"	d
APR_HAVE_STDLIB_H	include\apr.h	147;"	d
APR_HAVE_STDLIB_H	include\apr.h	186;"	d
APR_HAVE_STRCASECMP	include\apr.h	286;"	d
APR_HAVE_STRDUP	include\apr.h	287;"	d
APR_HAVE_STRICMP	include\apr.h	297;"	d
APR_HAVE_STRICMP	include\apr.h	300;"	d
APR_HAVE_STRINGS_H	include\apr.h	149;"	d
APR_HAVE_STRINGS_H	include\apr.h	188;"	d
APR_HAVE_STRING_H	include\apr.h	148;"	d
APR_HAVE_STRING_H	include\apr.h	187;"	d
APR_HAVE_STRNCASECMP	include\apr.h	288;"	d
APR_HAVE_STRNICMP	include\apr.h	298;"	d
APR_HAVE_STRNICMP	include\apr.h	301;"	d
APR_HAVE_STRSTR	include\apr.h	289;"	d
APR_HAVE_STRUCT_RLIMIT	include\apr.h	291;"	d
APR_HAVE_SYS_IOCTL_H	include\apr.h	150;"	d
APR_HAVE_SYS_IOCTL_H	include\apr.h	189;"	d
APR_HAVE_SYS_SENDFILE_H	include\apr.h	151;"	d
APR_HAVE_SYS_SENDFILE_H	include\apr.h	190;"	d
APR_HAVE_SYS_SIGNAL_H	include\apr.h	152;"	d
APR_HAVE_SYS_SIGNAL_H	include\apr.h	191;"	d
APR_HAVE_SYS_SOCKET_H	include\apr.h	153;"	d
APR_HAVE_SYS_SOCKET_H	include\apr.h	192;"	d
APR_HAVE_SYS_SOCKIO_H	include\apr.h	154;"	d
APR_HAVE_SYS_SOCKIO_H	include\apr.h	193;"	d
APR_HAVE_SYS_SYSLIMITS_H	include\apr.h	155;"	d
APR_HAVE_SYS_SYSLIMITS_H	include\apr.h	194;"	d
APR_HAVE_SYS_TIME_H	include\apr.h	156;"	d
APR_HAVE_SYS_TIME_H	include\apr.h	195;"	d
APR_HAVE_SYS_TYPES_H	include\apr.h	157;"	d
APR_HAVE_SYS_TYPES_H	include\apr.h	196;"	d
APR_HAVE_SYS_UIO_H	include\apr.h	158;"	d
APR_HAVE_SYS_UIO_H	include\apr.h	197;"	d
APR_HAVE_SYS_UN_H	include\apr.h	159;"	d
APR_HAVE_SYS_UN_H	include\apr.h	198;"	d
APR_HAVE_SYS_WAIT_H	include\apr.h	160;"	d
APR_HAVE_SYS_WAIT_H	include\apr.h	199;"	d
APR_HAVE_TIME_H	include\apr.h	161;"	d
APR_HAVE_TIME_H	include\apr.h	200;"	d
APR_HAVE_UNION_SEMUN	include\apr.h	292;"	d
APR_HAVE_UNISTD_H	include\apr.h	162;"	d
APR_HAVE_UNISTD_H	include\apr.h	201;"	d
APR_IMPLEMENT_INHERIT_SET	file_io\unix\open.c	/^APR_IMPLEMENT_INHERIT_SET(file, flags, pool, apr_unix_file_cleanup)$/;"	f
APR_IMPLEMENT_INHERIT_SET	include\arch\os2\apr_arch_inherit.h	24;"	d
APR_IMPLEMENT_INHERIT_SET	include\arch\unix\apr_arch_inherit.h	24;"	d
APR_IMPLEMENT_INHERIT_SET	include\arch\win32\apr_arch_inherit.h	102;"	d
APR_IMPLEMENT_INHERIT_SET	include\arch\win32\apr_arch_inherit.h	27;"	d
APR_IMPLEMENT_INHERIT_SET	include\arch\win32\apr_arch_inherit.h	74;"	d
APR_IMPLEMENT_INHERIT_UNSET	include\arch\os2\apr_arch_inherit.h	37;"	d
APR_IMPLEMENT_INHERIT_UNSET	include\arch\unix\apr_arch_inherit.h	44;"	d
APR_IMPLEMENT_INHERIT_UNSET	include\arch\win32\apr_arch_inherit.h	112;"	d
APR_IMPLEMENT_INHERIT_UNSET	include\arch\win32\apr_arch_inherit.h	50;"	d
APR_IMPLEMENT_INHERIT_UNSET	include\arch\win32\apr_arch_inherit.h	87;"	d
APR_INADDR_NONE	include\apr_network_io.h	130;"	d
APR_INADDR_NONE	include\apr_network_io.h	132;"	d
APR_INCHILD	include\apr_errno.h	436;"	d
APR_INCOMPLETE	include\apr_errno.h	450;"	d
APR_INCOMPLETE_READ	include\apr_network_io.h	81;"	d
APR_INCOMPLETE_WRITE	include\apr_network_io.h	92;"	d
APR_INET	include\apr_network_io.h	140;"	d
APR_INET6	include\apr_network_io.h	154;"	d
APR_INHERIT	include\arch\os2\apr_arch_inherit.h	22;"	d
APR_INHERIT	include\arch\unix\apr_arch_inherit.h	22;"	d
APR_INHERIT	include\arch\win32\apr_arch_inherit.h	22;"	d
APR_INHERIT_H	include\apr_inherit.h	18;"	d
APR_INLINE	include\apr.h	120;"	d
APR_INPARENT	include\apr_errno.h	438;"	d
APR_INT16_MAX	include\apr.h	413;"	d
APR_INT16_MAX	include\apr.h	415;"	d
APR_INT16_MIN	include\apr.h	407;"	d
APR_INT16_MIN	include\apr.h	409;"	d
APR_INT32_MAX	include\apr.h	431;"	d
APR_INT32_MAX	include\apr.h	433;"	d
APR_INT32_MIN	include\apr.h	425;"	d
APR_INT32_MIN	include\apr.h	427;"	d
APR_INT64_C	include\apr.h	399;"	d
APR_INT64_C	include\apr.h	402;"	d
APR_INT64_MAX	include\apr.h	449;"	d
APR_INT64_MAX	include\apr.h	451;"	d
APR_INT64_MIN	include\apr.h	443;"	d
APR_INT64_MIN	include\apr.h	445;"	d
APR_INT64_STRFN	include\arch\netware\apr_private.h	188;"	d
APR_INT64_STRFN	include\arch\win32\apr_private.h	147;"	d
APR_INT64_T_FMT	include\apr.h	571;"	d
APR_INT_TRUNC_CAST	include\arch\apr_private_common.h	38;"	d
APR_IOVEC_DEFINED	include\apr_want.h	93;"	d
APR_IPV4_ADDR_OK	include\apr_network_io.h	112;"	d
APR_IPV6_ADDR_OK	include\apr_network_io.h	113;"	d
APR_IPV6_V6ONLY	include\apr_network_io.h	95;"	d
APR_IS_BIGENDIAN	include\apr.h	394;"	d
APR_IS_DEV_STRING	include\apr_version.h	90;"	d
APR_IS_DEV_STRING	include\apr_version.h	92;"	d
APR_JUST_WAIT	include\apr_thread_proc.h	/^    APR_JUST_WAIT,              \/**< wait forever for the process to complete *\/$/;"	e	enum:__anon20
APR_KEYBASED	include\apr_errno.h	470;"	d
APR_KILL_AFTER_TIMEOUT	include\apr_thread_proc.h	/^    APR_KILL_AFTER_TIMEOUT,     \/**< SIGTERM, wait 3 seconds, SIGKILL *\/$/;"	e	enum:__anon20
APR_KILL_ALWAYS	include\apr_thread_proc.h	/^    APR_KILL_ALWAYS,            \/**< process is sent SIGKILL on apr_pool_t cleanup *\/$/;"	e	enum:__anon20
APR_KILL_NEVER	include\apr_thread_proc.h	/^    APR_KILL_NEVER,             \/**< process is never sent any signals *\/$/;"	e	enum:__anon20
APR_KILL_ONLY_ONCE	include\apr_thread_proc.h	/^    APR_KILL_ONLY_ONCE          \/**< send SIGTERM and then wait *\/$/;"	e	enum:__anon20
APR_LARGEFILE	include\apr_file_io.h	98;"	d
APR_LIB_H	include\apr_lib.h	18;"	d
APR_LIMIT_CPU	include\apr_thread_proc.h	102;"	d
APR_LIMIT_MEM	include\apr_thread_proc.h	104;"	d
APR_LIMIT_NOFILE	include\apr_thread_proc.h	108;"	d
APR_LIMIT_NPROC	include\apr_thread_proc.h	106;"	d
APR_LNK	include\apr_file_info.h	/^    APR_LNK,            \/**< a symbolic link *\/$/;"	e	enum:__anon9
APR_LOCAL	include\apr_network_io.h	/^    APR_LOCAL,   \/**< Socket information for local end of connection *\/$/;"	e	enum:__anon11
APR_LOCK_DEFAULT	include\apr_proc_mutex.h	/^    APR_LOCK_DEFAULT        \/**< Use the default process lock *\/$/;"	e	enum:__anon16
APR_LOCK_FCNTL	include\apr_proc_mutex.h	/^    APR_LOCK_FCNTL,         \/**< fcntl() *\/$/;"	e	enum:__anon16
APR_LOCK_FLOCK	include\apr_proc_mutex.h	/^    APR_LOCK_FLOCK,         \/**< flock() *\/$/;"	e	enum:__anon16
APR_LOCK_POSIXSEM	include\apr_proc_mutex.h	/^    APR_LOCK_POSIXSEM,      \/**< POSIX semaphore process-based locking *\/$/;"	e	enum:__anon16
APR_LOCK_PROC_PTHREAD	include\apr_proc_mutex.h	/^    APR_LOCK_PROC_PTHREAD,  \/**< POSIX pthread process-based locking *\/$/;"	e	enum:__anon16
APR_LOCK_SYSVSEM	include\apr_proc_mutex.h	/^    APR_LOCK_SYSVSEM,       \/**< System V Semaphores *\/$/;"	e	enum:__anon16
APR_MAJOR_VERSION	include\apr_version.h	50;"	d
APR_MAX_IOVEC_SIZE	include\apr_file_io.h	154;"	d
APR_MAX_IOVEC_SIZE	include\apr_file_io.h	157;"	d
APR_MAX_IOVEC_SIZE	include\apr_file_io.h	159;"	d
APR_MAX_IOVEC_SIZE	include\apr_file_io.h	161;"	d
APR_MAX_SECS_TO_LINGER	include\apr_network_io.h	46;"	d
APR_MEMNODE_T_SIZE	include\apr_allocator.h	64;"	d
APR_MINOR_VERSION	include\apr_version.h	56;"	d
APR_MMAP_CANDIDATE	include\apr_mmap.h	115;"	d
APR_MMAP_H	include\apr_mmap.h	18;"	d
APR_MMAP_LIMIT	include\apr_mmap.h	109;"	d
APR_MMAP_LIMIT	include\apr_mmap.h	111;"	d
APR_MMAP_READ	include\apr_mmap.h	46;"	d
APR_MMAP_THRESHOLD	include\apr_mmap.h	101;"	d
APR_MMAP_THRESHOLD	include\apr_mmap.h	96;"	d
APR_MMAP_THRESHOLD	include\apr_mmap.h	99;"	d
APR_MMAP_WRITE	include\apr_mmap.h	48;"	d
APR_NETWORK_IO_H	include\apr_network_io.h	18;"	d
APR_NOFILE	include\apr_file_info.h	/^    APR_NOFILE = 0,     \/**< no file type determined *\/$/;"	e	enum:__anon9
APR_NOTDETACH	include\apr_errno.h	442;"	d
APR_NOTFOUND	include\apr_errno.h	461;"	d
APR_NOWAIT	include\apr_thread_proc.h	/^    APR_NOWAIT          \/**< do not wait -- just see if it has finished *\/$/;"	e	enum:__anon18
APR_NO_DESC	include\apr_poll.h	/^    APR_NO_DESC,                \/**< nothing here *\/$/;"	e	enum:__anon14
APR_NO_FILE	include\apr_thread_proc.h	89;"	d
APR_NO_FILE	include\apr_thread_proc.h	99;"	d
APR_NO_PIPE	include\apr_thread_proc.h	79;"	d
APR_NUMSIG	threadproc\unix\signals.c	127;"	d	file:
APR_NUMSIG	threadproc\unix\signals.c	129;"	d	file:
APR_NUMSIG	threadproc\unix\signals.c	131;"	d	file:
APR_NUMSIG	threadproc\unix\signals.c	133;"	d	file:
APR_OC_REASON_DEATH	include\apr_thread_proc.h	114;"	d
APR_OC_REASON_LOST	include\apr_thread_proc.h	124;"	d
APR_OC_REASON_RESTART	include\apr_thread_proc.h	117;"	d
APR_OC_REASON_RUNNING	include\apr_thread_proc.h	126;"	d
APR_OC_REASON_UNREGISTER	include\apr_thread_proc.h	121;"	d
APR_OC_REASON_UNWRITABLE	include\apr_thread_proc.h	116;"	d
APR_OFFSET	include\apr_general.h	81;"	d
APR_OFFSET	include\apr_general.h	84;"	d
APR_OFFSET	include\apr_general.h	89;"	d
APR_OFFSET	include\apr_general.h	95;"	d
APR_OFFSETOF	include\apr_general.h	107;"	d
APR_OFFSETOF	include\apr_general.h	109;"	d
APR_OFF_T_FMT	include\apr.h	564;"	d
APR_OFF_T_FMT	include\apr.h	566;"	d
APR_OFF_T_STRFN	include\arch\netware\apr_private.h	191;"	d
APR_OFF_T_STRFN	include\arch\netware\apr_private.h	193;"	d
APR_OFF_T_STRFN	include\arch\win32\apr_private.h	152;"	d
APR_OFF_T_STRFN	include\arch\win32\apr_private.h	154;"	d
APR_OFF_T_STRFN	include\arch\win32\apr_private.h	158;"	d
APR_OFF_T_STRFN	include\arch\win32\apr_private.h	160;"	d
APR_OPENINFO	include\arch\win32\apr_arch_file_io.h	99;"	d
APR_OPENLINK	include\arch\win32\apr_arch_file_io.h	100;"	d
APR_OS2_STATUS	include\apr_errno.h	860;"	d
APR_OS_DEFAULT	include\apr_file_info.h	112;"	d
APR_OS_ERRSPACE_SIZE	include\apr_errno.h	123;"	d
APR_OS_START_CANONERR	include\apr_errno.h	172;"	d
APR_OS_START_EAIERR	include\apr_errno.h	178;"	d
APR_OS_START_ERROR	include\apr_errno.h	117;"	d
APR_OS_START_STATUS	include\apr_errno.h	136;"	d
APR_OS_START_SYSERR	include\apr_errno.h	183;"	d
APR_OS_START_USEERR	include\apr_errno.h	167;"	d
APR_OS_START_USERERR	include\apr_errno.h	162;"	d
APR_OVERLAP_TABLES_MERGE	include\apr_tables.h	426;"	d
APR_OVERLAP_TABLES_SET	include\apr_tables.h	424;"	d
APR_O_NONBLOCK_INHERITED	include\apr.h	351;"	d
APR_PARENT_BLOCK	include\apr_thread_proc.h	85;"	d
APR_PATCH_VERSION	include\apr_version.h	62;"	d
APR_PATH_MAX	include\apr.h	585;"	d
APR_PATH_MAX	include\apr.h	587;"	d
APR_PID_T_FMT	include\apr.h	569;"	d
APR_PIPE	include\apr_file_info.h	/^    APR_PIPE,           \/**< a FIFO \/ pipe *\/$/;"	e	enum:__anon9
APR_POLLERR	include\apr_poll.h	50;"	d
APR_POLLHUP	include\apr_poll.h	51;"	d
APR_POLLIN	include\apr_poll.h	47;"	d
APR_POLLNVAL	include\apr_poll.h	52;"	d
APR_POLLOUT	include\apr_poll.h	49;"	d
APR_POLLPRI	include\apr_poll.h	48;"	d
APR_POLLSET_DEFAULT	include\apr_poll.h	/^    APR_POLLSET_DEFAULT,        \/**< Platform default poll method *\/$/;"	e	enum:__anon13
APR_POLLSET_EPOLL	include\apr_poll.h	/^    APR_POLLSET_EPOLL,          \/**< Poll uses epoll method *\/$/;"	e	enum:__anon13
APR_POLLSET_KQUEUE	include\apr_poll.h	/^    APR_POLLSET_KQUEUE,         \/**< Poll uses kqueue method *\/$/;"	e	enum:__anon13
APR_POLLSET_NOCOPY	include\apr_poll.h	60;"	d
APR_POLLSET_NODEFAULT	include\apr_poll.h	66;"	d
APR_POLLSET_POLL	include\apr_poll.h	/^    APR_POLLSET_POLL            \/**< Poll uses poll method *\/$/;"	e	enum:__anon13
APR_POLLSET_PORT	include\apr_poll.h	/^    APR_POLLSET_PORT,           \/**< Poll uses Solaris event port method *\/$/;"	e	enum:__anon13
APR_POLLSET_SELECT	include\apr_poll.h	/^    APR_POLLSET_SELECT,         \/**< Poll uses select method *\/$/;"	e	enum:__anon13
APR_POLLSET_THREADSAFE	include\apr_poll.h	57;"	d
APR_POLLSET_WAKEABLE	include\apr_poll.h	63;"	d
APR_POLL_FILE	include\apr_poll.h	/^    APR_POLL_FILE,              \/**< descriptor refers to a file *\/$/;"	e	enum:__anon14
APR_POLL_H	include\apr_poll.h	18;"	d
APR_POLL_LASTDESC	include\apr_poll.h	/^    APR_POLL_LASTDESC           \/**< @deprecated descriptor is the last one in the list *\/$/;"	e	enum:__anon14
APR_POLL_SOCKET	include\apr_poll.h	/^    APR_POLL_SOCKET,            \/**< descriptor refers to a socket *\/$/;"	e	enum:__anon14
APR_POOLS_H	include\apr_pools.h	18;"	d
APR_POOL_DEBUG	include\apr_pools.h	135;"	d
APR_POOL_DEBUG	include\apr_pools.h	136;"	d
APR_POOL_DEBUG	include\apr_pools.h	139;"	d
APR_POOL_DEBUG_GENERAL	memory\unix\apr_pools.c	448;"	d	file:
APR_POOL_DEBUG_LIFETIME	memory\unix\apr_pools.c	450;"	d	file:
APR_POOL_DEBUG_OWNER	memory\unix\apr_pools.c	451;"	d	file:
APR_POOL_DEBUG_VERBOSE	memory\unix\apr_pools.c	449;"	d	file:
APR_POOL_DEBUG_VERBOSE_ALL	memory\unix\apr_pools.c	454;"	d	file:
APR_POOL_DEBUG_VERBOSE_ALLOC	memory\unix\apr_pools.c	452;"	d	file:
APR_POOL_DECLARE_ACCESSOR	include\apr_pools.h	81;"	d
APR_POOL_IMPLEMENT_ACCESSOR	file_io\unix\open.c	/^APR_POOL_IMPLEMENT_ACCESSOR(file)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	include\apr_pools.h	91;"	d
APR_POOL_IMPLEMENT_ACCESSOR	locks\beos\proc_mutex.c	/^APR_POOL_IMPLEMENT_ACCESSOR(proc_mutex)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	locks\netware\proc_mutex.c	/^APR_POOL_IMPLEMENT_ACCESSOR(proc_mutex)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	locks\os2\proc_mutex.c	/^APR_POOL_IMPLEMENT_ACCESSOR(proc_mutex)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	locks\unix\proc_mutex.c	/^APR_POOL_IMPLEMENT_ACCESSOR(proc_mutex)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	locks\win32\proc_mutex.c	/^APR_POOL_IMPLEMENT_ACCESSOR(proc_mutex)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	shmem\beos\shm.c	/^APR_POOL_IMPLEMENT_ACCESSOR(shm)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	shmem\os2\shm.c	/^APR_POOL_IMPLEMENT_ACCESSOR(shm)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	shmem\unix\shm.c	/^APR_POOL_IMPLEMENT_ACCESSOR(shm)$/;"	f
APR_POOL_IMPLEMENT_ACCESSOR	shmem\win32\shm.c	/^APR_POOL_IMPLEMENT_ACCESSOR(shm)$/;"	f
APR_POOL__FILE_LINE__	include\apr_pools.h	143;"	d
APR_PORTABLE_H	include\apr_portable.h	22;"	d
APR_POSIXSEM_NAME_MIN	locks\unix\proc_mutex.c	73;"	d	file:
APR_PRIVATE_COMMON_H	include\arch\apr_private_common.h	22;"	d
APR_PRIVATE_H	include\arch\netware\apr_private.h	26;"	d
APR_PRIVATE_H	include\arch\win32\apr_private.h	26;"	d
APR_PROCATTR_USER_SET_REQUIRES_PASSWORD	include\apr.h	322;"	d
APR_PROCATTR_USER_SET_REQUIRES_PASSWORD	include\apr.h	328;"	d
APR_PROCESS_LOCK_IS_GLOBAL	include\apr.h	271;"	d
APR_PROCESS_LOCK_MECH_IS_GLOBAL	include\arch\unix\apr_arch_proc_mutex.h	83;"	d
APR_PROC_CHECK_CORE_DUMP	include\apr_thread_proc.h	76;"	d
APR_PROC_CHECK_EXIT	include\apr_thread_proc.h	72;"	d
APR_PROC_CHECK_SIGNALED	include\apr_thread_proc.h	74;"	d
APR_PROC_DETACH_DAEMONIZE	include\apr_thread_proc.h	678;"	d
APR_PROC_DETACH_FOREGROUND	include\apr_thread_proc.h	677;"	d
APR_PROC_EXIT	include\apr_thread_proc.h	/^    APR_PROC_EXIT = 1,          \/**< process exited normally *\/$/;"	e	enum:__anon19
APR_PROC_MUTEX_H	include\apr_proc_mutex.h	18;"	d
APR_PROC_MUTEX_IS_GLOBAL	include\apr.h	576;"	d
APR_PROC_SIGNAL	include\apr_thread_proc.h	/^    APR_PROC_SIGNAL = 2,        \/**< process exited due to a signal *\/$/;"	e	enum:__anon19
APR_PROC_SIGNAL_CORE	include\apr_thread_proc.h	/^    APR_PROC_SIGNAL_CORE = 4    \/**< process exited and dumped a core file *\/$/;"	e	enum:__anon19
APR_PROGRAM	include\apr_thread_proc.h	/^    APR_PROGRAM,            \/**< invoke the program directly, no copied env *\/$/;"	e	enum:__anon17
APR_PROGRAM_ENV	include\apr_thread_proc.h	/^    APR_PROGRAM_ENV,        \/**< invoke the program, replicating our environment *\/$/;"	e	enum:__anon17
APR_PROGRAM_PATH	include\apr_thread_proc.h	/^    APR_PROGRAM_PATH,       \/**< find program on PATH, use our environment *\/$/;"	e	enum:__anon17
APR_PROTO_SCTP	include\apr_network_io.h	163;"	d
APR_PROTO_TCP	include\apr_network_io.h	161;"	d
APR_PROTO_UDP	include\apr_network_io.h	162;"	d
APR_PSPRINTF_MIN_STRINGSIZE	memory\unix\apr_pools.c	1039;"	d	file:
APR_RANDOM_DEFAULT_G_FOR_INSECURE	random\unix\apr_random.c	38;"	d	file:
APR_RANDOM_DEFAULT_G_FOR_SECURE	random\unix\apr_random.c	39;"	d	file:
APR_RANDOM_DEFAULT_HASH_SECRET_SIZE	random\unix\apr_random.c	37;"	d	file:
APR_RANDOM_DEFAULT_POOLS	random\unix\apr_random.c	34;"	d	file:
APR_RANDOM_DEFAULT_REHASH_SIZE	random\unix\apr_random.c	35;"	d	file:
APR_RANDOM_DEFAULT_RESEED_SIZE	random\unix\apr_random.c	36;"	d	file:
APR_RANDOM_H	include\apr_random.h	18;"	d
APR_READ	include\apr_file_io.h	85;"	d
APR_READCONTROL	include\arch\win32\apr_arch_file_io.h	101;"	d
APR_READ_BLOCK	include\apr_thread_proc.h	92;"	d
APR_REG	include\apr_file_info.h	/^    APR_REG,            \/**< a regular file *\/$/;"	e	enum:__anon9
APR_REMOTE	include\apr_network_io.h	/^    APR_REMOTE   \/**< Socket information for remote end of connection *\/$/;"	e	enum:__anon11
APR_RESET_NODELAY	include\apr_network_io.h	75;"	d
APR_RFC822_DATE_LEN	include\apr_time.h	184;"	d
APR_RING_CHECK	include\apr_ring.h	414;"	d
APR_RING_CHECK	include\apr_ring.h	476;"	d
APR_RING_CHECK_CONSISTENCY	include\apr_ring.h	444;"	d
APR_RING_CHECK_CONSISTENCY	include\apr_ring.h	486;"	d
APR_RING_CHECK_ELEM	include\apr_ring.h	417;"	d
APR_RING_CHECK_ELEM	include\apr_ring.h	497;"	d
APR_RING_CHECK_ELEM_CONSISTENCY	include\apr_ring.h	448;"	d
APR_RING_CHECK_ELEM_CONSISTENCY	include\apr_ring.h	508;"	d
APR_RING_CHECK_ONE	include\apr_ring.h	411;"	d
APR_RING_CHECK_ONE	include\apr_ring.h	465;"	d
APR_RING_CONCAT	include\apr_ring.h	332;"	d
APR_RING_ELEM_INIT	include\apr_ring.h	212;"	d
APR_RING_EMPTY	include\apr_ring.h	204;"	d
APR_RING_ENTRY	include\apr_ring.h	70;"	d
APR_RING_FIRST	include\apr_ring.h	166;"	d
APR_RING_FOREACH	include\apr_ring.h	387;"	d
APR_RING_FOREACH_SAFE	include\apr_ring.h	400;"	d
APR_RING_H	include\apr_ring.h	28;"	d
APR_RING_HEAD	include\apr_ring.h	91;"	d
APR_RING_INIT	include\apr_ring.h	192;"	d
APR_RING_INSERT_AFTER	include\apr_ring.h	273;"	d
APR_RING_INSERT_BEFORE	include\apr_ring.h	261;"	d
APR_RING_INSERT_HEAD	include\apr_ring.h	311;"	d
APR_RING_INSERT_TAIL	include\apr_ring.h	322;"	d
APR_RING_LAST	include\apr_ring.h	171;"	d
APR_RING_NEXT	include\apr_ring.h	177;"	d
APR_RING_PREPEND	include\apr_ring.h	348;"	d
APR_RING_PREV	include\apr_ring.h	183;"	d
APR_RING_REMOVE	include\apr_ring.h	377;"	d
APR_RING_SENTINEL	include\apr_ring.h	159;"	d
APR_RING_SPLICE_AFTER	include\apr_ring.h	245;"	d
APR_RING_SPLICE_BEFORE	include\apr_ring.h	228;"	d
APR_RING_SPLICE_HEAD	include\apr_ring.h	286;"	d
APR_RING_SPLICE_TAIL	include\apr_ring.h	299;"	d
APR_RING_UNSPLICE	include\apr_ring.h	364;"	d
APR_SENDFILE_DISCONNECT_SOCKET	include\apr_network_io.h	257;"	d
APR_SENDFILE_ENABLED	include\apr_file_io.h	97;"	d
APR_SET	include\apr_file_io.h	131;"	d
APR_SHARELOCK	include\apr_file_io.h	95;"	d
APR_SHELLCMD	include\apr_thread_proc.h	/^    APR_SHELLCMD,           \/**< use the shell to invoke the program *\/$/;"	e	enum:__anon17
APR_SHELLCMD_ENV	include\apr_thread_proc.h	/^    APR_SHELLCMD_ENV        \/**< use the shell to invoke the program,$/;"	e	enum:__anon17
APR_SHM_H	include\apr_shm.h	18;"	d
APR_SHUTDOWN_READ	include\apr_network_io.h	/^    APR_SHUTDOWN_READ,          \/**< no longer allow read request *\/$/;"	e	enum:__anon10
APR_SHUTDOWN_READWRITE	include\apr_network_io.h	/^    APR_SHUTDOWN_READWRITE      \/**< no longer allow read or write requests *\/$/;"	e	enum:__anon10
APR_SHUTDOWN_WRITE	include\apr_network_io.h	/^    APR_SHUTDOWN_WRITE,         \/**< no longer allow write requests *\/$/;"	e	enum:__anon10
APR_SIGNAL_H	include\apr_signal.h	18;"	d
APR_SIZEOF_VOIDP	include\apr.h	381;"	d
APR_SIZEOF_VOIDP	include\apr.h	383;"	d
APR_SIZE_MAX	include\apr.h	460;"	d
APR_SIZE_T_FMT	include\apr.h	557;"	d
APR_SIZE_T_FMT	include\apr.h	560;"	d
APR_SOCK	include\apr_file_info.h	/^    APR_SOCK,           \/**< a [unix domain] socket *\/$/;"	e	enum:__anon9
APR_SO_DEBUG	include\apr_network_io.h	65;"	d
APR_SO_DISCONNECTED	include\apr_network_io.h	70;"	d
APR_SO_KEEPALIVE	include\apr_network_io.h	64;"	d
APR_SO_LINGER	include\apr_network_io.h	63;"	d
APR_SO_NONBLOCK	include\apr_network_io.h	66;"	d
APR_SO_RCVBUF	include\apr_network_io.h	69;"	d
APR_SO_REUSEADDR	include\apr_network_io.h	67;"	d
APR_SO_SNDBUF	include\apr_network_io.h	68;"	d
APR_SSIZE_T_FMT	include\apr.h	556;"	d
APR_SSIZE_T_FMT	include\apr.h	559;"	d
APR_STATUS_IS_ANONYMOUS	include\apr_errno.h	582;"	d
APR_STATUS_IS_BADARG	include\apr_errno.h	558;"	d
APR_STATUS_IS_BADCH	include\apr_errno.h	550;"	d
APR_STATUS_IS_CHILD_DONE	include\apr_errno.h	518;"	d
APR_STATUS_IS_CHILD_NOTDONE	include\apr_errno.h	525;"	d
APR_STATUS_IS_DETACH	include\apr_errno.h	504;"	d
APR_STATUS_IS_EABOVEROOT	include\apr_errno.h	410;"	d
APR_STATUS_IS_EABSOLUTE	include\apr_errno.h	404;"	d
APR_STATUS_IS_EACCES	include\apr_errno.h	1022;"	d
APR_STATUS_IS_EACCES	include\apr_errno.h	1137;"	d
APR_STATUS_IS_EACCES	include\apr_errno.h	1207;"	d
APR_STATUS_IS_EACCES	include\apr_errno.h	911;"	d
APR_STATUS_IS_EAFNOSUPPORT	include\apr_errno.h	1121;"	d
APR_STATUS_IS_EAFNOSUPPORT	include\apr_errno.h	1182;"	d
APR_STATUS_IS_EAFNOSUPPORT	include\apr_errno.h	1302;"	d
APR_STATUS_IS_EAFNOSUPPORT	include\apr_errno.h	976;"	d
APR_STATUS_IS_EAGAIN	include\apr_errno.h	1075;"	d
APR_STATUS_IS_EAGAIN	include\apr_errno.h	1150;"	d
APR_STATUS_IS_EAGAIN	include\apr_errno.h	1248;"	d
APR_STATUS_IS_EAGAIN	include\apr_errno.h	1250;"	d
APR_STATUS_IS_EAGAIN	include\apr_errno.h	1252;"	d
APR_STATUS_IS_EAGAIN	include\apr_errno.h	941;"	d
APR_STATUS_IS_EBADDATE	include\apr_errno.h	365;"	d
APR_STATUS_IS_EBADF	include\apr_errno.h	1062;"	d
APR_STATUS_IS_EBADF	include\apr_errno.h	1146;"	d
APR_STATUS_IS_EBADF	include\apr_errno.h	1240;"	d
APR_STATUS_IS_EBADF	include\apr_errno.h	934;"	d
APR_STATUS_IS_EBADIP	include\apr_errno.h	389;"	d
APR_STATUS_IS_EBADMASK	include\apr_errno.h	391;"	d
APR_STATUS_IS_EBADPATH	include\apr_errno.h	412;"	d
APR_STATUS_IS_EBUSY	include\apr_errno.h	626;"	d
APR_STATUS_IS_ECONNABORTED	include\apr_errno.h	1090;"	d
APR_STATUS_IS_ECONNABORTED	include\apr_errno.h	1161;"	d
APR_STATUS_IS_ECONNABORTED	include\apr_errno.h	1277;"	d
APR_STATUS_IS_ECONNABORTED	include\apr_errno.h	1280;"	d
APR_STATUS_IS_ECONNABORTED	include\apr_errno.h	953;"	d
APR_STATUS_IS_ECONNREFUSED	include\apr_errno.h	1086;"	d
APR_STATUS_IS_ECONNREFUSED	include\apr_errno.h	1157;"	d
APR_STATUS_IS_ECONNREFUSED	include\apr_errno.h	1261;"	d
APR_STATUS_IS_ECONNREFUSED	include\apr_errno.h	949;"	d
APR_STATUS_IS_ECONNRESET	include\apr_errno.h	1092;"	d
APR_STATUS_IS_ECONNRESET	include\apr_errno.h	1163;"	d
APR_STATUS_IS_ECONNRESET	include\apr_errno.h	1284;"	d
APR_STATUS_IS_ECONNRESET	include\apr_errno.h	955;"	d
APR_STATUS_IS_EDSOOPEN	include\apr_errno.h	398;"	d
APR_STATUS_IS_EDSOOPEN	include\apr_errno.h	401;"	d
APR_STATUS_IS_EEXIST	include\apr_errno.h	1033;"	d
APR_STATUS_IS_EEXIST	include\apr_errno.h	1138;"	d
APR_STATUS_IS_EEXIST	include\apr_errno.h	1209;"	d
APR_STATUS_IS_EEXIST	include\apr_errno.h	914;"	d
APR_STATUS_IS_EFTYPE	include\apr_errno.h	1107;"	d
APR_STATUS_IS_EFTYPE	include\apr_errno.h	1178;"	d
APR_STATUS_IS_EFTYPE	include\apr_errno.h	1293;"	d
APR_STATUS_IS_EFTYPE	include\apr_errno.h	967;"	d
APR_STATUS_IS_EGENERAL	include\apr_errno.h	385;"	d
APR_STATUS_IS_EHOSTUNREACH	include\apr_errno.h	1103;"	d
APR_STATUS_IS_EHOSTUNREACH	include\apr_errno.h	1173;"	d
APR_STATUS_IS_EHOSTUNREACH	include\apr_errno.h	1289;"	d
APR_STATUS_IS_EHOSTUNREACH	include\apr_errno.h	963;"	d
APR_STATUS_IS_EINCOMPLETE	include\apr_errno.h	408;"	d
APR_STATUS_IS_EINIT	include\apr_errno.h	604;"	d
APR_STATUS_IS_EINPROGRESS	include\apr_errno.h	1088;"	d
APR_STATUS_IS_EINPROGRESS	include\apr_errno.h	1159;"	d
APR_STATUS_IS_EINPROGRESS	include\apr_errno.h	1263;"	d
APR_STATUS_IS_EINPROGRESS	include\apr_errno.h	951;"	d
APR_STATUS_IS_EINTR	include\apr_errno.h	1082;"	d
APR_STATUS_IS_EINTR	include\apr_errno.h	1153;"	d
APR_STATUS_IS_EINTR	include\apr_errno.h	1257;"	d
APR_STATUS_IS_EINTR	include\apr_errno.h	945;"	d
APR_STATUS_IS_EINVAL	include\apr_errno.h	1065;"	d
APR_STATUS_IS_EINVAL	include\apr_errno.h	1147;"	d
APR_STATUS_IS_EINVAL	include\apr_errno.h	1242;"	d
APR_STATUS_IS_EINVAL	include\apr_errno.h	936;"	d
APR_STATUS_IS_EINVALSOCK	include\apr_errno.h	367;"	d
APR_STATUS_IS_EMFILE	include\apr_errno.h	1059;"	d
APR_STATUS_IS_EMFILE	include\apr_errno.h	1144;"	d
APR_STATUS_IS_EMFILE	include\apr_errno.h	1236;"	d
APR_STATUS_IS_EMFILE	include\apr_errno.h	931;"	d
APR_STATUS_IS_EMISMATCH	include\apr_errno.h	620;"	d
APR_STATUS_IS_ENAMETOOLONG	include\apr_errno.h	1036;"	d
APR_STATUS_IS_ENAMETOOLONG	include\apr_errno.h	1139;"	d
APR_STATUS_IS_ENAMETOOLONG	include\apr_errno.h	1211;"	d
APR_STATUS_IS_ENAMETOOLONG	include\apr_errno.h	919;"	d
APR_STATUS_IS_ENETDOWN	include\apr_errno.h	1177;"	d
APR_STATUS_IS_ENETUNREACH	include\apr_errno.h	1105;"	d
APR_STATUS_IS_ENETUNREACH	include\apr_errno.h	1175;"	d
APR_STATUS_IS_ENETUNREACH	include\apr_errno.h	1291;"	d
APR_STATUS_IS_ENETUNREACH	include\apr_errno.h	965;"	d
APR_STATUS_IS_ENFILE	include\apr_errno.h	1061;"	d
APR_STATUS_IS_ENFILE	include\apr_errno.h	1145;"	d
APR_STATUS_IS_ENFILE	include\apr_errno.h	1238;"	d
APR_STATUS_IS_ENFILE	include\apr_errno.h	933;"	d
APR_STATUS_IS_ENODIR	include\apr_errno.h	373;"	d
APR_STATUS_IS_ENOENT	include\apr_errno.h	1039;"	d
APR_STATUS_IS_ENOENT	include\apr_errno.h	1140;"	d
APR_STATUS_IS_ENOENT	include\apr_errno.h	1219;"	d
APR_STATUS_IS_ENOENT	include\apr_errno.h	1222;"	d
APR_STATUS_IS_ENOENT	include\apr_errno.h	922;"	d
APR_STATUS_IS_ENOLOCK	include\apr_errno.h	375;"	d
APR_STATUS_IS_ENOMEM	include\apr_errno.h	1053;"	d
APR_STATUS_IS_ENOMEM	include\apr_errno.h	1143;"	d
APR_STATUS_IS_ENOMEM	include\apr_errno.h	1234;"	d
APR_STATUS_IS_ENOMEM	include\apr_errno.h	930;"	d
APR_STATUS_IS_ENOPOLL	include\apr_errno.h	377;"	d
APR_STATUS_IS_ENOPOOL	include\apr_errno.h	363;"	d
APR_STATUS_IS_ENOPROC	include\apr_errno.h	369;"	d
APR_STATUS_IS_ENOSHMAVAIL	include\apr_errno.h	387;"	d
APR_STATUS_IS_ENOSOCKET	include\apr_errno.h	379;"	d
APR_STATUS_IS_ENOSPC	include\apr_errno.h	1051;"	d
APR_STATUS_IS_ENOSPC	include\apr_errno.h	1142;"	d
APR_STATUS_IS_ENOSPC	include\apr_errno.h	1228;"	d
APR_STATUS_IS_ENOSPC	include\apr_errno.h	1231;"	d
APR_STATUS_IS_ENOSPC	include\apr_errno.h	928;"	d
APR_STATUS_IS_ENOSTAT	include\apr_errno.h	357;"	d
APR_STATUS_IS_ENOTDIR	include\apr_errno.h	1044;"	d
APR_STATUS_IS_ENOTDIR	include\apr_errno.h	1141;"	d
APR_STATUS_IS_ENOTDIR	include\apr_errno.h	1225;"	d
APR_STATUS_IS_ENOTDIR	include\apr_errno.h	927;"	d
APR_STATUS_IS_ENOTEMPTY	include\apr_errno.h	1119;"	d
APR_STATUS_IS_ENOTEMPTY	include\apr_errno.h	1181;"	d
APR_STATUS_IS_ENOTEMPTY	include\apr_errno.h	1299;"	d
APR_STATUS_IS_ENOTEMPTY	include\apr_errno.h	973;"	d
APR_STATUS_IS_ENOTENOUGHENTROPY	include\apr_errno.h	427;"	d
APR_STATUS_IS_ENOTHDKEY	include\apr_errno.h	383;"	d
APR_STATUS_IS_ENOTHREAD	include\apr_errno.h	381;"	d
APR_STATUS_IS_ENOTIME	include\apr_errno.h	371;"	d
APR_STATUS_IS_ENOTIMPL	include\apr_errno.h	613;"	d
APR_STATUS_IS_ENOTSOCK	include\apr_errno.h	1084;"	d
APR_STATUS_IS_ENOTSOCK	include\apr_errno.h	1155;"	d
APR_STATUS_IS_ENOTSOCK	include\apr_errno.h	1259;"	d
APR_STATUS_IS_ENOTSOCK	include\apr_errno.h	947;"	d
APR_STATUS_IS_EOF	include\apr_errno.h	565;"	d
APR_STATUS_IS_EPATHWILD	include\apr_errno.h	414;"	d
APR_STATUS_IS_EPIPE	include\apr_errno.h	1115;"	d
APR_STATUS_IS_EPIPE	include\apr_errno.h	1179;"	d
APR_STATUS_IS_EPIPE	include\apr_errno.h	1295;"	d
APR_STATUS_IS_EPIPE	include\apr_errno.h	968;"	d
APR_STATUS_IS_EPROC_UNKNOWN	include\apr_errno.h	425;"	d
APR_STATUS_IS_ERELATIVE	include\apr_errno.h	406;"	d
APR_STATUS_IS_ESPIPE	include\apr_errno.h	1072;"	d
APR_STATUS_IS_ESPIPE	include\apr_errno.h	1148;"	d
APR_STATUS_IS_ESPIPE	include\apr_errno.h	1244;"	d
APR_STATUS_IS_ESPIPE	include\apr_errno.h	939;"	d
APR_STATUS_IS_ESYMNOTFOUND	include\apr_errno.h	419;"	d
APR_STATUS_IS_ESYMNOTFOUND	include\apr_errno.h	422;"	d
APR_STATUS_IS_ETIMEDOUT	include\apr_errno.h	1096;"	d
APR_STATUS_IS_ETIMEDOUT	include\apr_errno.h	1166;"	d
APR_STATUS_IS_ETIMEDOUT	include\apr_errno.h	1287;"	d
APR_STATUS_IS_ETIMEDOUT	include\apr_errno.h	958;"	d
APR_STATUS_IS_EXDEV	include\apr_errno.h	1117;"	d
APR_STATUS_IS_EXDEV	include\apr_errno.h	1180;"	d
APR_STATUS_IS_EXDEV	include\apr_errno.h	1297;"	d
APR_STATUS_IS_EXDEV	include\apr_errno.h	971;"	d
APR_STATUS_IS_FILEBASED	include\apr_errno.h	589;"	d
APR_STATUS_IS_INCHILD	include\apr_errno.h	490;"	d
APR_STATUS_IS_INCOMPLETE	include\apr_errno.h	540;"	d
APR_STATUS_IS_INPARENT	include\apr_errno.h	497;"	d
APR_STATUS_IS_KEYBASED	include\apr_errno.h	596;"	d
APR_STATUS_IS_NOTDETACH	include\apr_errno.h	511;"	d
APR_STATUS_IS_NOTFOUND	include\apr_errno.h	572;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	1099;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	1100;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	1169;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	1170;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	532;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	960;"	d
APR_STATUS_IS_TIMEUP	include\apr_errno.h	961;"	d
APR_STDERR_FLAG	include\arch\win32\apr_arch_file_io.h	106;"	d
APR_STDIN_FLAG	include\arch\win32\apr_arch_file_io.h	104;"	d
APR_STDOUT_FLAG	include\arch\win32\apr_arch_file_io.h	105;"	d
APR_STD_FLAGS	include\arch\win32\apr_arch_file_io.h	107;"	d
APR_STRINGIFY	include\apr_general.h	150;"	d
APR_STRINGIFY	include\apr_version.h	98;"	d
APR_STRINGIFY_HELPER	include\apr_general.h	152;"	d
APR_STRINGIFY_HELPER	include\apr_version.h	100;"	d
APR_STRINGS_H	include\apr_strings.h	41;"	d
APR_SUCCESS	include\apr_errno.h	223;"	d
APR_SUPPORT_H	include\apr_support.h	18;"	d
APR_TABLES_H	include\apr_tables.h	18;"	d
APR_TCP_DEFER_ACCEPT	include\apr_network_io.h	98;"	d
APR_TCP_NODELAY	include\apr_network_io.h	71;"	d
APR_TCP_NODELAY_INHERITED	include\apr.h	347;"	d
APR_TCP_NOPUSH	include\apr_network_io.h	74;"	d
APR_TCP_NOPUSH_FLAG	include\apr.h	343;"	d
APR_TEST_INCLUDES	test\abts_tests.h	18;"	d
APR_TEST_UTIL	test\testutil.h	22;"	d
APR_THREADATTR_DETACHED	include\arch\os2\apr_arch_threadproc.h	23;"	d
APR_THREAD_COND_H	include\apr_thread_cond.h	18;"	d
APR_THREAD_FUNC	include\apr.h	484;"	d
APR_THREAD_MUTEX_DEFAULT	include\apr_thread_mutex.h	43;"	d
APR_THREAD_MUTEX_H	include\apr_thread_mutex.h	18;"	d
APR_THREAD_MUTEX_NESTED	include\apr_thread_mutex.h	44;"	d
APR_THREAD_MUTEX_UNNESTED	include\apr_thread_mutex.h	45;"	d
APR_THREAD_PROC_H	include\apr_thread_proc.h	18;"	d
APR_THREAD_RWLOCK_H	include\apr_thread_rwlock.h	18;"	d
APR_THREAD_STACKSIZE	include\arch\os2\apr_arch_threadproc.h	26;"	d
APR_TIMEUP	include\apr_errno.h	448;"	d
APR_TIME_C	include\apr_time.h	50;"	d
APR_TIME_H	include\apr_time.h	18;"	d
APR_TIME_T_FMT	include\apr_time.h	53;"	d
APR_TO_OS_ERROR	include\apr_errno.h	1011;"	d
APR_TO_OS_ERROR	include\apr_errno.h	1127;"	d
APR_TO_OS_ERROR	include\apr_errno.h	1191;"	d
APR_TO_OS_ERROR	include\apr_errno.h	75;"	d
APR_TO_OS_ERROR	include\apr_errno.h	839;"	d
APR_TRUNCATE	include\apr_file_io.h	89;"	d
APR_UEXECUTE	include\apr_file_info.h	103;"	d
APR_UINT16_MAX	include\apr.h	419;"	d
APR_UINT16_MAX	include\apr.h	421;"	d
APR_UINT32_MAX	include\apr.h	437;"	d
APR_UINT32_MAX	include\apr.h	439;"	d
APR_UINT32_TRUNC_CAST	include\arch\apr_private_common.h	39;"	d
APR_UINT64_C	include\apr.h	400;"	d
APR_UINT64_C	include\apr.h	403;"	d
APR_UINT64_MAX	include\apr.h	455;"	d
APR_UINT64_MAX	include\apr.h	457;"	d
APR_UINT64_T_FMT	include\apr.h	572;"	d
APR_UINT64_T_HEX_FMT	include\apr.h	573;"	d
APR_UNKFILE	include\apr_file_info.h	/^    APR_UNKFILE = 127   \/**< a file of some other unknown type *\/$/;"	e	enum:__anon9
APR_UNSPEC	include\apr_network_io.h	145;"	d
APR_UNSPEC	include\apr_network_io.h	147;"	d
APR_UREAD	include\apr_file_info.h	101;"	d
APR_USEC_PER_SEC	include\apr_time.h	61;"	d
APR_USER_H	include\apr_user.h	18;"	d
APR_USETID	include\apr_file_info.h	100;"	d
APR_USE_FCNTL_SERIALIZE	include\apr.h	261;"	d
APR_USE_FLOCK_SERIALIZE	include\apr.h	258;"	d
APR_USE_POSIXSEM_SERIALIZE	include\apr.h	259;"	d
APR_USE_PROC_PTHREAD_SERIALIZE	include\apr.h	262;"	d
APR_USE_PTHREAD_SERIALIZE	include\apr.h	263;"	d
APR_USE_READDIR64_R	include\arch\unix\apr_arch_file_io.h	148;"	d
APR_USE_SHMEM_BEOS	include\apr.h	256;"	d
APR_USE_SHMEM_MMAP_ANON	include\apr.h	255;"	d
APR_USE_SHMEM_MMAP_SHM	include\apr.h	251;"	d
APR_USE_SHMEM_MMAP_TMP	include\apr.h	250;"	d
APR_USE_SHMEM_MMAP_ZERO	include\apr.h	252;"	d
APR_USE_SHMEM_SHMGET	include\apr.h	254;"	d
APR_USE_SHMEM_SHMGET_ANON	include\apr.h	253;"	d
APR_USE_SYSVSEM_SERIALIZE	include\apr.h	260;"	d
APR_UTIL_ERRSPACE_SIZE	include\apr_errno.h	132;"	d
APR_UTIL_START_STATUS	include\apr_errno.h	141;"	d
APR_UWRITE	include\apr_file_info.h	102;"	d
APR_VERSION_AT_LEAST	include\apr_version.h	83;"	d
APR_VERSION_H	include\apr_version.h	18;"	d
APR_VERSION_STRING	include\apr_version.h	104;"	d
APR_VERSION_STRING_CSV	include\apr_version.h	112;"	d
APR_WAIT	include\apr_thread_proc.h	/^    APR_WAIT,           \/**< wait for the specified process to finish *\/$/;"	e	enum:__anon18
APR_WANT_BYTEFUNC	include\apr_want.h	121;"	d
APR_WANT_IOVEC	include\apr_file_io.h	33;"	d
APR_WANT_IOVEC	include\apr_strings.h	51;"	d
APR_WANT_IOVEC	include\apr_want.h	103;"	d
APR_WANT_MEMFUNC	file_io\unix\filepath_util.c	19;"	d	file:
APR_WANT_MEMFUNC	include\apr_allocator.h	27;"	d
APR_WANT_MEMFUNC	include\apr_pools.h	46;"	d
APR_WANT_MEMFUNC	include\apr_want.h	66;"	d
APR_WANT_MEMFUNC	locks\unix\thread_mutex.c	18;"	d	file:
APR_WANT_MEMFUNC	memory\unix\apr_pools.c	30;"	d	file:
APR_WANT_MEMFUNC	misc\netware\rand.c	17;"	d	file:
APR_WANT_MEMFUNC	misc\unix\rand.c	17;"	d	file:
APR_WANT_MEMFUNC	user\unix\userinfo.c	30;"	d	file:
APR_WANT_STDIO	include\apr_file_io.h	32;"	d
APR_WANT_STDIO	include\apr_want.h	77;"	d
APR_WANT_STDIO	strings\apr_strings.c	54;"	d	file:
APR_WANT_STRFUNC	file_io\unix\filepath.c	22;"	d	file:
APR_WANT_STRFUNC	file_io\unix\filepath_util.c	18;"	d	file:
APR_WANT_STRFUNC	include\apr_want.h	55;"	d
APR_WANT_STRFUNC	misc\unix\env.c	17;"	d	file:
APR_WANT_STRFUNC	misc\win32\env.c	17;"	d	file:
APR_WANT_STRFUNC	network_io\unix\sockaddr.c	28;"	d	file:
APR_WANT_STRFUNC	strings\apr_strings.c	55;"	d	file:
APR_WANT_STRFUNC	strings\apr_strtok.c	24;"	d	file:
APR_WEXECUTE	include\apr_file_info.h	111;"	d
APR_WIN_2000	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_2000 =     50,$/;"	e	enum:__anon29
APR_WIN_2000_SP1	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_2000_SP1 = 51,$/;"	e	enum:__anon29
APR_WIN_2000_SP2	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_2000_SP2 = 52,$/;"	e	enum:__anon29
APR_WIN_2003	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_2003 =     70,$/;"	e	enum:__anon29
APR_WIN_95	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_95 =       10,$/;"	e	enum:__anon29
APR_WIN_95_B	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_95_B =     11,$/;"	e	enum:__anon29
APR_WIN_95_OSR2	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_95_OSR2 =  12,$/;"	e	enum:__anon29
APR_WIN_98	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_98 =       14,$/;"	e	enum:__anon29
APR_WIN_98_SE	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_98_SE =    16,$/;"	e	enum:__anon29
APR_WIN_CE_3	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_CE_3 =     23, \/* CE is an odd beast, not supporting *\/$/;"	e	enum:__anon29
APR_WIN_ME	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_ME =       18,$/;"	e	enum:__anon29
APR_WIN_NT	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT =       30, \/* narrow charset APIs (fooA fns), while  *\/$/;"	e	enum:__anon29
APR_WIN_NT_3_5	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_3_5 =   35, \/* not supporting some NT-family features.  *\/$/;"	e	enum:__anon29
APR_WIN_NT_3_51	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_3_51 =  36,$/;"	e	enum:__anon29
APR_WIN_NT_4	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_4 =     40,$/;"	e	enum:__anon29
APR_WIN_NT_4_SP2	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_4_SP2 = 42,$/;"	e	enum:__anon29
APR_WIN_NT_4_SP3	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_4_SP3 = 43,$/;"	e	enum:__anon29
APR_WIN_NT_4_SP4	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_4_SP4 = 44,$/;"	e	enum:__anon29
APR_WIN_NT_4_SP5	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_4_SP5 = 45,$/;"	e	enum:__anon29
APR_WIN_NT_4_SP6	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_NT_4_SP6 = 46,$/;"	e	enum:__anon29
APR_WIN_UNICODE	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_UNICODE =  20, \/* Prior versions support only narrow chars *\/$/;"	e	enum:__anon29
APR_WIN_UNK	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_UNK =       0,$/;"	e	enum:__anon29
APR_WIN_UNSUP	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_UNSUP =     1,$/;"	e	enum:__anon29
APR_WIN_VISTA	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_VISTA =    80$/;"	e	enum:__anon29
APR_WIN_XP	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_XP =       60,$/;"	e	enum:__anon29
APR_WIN_XP_SP1	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_XP_SP1 =   61,$/;"	e	enum:__anon29
APR_WIN_XP_SP2	include\arch\win32\apr_arch_misc.h	/^    APR_WIN_XP_SP2 =   62,$/;"	e	enum:__anon29
APR_WREAD	include\apr_file_info.h	109;"	d
APR_WRITE	include\apr_file_io.h	86;"	d
APR_WRITEATTRS	include\arch\win32\apr_arch_file_io.h	108;"	d
APR_WRITECONTROL	include\arch\win32\apr_arch_file_io.h	102;"	d
APR_WRITE_BLOCK	include\apr_thread_proc.h	94;"	d
APR_WSTICKY	include\apr_file_info.h	108;"	d
APR_WWRITE	include\apr_file_info.h	110;"	d
APR_XTHREAD	include\apr_file_io.h	94;"	d
ATIME_H	include\arch\win32\apr_arch_atime.h	18;"	d
ATOMIC_H	include\arch\unix\apr_arch_atomic.h	18;"	d
ATOMIC_HASH	atomic\unix\mutex.c	43;"	d	file:
AffinityMask	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t AffinityMask;$/;"	m	struct:PBI
AllocationSize	include\arch\win32\apr_arch_misc.h	/^    LONGLONG AllocationSize;$/;"	m	struct:FSI
AprTimeToFileTime	include\arch\win32\apr_arch_atime.h	/^static APR_INLINE void AprTimeToFileTime(LPFILETIME pft, apr_time_t t)$/;"	f
BEGINNING	dso\aix\dso.c	66;"	d	file:
BEOS_BLOCKING	file_io\unix\pipe.c	30;"	d	file:
BEOS_BLOCKING	file_io\unix\pipe.c	32;"	d	file:
BEOS_MAX_DATAKEYS	include\arch\beos\apr_arch_threadproc.h	40;"	d
BIG_NUM	locks\beos\thread_rwlock.c	25;"	d	file:
BLK	test\sendfile.c	/^typedef enum {BLK, NONBLK, TIMEOUT} client_socket_mode_t;$/;"	e	enum:__anon34	file:
BLK_OFF	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon22
BLK_OFF	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon23
BLK_OFF	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon24
BLK_ON	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon22
BLK_ON	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon23
BLK_ON	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon24
BLK_UNKNOWN	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon22
BLK_UNKNOWN	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon23
BLK_UNKNOWN	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon24
BOUNDARY_INDEX	memory\unix\apr_pools.c	56;"	d	file:
BOUNDARY_INDEX	memory\unix\apr_pools.c	59;"	d	file:
BOUNDARY_SIZE	memory\unix\apr_pools.c	57;"	d	file:
BOUNDARY_SIZE	memory\unix\apr_pools.c	60;"	d	file:
BSC32	apr.mak	/^BSC32=bscmake.exe$/;"	m
BSC32	build\aprapp.mak	/^BSC32=bscmake.exe$/;"	m
BSC32	build\libaprapp.mak	/^BSC32=bscmake.exe$/;"	m
BSC32	libapr.mak	/^BSC32=bscmake.exe$/;"	m
BSC32_FLAGS	apr.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\\apr.bsc" $/;"	m
BSC32_FLAGS	build\aprapp.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\\aprapp.bsc" $/;"	m
BSC32_FLAGS	build\libaprapp.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\\libaprapp.bsc" $/;"	m
BSC32_FLAGS	libapr.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\\libapr.bsc" $/;"	m
BSC32_SBRS	apr.mak	/^BSC32_SBRS= \\$/;"	m
BSC32_SBRS	build\aprapp.mak	/^BSC32_SBRS= \\$/;"	m
BSC32_SBRS	build\libaprapp.mak	/^BSC32_SBRS= \\$/;"	m
BSC32_SBRS	libapr.mak	/^BSC32_SBRS= \\$/;"	m
BUF_SIZE	test\echod.c	29;"	d	file:
BUILD_DIRS	build-outputs.mk	/^BUILD_DIRS = atomic atomic\/os390 atomic\/unix atomic\/win32 dso dso\/aix dso\/beos dso\/os2 dso\/os390 dso\/unix dso\/win32 file_io file_io\/os2 file_io\/unix file_io\/win32 locks locks\/beos locks\/os2 locks\/unix locks\/win32 memory memory\/unix misc misc\/unix misc\/win32 mmap mmap\/unix mmap\/win32 network_io network_io\/beos network_io\/os2 network_io\/unix network_io\/win32 passwd poll poll\/os2 poll\/unix random random\/unix shmem shmem\/beos shmem\/os2 shmem\/unix shmem\/win32 strings support support\/unix tables threadproc threadproc\/beos threadproc\/os2 threadproc\/unix threadproc\/win32 time time\/unix time\/win32 user user\/unix user\/win32$/;"	m
B_size	random\unix\apr_random.c	68;"	d	file:
BasePriority	include\arch\win32\apr_arch_misc.h	/^    LONG      BasePriority;$/;"	m	struct:PBI
CASE_MASK	tables\apr_tables.c	291;"	d	file:
CASE_MASK	tables\apr_tables.c	293;"	d	file:
CC	build\aplibtool.c	36;"	d	file:
CFG	apr.mak	/^CFG=apr - Win32 Release$/;"	m
CFG	build\aprapp.mak	/^CFG=aprapp - Win32 Release$/;"	m
CFG	build\libaprapp.mak	/^CFG=libaprapp - Win32 Release$/;"	m
CFG	libapr.mak	/^CFG=libapr - Win32 Release$/;"	m
CHECK_QUOTATION	strings\apr_cpystrn.c	100;"	d	file:
CHILDREN	test\testprocmutex.c	31;"	d	file:
CHK_FIELD	test\testtime.c	110;"	d	file:
CHK_FIELD	test\testtime.c	98;"	d	file:
COMPUTE_KEY_CHECKSUM	tables\apr_tables.c	308;"	d	file:
COPY_BUFSIZ	file_io\unix\copy.c	56;"	d	file:
CPP	apr.mak	/^CPP=cl.exe$/;"	m
CPP	build\aprapp.mak	/^CPP=cl.exe$/;"	m
CPP	build\libaprapp.mak	/^CPP=cl.exe$/;"	m
CPP	libapr.mak	/^CPP=cl.exe$/;"	m
CPP_PROJ	apr.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "NDEBUG" \/D "APR_DECLARE_STATIC" \/D "WIN32" \/D "WINNT" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\apr-1" \/FD \/c $/;"	m
CPP_PROJ	apr.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "NDEBUG" \/D "APR_DECLARE_STATIC" \/D "WIN32" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\apr-1" \/FD \/c $/;"	m
CPP_PROJ	apr.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "_DEBUG" \/D "APR_DECLARE_STATIC" \/D "WIN32" \/D "WINNT" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\apr-1" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	apr.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "_DEBUG" \/D "APR_DECLARE_STATIC" \/D "WIN32" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\apr-1" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	build\aprapp.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "NDEBUG" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/D "APR_DECLARE_STATIC" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\aprapp-1" \/FD \/c $/;"	m
CPP_PROJ	build\aprapp.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "NDEBUG" \/D "WINNT" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/D "APR_DECLARE_STATIC" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\aprapp-1" \/FD \/c $/;"	m
CPP_PROJ	build\aprapp.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "_DEBUG" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/D "APR_DECLARE_STATIC" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\aprapp-1" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	build\aprapp.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "_DEBUG" \/D "WINNT" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/D "APR_DECLARE_STATIC" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\aprapp-1" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	build\libaprapp.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "NDEBUG" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\libaprapp-1" \/FD \/c $/;"	m
CPP_PROJ	build\libaprapp.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "NDEBUG" \/D "WINNT" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\libaprapp-1" \/FD \/c $/;"	m
CPP_PROJ	build\libaprapp.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "_DEBUG" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\libaprapp-1" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	build\libaprapp.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I "..\/include" \/I "..\/include\/arch" \/I "..\/include\/arch\/win32" \/I "..\/include\/arch\/unix" \/D "_DEBUG" \/D "WINNT" \/D "WIN32" \/D "_WINDOWS" \/D "APR_APP" \/Fo"$(INTDIR)\\\\" \/Fd"$(OUTDIR)\\libaprapp-1" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	libapr.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "NDEBUG" \/D "APR_DECLARE_EXPORT" \/D "WIN32" \/D "WINNT" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\libapr_src" \/FD \/c $/;"	m
CPP_PROJ	libapr.mak	/^CPP_PROJ=\/nologo \/MD \/W3 \/Zi \/O2 \/Oy- \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "NDEBUG" \/D "APR_DECLARE_EXPORT" \/D "WIN32" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\libapr_src" \/FD \/c $/;"	m
CPP_PROJ	libapr.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "_DEBUG" \/D "APR_DECLARE_EXPORT" \/D "WIN32" \/D "WINNT" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\libapr_src" \/FD \/EHsc \/c $/;"	m
CPP_PROJ	libapr.mak	/^CPP_PROJ=\/nologo \/MDd \/W3 \/Zi \/Od \/I ".\/include" \/I ".\/include\/arch" \/I ".\/include\/arch\/win32" \/I ".\/include\/arch\/unix" \/D "_DEBUG" \/D "APR_DECLARE_EXPORT" \/D "WIN32" \/D "_WINDOWS" \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\libapr_src" \/FD \/EHsc \/c $/;"	m
CR	passwd\apr_getpass.c	71;"	d	file:
CR	passwd\apr_getpass.c	74;"	d	file:
CREATE_UNICODE_ENVIRONMENT	threadproc\win32\proc.c	53;"	d	file:
CancelIo	include\arch\win32\apr_arch_misc.h	254;"	d
Cdtor	dso\aix\dso.c	/^} Cdtor, *CdtorPtr;$/;"	t	typeref:struct:__anon8	file:
CdtorPtr	dso\aix\dso.c	/^} Cdtor, *CdtorPtr;$/;"	t	typeref:struct:__anon8	file:
Ch	random\unix\sha2.c	133;"	d	file:
CloseHandle	include\arch\win32\apr_dbg_win32_handles.h	61;"	d
CommandLineToArgvW	include\arch\win32\apr_arch_misc.h	318;"	d
ConfigParser	build\gen-build.py	/^import ConfigParser$/;"	i
CreateEventA	include\arch\win32\apr_dbg_win32_handles.h	67;"	d
CreateEventW	include\arch\win32\apr_dbg_win32_handles.h	68;"	d
CreateFileA	include\arch\win32\apr_dbg_win32_handles.h	70;"	d
CreateFileMappingA	include\arch\win32\apr_dbg_win32_handles.h	73;"	d
CreateFileMappingW	include\arch\win32\apr_dbg_win32_handles.h	74;"	d
CreateFileW	include\arch\win32\apr_dbg_win32_handles.h	71;"	d
CreateIoCompletionPort	include\arch\win32\apr_dbg_win32_handles.h	79;"	d
CreateMutexA	include\arch\win32\apr_dbg_win32_handles.h	76;"	d
CreateMutexW	include\arch\win32\apr_dbg_win32_handles.h	77;"	d
CreateNamedPipeA	include\arch\win32\apr_dbg_win32_handles.h	81;"	d
CreateNamedPipeW	include\arch\win32\apr_dbg_win32_handles.h	82;"	d
CreatePipe	include\arch\win32\apr_dbg_win32_handles.h	84;"	d
CreateProcessA	include\arch\win32\apr_dbg_win32_handles.h	91;"	d
CreateProcessW	include\arch\win32\apr_dbg_win32_handles.h	97;"	d
CreateSemaphoreA	include\arch\win32\apr_dbg_win32_handles.h	104;"	d
CreateSemaphoreW	include\arch\win32\apr_dbg_win32_handles.h	105;"	d
CreateThread	include\arch\win32\apr_dbg_win32_handles.h	107;"	d
CreateToolhelp32Snapshot	include\arch\win32\apr_arch_misc.h	415;"	d
CreateToolhelp32Snapshot	include\arch\win32\apr_arch_misc.h	421;"	d
CurrentTid	locks\os2\proc_mutex.c	26;"	d	file:
DATASTR	test\testsock.h	20;"	d
DECIMAL_DIG	include\arch\netware\apr_arch_pre_nw.h	47;"	d
DECLARE_MUTEX_LOCKED	atomic\unix\mutex.c	24;"	d	file:
DECLARE_MUTEX_LOCKED	atomic\unix\mutex.c	32;"	d	file:
DEF2IMPLIB_CMD	build\aplibtool.c	38;"	d	file:
DEF2IMPLIB_CMD	build\jlibtool.c	33;"	d	file:
DETACHED_PROCESS	threadproc\win32\proc.c	50;"	d	file:
DETACH_ARG	threadproc\unix\thread.c	62;"	d	file:
DETACH_ARG	threadproc\unix\thread.c	64;"	d	file:
DETERMINE_NEXTSTRING	strings\apr_cpystrn.c	115;"	d	file:
DIRNAME	test\testfile.c	26;"	d	file:
DLL_NTDLL	include\arch\win32\apr_arch_misc.h	/^    DLL_NTDLL = 5,         \/* shell32  From our real kernel *\/$/;"	e	enum:__anon30
DLL_SHSTDAPI	include\arch\win32\apr_arch_misc.h	/^    DLL_SHSTDAPI = 4,      \/* shell32  From ShellAPI.h      *\/$/;"	e	enum:__anon30
DLL_WINADVAPI	include\arch\win32\apr_arch_misc.h	/^    DLL_WINADVAPI = 1,     \/* advapi32 From WinBase.h       *\/$/;"	e	enum:__anon30
DLL_WINBASEAPI	include\arch\win32\apr_arch_misc.h	/^    DLL_WINBASEAPI = 0,    \/* kernel32 From WinBase.h       *\/$/;"	e	enum:__anon30
DLL_WINSOCK2API	include\arch\win32\apr_arch_misc.h	/^    DLL_WINSOCK2API = 3,   \/* ws2_32   From WinSock2.h      *\/$/;"	e	enum:__anon30
DLL_WINSOCKAPI	include\arch\win32\apr_arch_misc.h	/^    DLL_WINSOCKAPI = 2,    \/* mswsock  From WinSock.h       *\/$/;"	e	enum:__anon30
DLL_defined	include\arch\win32\apr_arch_misc.h	/^    DLL_defined = 6        \/* must define as last idx_ + 1  *\/$/;"	e	enum:__anon30
DLSYM_NEEDS_UNDERSCORE	include\arch\unix\apr_arch_dso.h	52;"	d
DRIVE_ONLY	include\arch\netware\apr_arch_file_io.h	145;"	d
DSEP	test\testpath.c	25;"	d	file:
DSEP	test\testpath.c	28;"	d	file:
DSO_H	include\arch\aix\apr_arch_dso.h	18;"	d
DSO_H	include\arch\beos\apr_arch_dso.h	18;"	d
DSO_H	include\arch\netware\apr_arch_dso.h	18;"	d
DSO_H	include\arch\os2\apr_arch_dso.h	18;"	d
DSO_H	include\arch\os390\apr_arch_dso.h	18;"	d
DSO_H	include\arch\unix\apr_arch_dso.h	18;"	d
DSO_H	include\arch\win32\apr_arch_dso.h	18;"	d
DS_POSTBUILD_DEP	libapr.mak	/^DS_POSTBUILD_DEP=$(INTDIR)\\postbld.dep$/;"	m
DYLD_LIBRARY_HANDLE	dso\unix\dso.c	38;"	d	file:
DYNAMIC_INSTALL_NAME	build\jlibtool.c	71;"	d	file:
DYNAMIC_LIB_EXT	build\aplibtool.c	42;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	100;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	121;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	135;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	153;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	37;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	57;"	d	file:
DYNAMIC_LIB_EXT	build\jlibtool.c	80;"	d	file:
DYNAMIC_LINK_NO_INSTALL	build\jlibtool.c	72;"	d	file:
DYNAMIC_LINK_OPTS	build\jlibtool.c	111;"	d	file:
DYNAMIC_LINK_OPTS	build\jlibtool.c	144;"	d	file:
DYNAMIC_LINK_OPTS	build\jlibtool.c	68;"	d	file:
DYNAMIC_LINK_OPTS	build\jlibtool.c	91;"	d	file:
DYNAMIC_LINK_UNDEFINED	build\jlibtool.c	69;"	d	file:
DeletePending	include\arch\win32\apr_arch_misc.h	/^    BOOL     DeletePending;$/;"	m	struct:FSI
DeregisterEventSource	include\arch\win32\apr_dbg_win32_handles.h	109;"	d
Directory	include\arch\win32\apr_arch_misc.h	/^    BOOL     Directory;$/;"	m	struct:FSI
DisposeLibraryData	misc\netware\libprews.c	/^int DisposeLibraryData(void *data)$/;"	f
DuplicateHandle	include\arch\win32\apr_dbg_win32_handles.h	115;"	d
EAFNOSUPPORT	network_io\unix\inet_ntop.c	52;"	d	file:
EAFNOSUPPORT	network_io\unix\inet_pton.c	54;"	d	file:
ELSE_WIN_OS_IS_ANSI	include\arch\win32\apr_arch_misc.h	137;"	d
ELSE_WIN_OS_IS_ANSI	include\arch\win32\apr_arch_misc.h	140;"	d
EMSG	misc\unix\getopt.c	38;"	d	file:
ENOSPC	include\arch\win32\apr_private.h	137;"	d
ERR_OVERFLOW	passwd\apr_getpass.c	79;"	d	file:
EXE_EXT	build\aplibtool.c	43;"	d	file:
EXE_EXT	build\jlibtool.c	164;"	d	file:
EXE_EXT	build\jlibtool.c	38;"	d	file:
EXPONENT_LENGTH	strings\apr_snprintf.c	62;"	d	file:
EXTENSION	test\testutil.h	39;"	d
EXTENSION	test\testutil.h	41;"	d
EXTENSION	test\testutil.h	43;"	d
EndOfFile	include\arch\win32\apr_arch_misc.h	/^    LONGLONG EndOfFile;$/;"	m	struct:FSI
ExitStatus	include\arch\win32\apr_arch_misc.h	/^    LONG      ExitStatus;$/;"	m	struct:PBI
Export	dso\aix\dso.c	/^} Export, *ExportPtr;$/;"	t	typeref:struct:__anon7	file:
ExportPtr	dso\aix\dso.c	/^} Export, *ExportPtr;$/;"	t	typeref:struct:__anon7	file:
FAILED_READ	test\testflock.h	22;"	d
FAILS	test\testfnmatch.c	34;"	d	file:
FAILS_IF	test\testfnmatch.c	31;"	d	file:
FALSE	include\apr_general.h	51;"	d
FALSE	strings\apr_snprintf.c	50;"	d	file:
FALSE	test\abts.h	35;"	d
FAR	include\arch\netware\apr_arch_pre_nw.h	29;"	d
FD_SETSIZE	poll\unix\pollcb.c	19;"	d	file:
FD_SETSIZE	poll\unix\pollset.c	19;"	d	file:
FD_SETSIZE	poll\unix\select.c	19;"	d	file:
FILENAME	test\testfile.c	27;"	d	file:
FILENAME	test\testfileinfo.c	26;"	d	file:
FILEPATH	test\testdup.c	26;"	d	file:
FILE_ATTRIBUTE_DEVICE	include\arch\win32\apr_arch_file_io.h	113;"	d
FILE_ATTRIBUTE_REPARSE_POINT	include\arch\win32\apr_arch_file_io.h	116;"	d
FILE_DATA_CHAR	test\sendfile.c	39;"	d	file:
FILE_FLAG_OPEN_NO_RECALL	include\arch\win32\apr_arch_file_io.h	119;"	d
FILE_FLAG_OPEN_REPARSE_POINT	include\arch\win32\apr_arch_file_io.h	122;"	d
FILE_IO_H	include\arch\netware\apr_arch_file_io.h	18;"	d
FILE_IO_H	include\arch\os2\apr_arch_file_io.h	18;"	d
FILE_IO_H	include\arch\unix\apr_arch_file_io.h	18;"	d
FILE_IO_H	include\arch\win32\apr_arch_file_io.h	18;"	d
FILE_LENGTH	test\sendfile.c	37;"	d	file:
FIX_PRECISION	strings\apr_snprintf.c	280;"	d	file:
FLOAT_DIGITS	strings\apr_snprintf.c	61;"	d	file:
FREAD	dso\aix\dso.c	57;"	d	file:
FREAD	dso\aix\dso.c	72;"	d	file:
FS3_to_finfo	file_io\os2\filestat.c	/^static void FS3_to_finfo(apr_finfo_t *finfo, FILESTATUS3 *fstatus)$/;"	f	file:
FSEEK	dso\aix\dso.c	69;"	d	file:
FSI	include\arch\win32\apr_arch_misc.h	/^typedef struct FSI {$/;"	s
FSI	include\arch\win32\apr_arch_misc.h	/^} FSI, *PFSI;$/;"	t	typeref:struct:FSI
FSI::AllocationSize	include\arch\win32\apr_arch_misc.h	/^    LONGLONG AllocationSize;$/;"	m	struct:FSI
FSI::DeletePending	include\arch\win32\apr_arch_misc.h	/^    BOOL     DeletePending;$/;"	m	struct:FSI
FSI::Directory	include\arch\win32\apr_arch_misc.h	/^    BOOL     Directory;$/;"	m	struct:FSI
FSI::EndOfFile	include\arch\win32\apr_arch_misc.h	/^    LONGLONG EndOfFile;$/;"	m	struct:FSI
FSI::NumberOfLinks	include\arch\win32\apr_arch_misc.h	/^    ULONG    NumberOfLinks;$/;"	m	struct:FSI
FWRITE	dso\aix\dso.c	58;"	d	file:
FileTimeToAprTime	include\arch\win32\apr_arch_atime.h	/^static APR_INLINE void FileTimeToAprTime(apr_time_t *result, FILETIME *input)$/;"	f
GEN_EXPORTS	build\aplibtool.c	37;"	d	file:
GEN_EXPORTS	build\jlibtool.c	32;"	d	file:
GETHOSTBYNAME_BUFLEN	network_io\unix\sockaddr.c	58;"	d	file:
GLOBAL_MUTEX_H	include\arch\netware\apr_arch_global_mutex.h	18;"	d
GLOBAL_MUTEX_H	include\arch\unix\apr_arch_global_mutex.h	18;"	d
GRBUF_SIZE	user\unix\groupinfo.c	31;"	d	file:
GccCDtorPtr	dso\aix\dso.c	/^typedef void (*GccCDtorPtr) (void);$/;"	t	file:
GetCompressedFileSize	include\arch\win32\apr_arch_misc.h	335;"	d
GetCompressedFileSize	include\arch\win32\apr_arch_misc.h	336;"	d
GetCompressedFileSizeA	include\arch\win32\apr_arch_misc.h	328;"	d
GetCompressedFileSizeA	include\arch\win32\apr_arch_misc.h	334;"	d
GetCompressedFileSizeW	include\arch\win32\apr_arch_misc.h	339;"	d
GetCompressedFileSizeW	include\arch\win32\apr_arch_misc.h	345;"	d
GetCurrentProcess	include\arch\win32\apr_dbg_win32_handles.h	124;"	d
GetCurrentThread	include\arch\win32\apr_dbg_win32_handles.h	128;"	d
GetEffectiveRightsFromAclW	include\arch\win32\apr_arch_misc.h	271;"	d
GetFileAttributesEx	include\arch\win32\apr_arch_misc.h	238;"	d
GetFileAttributesEx	include\arch\win32\apr_arch_misc.h	239;"	d
GetFileAttributesExA	include\arch\win32\apr_arch_misc.h	230;"	d
GetFileAttributesExA	include\arch\win32\apr_arch_misc.h	237;"	d
GetFileAttributesExW	include\arch\win32\apr_arch_misc.h	242;"	d
GetFileAttributesExW	include\arch\win32\apr_arch_misc.h	249;"	d
GetModuleHandleA	include\arch\win32\apr_dbg_win32_handles.h	132;"	d
GetModuleHandleW	include\arch\win32\apr_dbg_win32_handles.h	133;"	d
GetNamedSecurityInfo	include\arch\win32\apr_arch_misc.h	298;"	d
GetNamedSecurityInfo	include\arch\win32\apr_arch_misc.h	299;"	d
GetNamedSecurityInfoA	include\arch\win32\apr_arch_misc.h	297;"	d
GetNamedSecurityInfoW	include\arch\win32\apr_arch_misc.h	284;"	d
GetSecurityInfo	include\arch\win32\apr_arch_misc.h	312;"	d
GetStdHandle	include\arch\win32\apr_dbg_win32_handles.h	135;"	d
H	random\unix\apr_random.c	/^    unsigned char *H;$/;"	m	struct:apr_random_t	file:
HAS_PIPES	include\arch\unix\apr_arch_poll_private.h	45;"	d
HAS_REALPATH	build\jlibtool.c	114;"	d	file:
HAS_REALPATH	build\jlibtool.c	73;"	d	file:
HAS_SOCKETS	include\arch\unix\apr_arch_poll_private.h	44;"	d
HAVE_ACLAPI	include\arch\win32\apr_private.h	47;"	d
HAVE_ACLAPI	include\arch\win32\apr_private.h	56;"	d
HAVE_CALLOC	include\arch\netware\apr_private.h	70;"	d
HAVE_DLFCN_H	include\arch\netware\apr_private.h	50;"	d
HAVE_FCNTL_H	include\arch\netware\apr_private.h	61;"	d
HAVE_GETADDRINFO	include\arch\netware\apr_private.h	91;"	d
HAVE_GETADDRINFO	include\arch\win32\apr_private.h	141;"	d
HAVE_GETENV	include\arch\netware\apr_private.h	73;"	d
HAVE_GETNAMEINFO	include\arch\netware\apr_private.h	92;"	d
HAVE_GETNAMEINFO	include\arch\win32\apr_private.h	142;"	d
HAVE_GETPASS	passwd\apr_getpass.c	62;"	d	file:
HAVE_GETPASS_R	include\arch\netware\apr_private.h	79;"	d
HAVE_ICONV_H	include\arch\netware\apr_private.h	62;"	d
HAVE_LIMITS_H	include\arch\netware\apr_private.h	51;"	d
HAVE_LIMITS_H	include\arch\win32\apr_private.h	73;"	d
HAVE_MALLOC_H	include\arch\win32\apr_private.h	74;"	d
HAVE_MEMCHR	include\arch\netware\apr_private.h	69;"	d
HAVE_MEMCHR	include\arch\win32\apr_private.h	83;"	d
HAVE_MKSTEMP	include\arch\os2\apr_arch_file_io.h	32;"	d
HAVE_POLL	include\arch\win32\apr_arch_misc.h	473;"	d
HAVE_PTHREAD_SETCONCURRENCY	test\testatomic.c	30;"	d	file:
HAVE_SETENV	include\arch\netware\apr_private.h	74;"	d
HAVE_SIGNAL_H	include\arch\netware\apr_private.h	52;"	d
HAVE_SIGNAL_H	include\arch\win32\apr_private.h	75;"	d
HAVE_STDDEF_H	include\arch\netware\apr_private.h	53;"	d
HAVE_STDLIB_H	include\arch\netware\apr_private.h	54;"	d
HAVE_STDLIB_H	include\arch\win32\apr_private.h	77;"	d
HAVE_STRDUP	include\arch\netware\apr_private.h	67;"	d
HAVE_STRDUP	include\arch\win32\apr_private.h	81;"	d
HAVE_STRICMP	include\arch\netware\apr_private.h	65;"	d
HAVE_STRICMP	include\arch\win32\apr_private.h	79;"	d
HAVE_STRNICMP	include\arch\netware\apr_private.h	66;"	d
HAVE_STRNICMP	include\arch\win32\apr_private.h	80;"	d
HAVE_STRSTR	include\arch\netware\apr_private.h	68;"	d
HAVE_STRSTR	include\arch\win32\apr_private.h	82;"	d
HAVE_STRUCT_IPMREQ	include\arch\win32\apr_arch_networkio.h	68;"	d
HAVE_SYS_MMAN_H	include\arch\netware\apr_private.h	60;"	d
HAVE_SYS_SELECT_H	include\arch\netware\apr_private.h	56;"	d
HAVE_SYS_STAT_H	include\arch\netware\apr_private.h	59;"	d
HAVE_UNSETENV	include\arch\netware\apr_private.h	75;"	d
HAVE_UTIME	include\arch\netware\apr_private.h	71;"	d
HAVE_UTIME_H	include\arch\netware\apr_private.h	63;"	d
HAVE_WRITEV	include\arch\netware\apr_private.h	57;"	d
HAVE_WRITEV	include\arch\netware\apr_private.h	77;"	d
HDR1	test\sendfile.c	41;"	d	file:
HDR2	test\sendfile.c	42;"	d	file:
HDR3_CHAR	test\sendfile.c	44;"	d	file:
HDR3_LEN	test\sendfile.c	43;"	d	file:
HEADERS	build-outputs.mk	/^HEADERS = $(top_srcdir)\/include\/apr_allocator.h $(top_srcdir)\/include\/apr_atomic.h $(top_srcdir)\/include\/apr_dso.h $(top_srcdir)\/include\/apr_env.h $(top_srcdir)\/include\/apr_errno.h $(top_srcdir)\/include\/apr_file_info.h $(top_srcdir)\/include\/apr_file_io.h $(top_srcdir)\/include\/apr_fnmatch.h $(top_srcdir)\/include\/apr_general.h $(top_srcdir)\/include\/apr_getopt.h $(top_srcdir)\/include\/apr_global_mutex.h $(top_srcdir)\/include\/apr_hash.h $(top_srcdir)\/include\/apr_inherit.h $(top_srcdir)\/include\/apr_lib.h $(top_srcdir)\/include\/apr_mmap.h $(top_srcdir)\/include\/apr_network_io.h $(top_srcdir)\/include\/apr_poll.h $(top_srcdir)\/include\/apr_pools.h $(top_srcdir)\/include\/apr_portable.h $(top_srcdir)\/include\/apr_proc_mutex.h $(top_srcdir)\/include\/apr_random.h $(top_srcdir)\/include\/apr_ring.h $(top_srcdir)\/include\/apr_shm.h $(top_srcdir)\/include\/apr_signal.h $(top_srcdir)\/include\/apr_strings.h $(top_srcdir)\/include\/apr_support.h $(top_srcdir)\/include\/apr_tables.h $(top_srcdir)\/include\/apr_thread_cond.h $(top_srcdir)\/include\/apr_thread_mutex.h $(top_srcdir)\/include\/apr_thread_proc.h $(top_srcdir)\/include\/apr_thread_rwlock.h $(top_srcdir)\/include\/apr_time.h $(top_srcdir)\/include\/apr_user.h $(top_srcdir)\/include\/apr_version.h $(top_srcdir)\/include\/apr_want.h$/;"	m
HUGE_STRING_LEN	include\apr_lib.h	52;"	d
H_current	random\unix\apr_random.c	73;"	d	file:
H_size	random\unix\apr_random.c	72;"	d	file:
H_waiting	random\unix\apr_random.c	/^    unsigned char *H_waiting;$/;"	m	struct:apr_random_t	file:
IF_WIN_OS_IS_UNICODE	include\arch\win32\apr_arch_misc.h	136;"	d
IF_WIN_OS_IS_UNICODE	include\arch\win32\apr_arch_misc.h	139;"	d
IN6ADDRSZ	network_io\unix\inet_ntop.c	40;"	d	file:
IN6ADDRSZ	network_io\unix\inet_pton.c	38;"	d	file:
IN6_IS_ADDR_V4MAPPED	include\apr.h	618;"	d
INADDRSZ	network_io\unix\inet_pton.c	46;"	d	file:
INCL_DOS	file_io\os2\filestat.c	17;"	d	file:
INCL_DOS	file_io\os2\readwrite.c	17;"	d	file:
INCL_DOS	include\apr_errno.h	842;"	d
INCL_DOS	threadproc\os2\proc.c	17;"	d	file:
INCL_DOS	threadproc\os2\thread.c	18;"	d	file:
INCL_DOSERRORS	file_io\os2\filestat.c	18;"	d	file:
INCL_DOSERRORS	file_io\os2\maperrorcode.c	17;"	d	file:
INCL_DOSERRORS	file_io\os2\pipe.c	17;"	d	file:
INCL_DOSERRORS	file_io\os2\readwrite.c	18;"	d	file:
INCL_DOSERRORS	include\apr_errno.h	841;"	d
INCL_DOSERRORS	threadproc\os2\proc.c	18;"	d	file:
INCL_DOSERRORS	threadproc\os2\thread.c	17;"	d	file:
INCL_DOSEXCEPTIONS	threadproc\unix\signals.c	17;"	d	file:
INHERIT_H	include\arch\os2\apr_arch_inherit.h	18;"	d
INHERIT_H	include\arch\unix\apr_arch_inherit.h	18;"	d
INHERIT_H	include\arch\win32\apr_arch_inherit.h	18;"	d
INITIAL_MAX	tables\apr_hash.c	83;"	d	file:
INS_CHAR	strings\apr_snprintf.c	245;"	d	file:
INT16SZ	network_io\unix\inet_ntop.c	44;"	d	file:
INT16SZ	network_io\unix\inet_pton.c	42;"	d	file:
INT64_MAX	strings\apr_strings.c	231;"	d	file:
INT64_MIN	strings\apr_strings.c	234;"	d	file:
INTDIR	apr.mak	/^INTDIR=.\\9x\\LibD$/;"	m
INTDIR	apr.mak	/^INTDIR=.\\9x\\LibR$/;"	m
INTDIR	apr.mak	/^INTDIR=.\\LibD$/;"	m
INTDIR	apr.mak	/^INTDIR=.\\LibR$/;"	m
INTDIR	apr.mak	/^INTDIR=.\\x64\\LibD$/;"	m
INTDIR	apr.mak	/^INTDIR=.\\x64\\LibR$/;"	m
INTDIR	build\aprapp.mak	/^INTDIR=.\\9x\\LibD$/;"	m
INTDIR	build\aprapp.mak	/^INTDIR=.\\9x\\LibR$/;"	m
INTDIR	build\aprapp.mak	/^INTDIR=.\\LibD$/;"	m
INTDIR	build\aprapp.mak	/^INTDIR=.\\LibR$/;"	m
INTDIR	build\aprapp.mak	/^INTDIR=.\\x64\\LibD$/;"	m
INTDIR	build\aprapp.mak	/^INTDIR=.\\x64\\LibR$/;"	m
INTDIR	build\libaprapp.mak	/^INTDIR=.\\9x\\Debug$/;"	m
INTDIR	build\libaprapp.mak	/^INTDIR=.\\9x\\Release$/;"	m
INTDIR	build\libaprapp.mak	/^INTDIR=.\\Debug$/;"	m
INTDIR	build\libaprapp.mak	/^INTDIR=.\\Release$/;"	m
INTDIR	build\libaprapp.mak	/^INTDIR=.\\x64\\Debug$/;"	m
INTDIR	build\libaprapp.mak	/^INTDIR=.\\x64\\Release$/;"	m
INTDIR	libapr.mak	/^INTDIR=.\\9x\\Debug$/;"	m
INTDIR	libapr.mak	/^INTDIR=.\\9x\\Release$/;"	m
INTDIR	libapr.mak	/^INTDIR=.\\Debug$/;"	m
INTDIR	libapr.mak	/^INTDIR=.\\Release$/;"	m
INTDIR	libapr.mak	/^INTDIR=.\\x64\\Debug$/;"	m
INTDIR	libapr.mak	/^INTDIR=.\\x64\\Release$/;"	m
IOSB	include\arch\win32\apr_arch_misc.h	/^typedef struct IOSB {$/;"	s
IOSB	include\arch\win32\apr_arch_misc.h	/^} IOSB, *PIOSB;$/;"	t	typeref:struct:IOSB
IOSB::Information	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t Information; \/* Varies by op, consumed buffer size for FSI below *\/$/;"	m	struct:IOSB
IOSB::__anon31::Status	include\arch\win32\apr_arch_misc.h	/^    UINT Status;$/;"	m	union:IOSB::__anon31
IOSB::__anon31::reserved	include\arch\win32\apr_arch_misc.h	/^    PVOID reserved;$/;"	m	union:IOSB::__anon31
IPV6_V6ONLY	network_io\win32\sockopt.c	29;"	d	file:
IS_DEV	test\testvsn.c	30;"	d	file:
IS_DEV	test\testvsn.c	32;"	d	file:
IS_FNCHAR	include\arch\os2\apr_arch_file_io.h	78;"	d
IS_FNCHAR	include\arch\win32\apr_arch_file_io.h	220;"	d
IS_SEP	file_io\os2\dir_make_recurse.c	22;"	d	file:
IS_SHCHAR	include\arch\win32\apr_arch_file_io.h	221;"	d
IS_SLASH	file_io\os2\filesys.c	52;"	d	file:
Information	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t Information; \/* Varies by op, consumed buffer size for FSI below *\/$/;"	m	struct:IOSB
InheritedFromUniqueProcessId	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t InheritedFromUniqueProcessId;$/;"	m	struct:PBI
InputPath	apr.mak	/^InputPath=.\\include\\apr.hw$/;"	m
InputPath	libapr.mak	/^InputPath=.\\include\\apr.hw$/;"	m
IsLeapYear	time\win32\time.c	35;"	d	file:
K256	random\unix\sha2.c	/^static const sha2_word32 K256[64] = {$/;"	v	file:
K512	random\unix\sha2.c	/^static const sha2_word64 K512[80] = {$/;"	v	file:
K_size	random\unix\apr_random.c	66;"	d	file:
LARGE_NUM_SOCKETS	test\testpoll.c	30;"	d	file:
LD_LIBRARY_PATH	build\jlibtool.c	116;"	d	file:
LD_LIBRARY_PATH	build\jlibtool.c	148;"	d	file:
LD_LIBRARY_PATH	build\jlibtool.c	75;"	d	file:
LD_LIBRARY_PATH	build\jlibtool.c	95;"	d	file:
LD_RUN_PATH	build\jlibtool.c	115;"	d	file:
LD_RUN_PATH	build\jlibtool.c	147;"	d	file:
LD_RUN_PATH	build\jlibtool.c	94;"	d	file:
LF	passwd\apr_getpass.c	70;"	d	file:
LF	passwd\apr_getpass.c	73;"	d	file:
LIB32	apr.mak	/^LIB32=link.exe -lib$/;"	m
LIB32	build\aprapp.mak	/^LIB32=link.exe -lib$/;"	m
LIB32	build\libaprapp.mak	/^LIB32=link.exe -lib$/;"	m
LIB32_FLAGS	apr.mak	/^LIB32_FLAGS=\/nologo \/out:"$(OUTDIR)\\apr-1.lib" $/;"	m
LIB32_FLAGS	build\aprapp.mak	/^LIB32_FLAGS=\/nologo \/out:"$(OUTDIR)\\aprapp-1.lib" $/;"	m
LIB32_FLAGS	build\libaprapp.mak	/^LIB32_FLAGS=\/nologo \/out:"$(OUTDIR)\\libaprapp-1.lib" $/;"	m
LIB32_OBJS	apr.mak	/^LIB32_OBJS= \\$/;"	m
LIB32_OBJS	build\aprapp.mak	/^LIB32_OBJS= \\$/;"	m
LIB32_OBJS	build\libaprapp.mak	/^LIB32_OBJS= \\$/;"	m
LIBRARIAN	build\aplibtool.c	49;"	d	file:
LIBRARIAN	build\aplibtool.c	54;"	d	file:
LIBRARIAN	build\jlibtool.c	104;"	d	file:
LIBRARIAN	build\jlibtool.c	125;"	d	file:
LIBRARIAN	build\jlibtool.c	139;"	d	file:
LIBRARIAN	build\jlibtool.c	157;"	d	file:
LIBRARIAN	build\jlibtool.c	44;"	d	file:
LIBRARIAN	build\jlibtool.c	50;"	d	file:
LIBRARIAN	build\jlibtool.c	61;"	d	file:
LIBRARIAN	build\jlibtool.c	84;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	105;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	126;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	140;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	158;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	45;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	51;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	62;"	d	file:
LIBRARIAN_OPTS	build\jlibtool.c	85;"	d	file:
LIB_NAME	test\testdso.c	40;"	d	file:
LIB_NAME	test\testdso.c	43;"	d	file:
LIB_NAME	test\testdso.c	46;"	d	file:
LIB_NAME	test\testdso.c	49;"	d	file:
LINE1	test\testfile.c	603;"	d	file:
LINE2	test\testfile.c	604;"	d	file:
LINK32	libapr.mak	/^LINK32=link.exe$/;"	m
LINK32_FLAGS	libapr.mak	/^LINK32_FLAGS=kernel32.lib advapi32.lib ws2_32.lib mswsock.lib ole32.lib shell32.lib rpcrt4.lib \/nologo \/base:"0x6EEC0000" \/subsystem:windows \/dll \/incremental:no \/pdb:"$(OUTDIR)\\libapr-1.pdb" \/debug \/out:"$(OUTDIR)\\libapr-1.dll" \/implib:"$(OUTDIR)\\libapr-1.lib" \/MACHINE:X64 $/;"	m
LINK32_FLAGS	libapr.mak	/^LINK32_FLAGS=kernel32.lib advapi32.lib ws2_32.lib mswsock.lib ole32.lib shell32.lib rpcrt4.lib \/nologo \/base:"0x6EEC0000" \/subsystem:windows \/dll \/incremental:no \/pdb:"$(OUTDIR)\\libapr-1.pdb" \/debug \/out:"$(OUTDIR)\\libapr-1.dll" \/implib:"$(OUTDIR)\\libapr-1.lib" \/MACHINE:X64 \/opt:ref $/;"	m
LINK32_FLAGS	libapr.mak	/^LINK32_FLAGS=kernel32.lib advapi32.lib ws2_32.lib mswsock.lib ole32.lib shell32.lib rpcrt4.lib \/nologo \/base:"0x6EEC0000" \/subsystem:windows \/dll \/incremental:no \/pdb:"$(OUTDIR)\\libapr-1.pdb" \/debug \/out:"$(OUTDIR)\\libapr-1.dll" \/implib:"$(OUTDIR)\\libapr-1.lib" \/MACHINE:X86 $/;"	m
LINK32_FLAGS	libapr.mak	/^LINK32_FLAGS=kernel32.lib advapi32.lib ws2_32.lib mswsock.lib ole32.lib shell32.lib rpcrt4.lib \/nologo \/base:"0x6EEC0000" \/subsystem:windows \/dll \/incremental:no \/pdb:"$(OUTDIR)\\libapr-1.pdb" \/debug \/out:"$(OUTDIR)\\libapr-1.dll" \/implib:"$(OUTDIR)\\libapr-1.lib" \/MACHINE:X86 \/opt:ref $/;"	m
LINK32_OBJS	libapr.mak	/^LINK32_OBJS= \\$/;"	m
LINKER_FLAG_NO_EQUALS	build\jlibtool.c	112;"	d	file:
LINKER_FLAG_PREFIX	build\jlibtool.c	129;"	d	file:
LINKER_FLAG_PREFIX	build\jlibtool.c	145;"	d	file:
LINKER_FLAG_PREFIX	build\jlibtool.c	160;"	d	file:
LINKER_FLAG_PREFIX	build\jlibtool.c	92;"	d	file:
LOCKNAME	test\testglobalmutex.h	24;"	d
LOGON32_LOGON_NETWORK	threadproc\win32\proc.c	45;"	d	file:
LPWSABUF	include\arch\win32\apr_arch_networkio.h	/^} WSABUF, FAR * LPWSABUF;$/;"	t	typeref:struct:_WSABUF
LPWSAPOLLFD	include\arch\win32\apr_arch_misc.h	/^} WSAPOLLFD, *PWSAPOLLFD, FAR *LPWSAPOLLFD;$/;"	t	typeref:struct:pollfd
LoadLibraryA	include\arch\win32\apr_dbg_win32_handles.h	137;"	d
LoadLibraryExA	include\arch\win32\apr_dbg_win32_handles.h	140;"	d
LoadLibraryExW	include\arch\win32\apr_dbg_win32_handles.h	141;"	d
LoadLibraryW	include\arch\win32\apr_dbg_win32_handles.h	138;"	d
Lock	include\arch\beos\apr_arch_proc_mutex.h	/^    sem_id Lock;$/;"	m	struct:apr_proc_mutex_t
Lock	include\arch\beos\apr_arch_thread_mutex.h	/^    sem_id Lock;$/;"	m	struct:apr_thread_mutex_t
Lock	include\arch\beos\apr_arch_thread_rwlock.h	/^    sem_id Lock;$/;"	m	struct:apr_thread_rwlock_t
LockCount	include\arch\beos\apr_arch_proc_mutex.h	/^    int32  LockCount;$/;"	m	struct:apr_proc_mutex_t
LockCount	include\arch\beos\apr_arch_thread_mutex.h	/^    int32  LockCount;$/;"	m	struct:apr_thread_mutex_t
LockCount	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  LockCount;$/;"	m	struct:apr_thread_rwlock_t
MAKE_PLATFORMS	build\gen-build.py	/^MAKE_PLATFORMS = [$/;"	v
MAPSIZE	file_io\os2\maperrorcode.c	76;"	d	file:
MAP_FAILED	include\arch\unix\apr_arch_shm.h	58;"	d
MAX_COUNTER	test\testglobalmutex.h	22;"	d
MAX_COUNTER	test\testlock.c	30;"	d	file:
MAX_COUNTER	test\testlockperf.c	38;"	d	file:
MAX_COUNTER	test\testprocmutex.c	32;"	d	file:
MAX_DEPTH	test\testhash.c	25;"	d	file:
MAX_FILE_NAME	include\arch\netware\apr_arch_file_io.h	143;"	d
MAX_INDEX	memory\unix\apr_pools.c	51;"	d	file:
MAX_ITER	test\testglobalmutex.h	21;"	d
MAX_ITER	test\testlock.c	29;"	d	file:
MAX_ITER	test\testprocmutex.c	30;"	d	file:
MAX_ITERS	test\sockperf.c	36;"	d	file:
MAX_LTH	test\testhash.c	24;"	d	file:
MAX_PATH_NAME	include\arch\netware\apr_arch_file_io.h	142;"	d
MAX_RETRY	test\testlock.c	31;"	d	file:
MAX_SAVED_LENGTHS	strings\apr_strings.c	67;"	d	file:
MAX_SEGMENT_SIZE	network_io\win32\sendrecv.c	36;"	d	file:
MAX_SERVER_NAME	include\arch\netware\apr_arch_file_io.h	140;"	d
MAX_STRING_LEN	passwd\apr_getpass.c	77;"	d	file:
MAX_THREADS	test\testlockperf.c	39;"	d	file:
MAX_VOLUME_NAME	include\arch\netware\apr_arch_file_io.h	141;"	d
MAX_WAIT_USEC	test\testprocmutex.c	33;"	d	file:
MEMCPY_BCOPY	random\unix\sha2.c	108;"	d	file:
MEMCPY_BCOPY	random\unix\sha2.c	112;"	d	file:
MEMSET_BZERO	random\unix\sha2.c	107;"	d	file:
MEMSET_BZERO	random\unix\sha2.c	111;"	d	file:
MIN_ALLOC	memory\unix\apr_pools.c	50;"	d	file:
MISC_H	include\arch\unix\apr_arch_misc.h	18;"	d
MISC_H	include\arch\win32\apr_arch_misc.h	18;"	d
MKDIR_NO_UMASK	build\jlibtool.c	163;"	d	file:
MODULE_LIB_EXT	build\jlibtool.c	101;"	d	file:
MODULE_LIB_EXT	build\jlibtool.c	122;"	d	file:
MODULE_LIB_EXT	build\jlibtool.c	136;"	d	file:
MODULE_LIB_EXT	build\jlibtool.c	154;"	d	file:
MODULE_LIB_EXT	build\jlibtool.c	58;"	d	file:
MODULE_LIB_EXT	build\jlibtool.c	81;"	d	file:
MODULE_OPTS	build\jlibtool.c	110;"	d	file:
MODULE_OPTS	build\jlibtool.c	128;"	d	file:
MODULE_OPTS	build\jlibtool.c	143;"	d	file:
MODULE_OPTS	build\jlibtool.c	162;"	d	file:
MODULE_OPTS	build\jlibtool.c	67;"	d	file:
MODULE_OPTS	build\jlibtool.c	90;"	d	file:
MOD_NAME	test\testdso.c	33;"	d	file:
MOD_NAME	test\testdso.c	35;"	d	file:
MOD_NAME	test\testdso.c	37;"	d	file:
MOD_NAME	test\testdso.c	39;"	d	file:
MOD_NAME	test\testdso.c	42;"	d	file:
MOD_NAME	test\testdso.c	45;"	d	file:
MOD_NAME	test\testdso.c	48;"	d	file:
MORE_OF_FSPEC	include\arch\win32\apr_arch_file_io.h	146;"	d
MORE_OF_HANDLE	include\arch\win32\apr_arch_file_io.h	145;"	d
MORE_OF_WFSPEC	include\arch\win32\apr_arch_file_io.h	147;"	d
MSG	test\testshm.h	30;"	d
MTL	libapr.mak	/^MTL=midl.exe$/;"	m
MTL_PROJ	libapr.mak	/^MTL_PROJ=\/nologo \/D "NDEBUG" \/mktyplib203 \/o \/win32 "NUL" $/;"	m
MTL_PROJ	libapr.mak	/^MTL_PROJ=\/nologo \/D "_DEBUG" \/mktyplib203 \/o \/win32 "NUL" $/;"	m
MUTEX_UNLOCK	atomic\unix\mutex.c	26;"	d	file:
MUTEX_UNLOCK	atomic\unix\mutex.c	33;"	d	file:
MY_LLONG_MAX	test\teststr.c	183;"	d	file:
MY_LLONG_MIN	test\teststr.c	184;"	d	file:
Maj	random\unix\sha2.c	134;"	d	file:
Module	dso\aix\dso.c	/^typedef struct Module {$/;"	s	file:
Module	dso\aix\dso.c	/^} Module, *ModulePtr;$/;"	t	typeref:struct:Module	file:
Module::cdtors	dso\aix\dso.c	/^    CdtorPtr cdtors;		\/* optional C++ constructors *\/$/;"	m	struct:Module	file:
Module::entry	dso\aix\dso.c	/^    void *entry;		\/* entry point from load *\/$/;"	m	struct:Module	file:
Module::exports	dso\aix\dso.c	/^    ExportPtr exports;		\/* the array of exports *\/$/;"	m	struct:Module	file:
Module::gcc_ctor	dso\aix\dso.c	/^    GccCDtorPtr gcc_ctor;	\/* g++ constructors  --jwe *\/$/;"	m	struct:Module	file:
Module::gcc_dtor	dso\aix\dso.c	/^    GccCDtorPtr gcc_dtor;	\/* g++ destructors  --jwe *\/$/;"	m	struct:Module	file:
Module::info	dso\aix\dso.c	/^    struct dl_info *info;	\/* optional init\/terminate functions *\/$/;"	m	struct:Module	typeref:struct:Module::dl_info	file:
Module::nExports	dso\aix\dso.c	/^    int nExports;		\/* the number of exports found *\/$/;"	m	struct:Module	file:
Module::name	dso\aix\dso.c	/^    char *name;			\/* module name for refcounting *\/$/;"	m	struct:Module	file:
Module::next	dso\aix\dso.c	/^    struct Module *next;$/;"	m	struct:Module	typeref:struct:Module::Module	file:
Module::refCnt	dso\aix\dso.c	/^    int refCnt;			\/* the number of references *\/$/;"	m	struct:Module	file:
ModulePtr	dso\aix\dso.c	/^} Module, *ModulePtr;$/;"	t	typeref:struct:Module	file:
NDIG	strings\apr_snprintf.c	83;"	d	file:
NEED_SNPRINTF	build\jlibtool.c	130;"	d	file:
NEED_SNPRINTF	build\jlibtool.c	146;"	d	file:
NETWARE	include\arch\netware\apr_arch_pre_nw.h	25;"	d
NETWORK_IO_H	include\arch\os2\apr_arch_networkio.h	18;"	d
NETWORK_IO_H	include\arch\unix\apr_arch_networkio.h	18;"	d
NETWORK_IO_H	include\arch\win32\apr_arch_networkio.h	18;"	d
NEWFILEDATA	test\testfileinfo.c	28;"	d	file:
NEWFILENAME	test\testfileinfo.c	27;"	d	file:
NO	strings\apr_snprintf.c	/^    NO = 0, YES = 1$/;"	e	enum:__anon33	file:
NOIME	include\apr.h	90;"	d
NOMCX	include\apr.h	87;"	d
NONBLK	test\sendfile.c	/^typedef enum {BLK, NONBLK, TIMEOUT} client_socket_mode_t;$/;"	e	enum:__anon34	file:
NOUSER	include\apr.h	84;"	d
NO_GMTOFF_IN_STRUCT_TM	time\unix\time.c	40;"	d	file:
NTHREADS	test\testcond.c	26;"	d	file:
NUL	strings\apr_snprintf.c	55;"	d	file:
NULL	apr.mak	/^NULL=$/;"	m
NULL	apr.mak	/^NULL=nul$/;"	m
NULL	build\aprapp.mak	/^NULL=$/;"	m
NULL	build\aprapp.mak	/^NULL=nul$/;"	m
NULL	build\libaprapp.mak	/^NULL=$/;"	m
NULL	build\libaprapp.mak	/^NULL=nul$/;"	m
NULL	libapr.mak	/^NULL=$/;"	m
NULL	libapr.mak	/^NULL=nul$/;"	m
NUM	strings\apr_snprintf.c	260;"	d	file:
NUM_ATOMIC_HASH	atomic\unix\mutex.c	41;"	d	file:
NUM_BUF_SIZE	strings\apr_snprintf.c	69;"	d	file:
NUM_FILES	test\testfnmatch.c	26;"	d	file:
NUM_ITERATIONS	test\testatomic.c	233;"	d	file:
NUM_THREADS	test\testatomic.c	232;"	d	file:
NUM_THREADS	test\testatomic.c	300;"	d	file:
NUM_THREADS	test\testatomic.c	301;"	d	file:
NXSeedRandomInternal	misc\netware\rand.c	/^static int NXSeedRandomInternal( size_t width, void *seed )$/;"	f	file:
N_BOXES	test\testshm.h	26;"	d
N_MESSAGES	test\testshm.h	29;"	d
N_PLAT_NLM	include\arch\netware\apr_arch_pre_nw.h	27;"	d
Nested	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  Nested;$/;"	m	struct:apr_thread_rwlock_t
NumberOfLinks	include\arch\win32\apr_arch_misc.h	/^    ULONG    NumberOfLinks;$/;"	m	struct:FSI
OBJECTS_aix	build-outputs.mk	/^OBJECTS_aix = $(OBJECTS_all) $(OBJECTS_atomic_unix) $(OBJECTS_dso_aix) $(OBJECTS_file_io_unix) $(OBJECTS_locks_unix) $(OBJECTS_memory_unix) $(OBJECTS_misc_unix) $(OBJECTS_mmap_unix) $(OBJECTS_network_io_unix) $(OBJECTS_poll_unix) $(OBJECTS_random_unix) $(OBJECTS_shmem_unix) $(OBJECTS_support_unix) $(OBJECTS_threadproc_unix) $(OBJECTS_time_unix) $(OBJECTS_user_unix)$/;"	m
OBJECTS_all	build-outputs.mk	/^OBJECTS_all = passwd\/apr_getpass.lo strings\/apr_cpystrn.lo strings\/apr_fnmatch.lo strings\/apr_snprintf.lo strings\/apr_strings.lo strings\/apr_strnatcmp.lo strings\/apr_strtok.lo tables\/apr_hash.lo tables\/apr_tables.lo$/;"	m
OBJECTS_atomic_os390	build-outputs.mk	/^OBJECTS_atomic_os390 = atomic\/os390\/atomic.lo$/;"	m
OBJECTS_atomic_unix	build-outputs.mk	/^OBJECTS_atomic_unix = atomic\/unix\/builtins.lo atomic\/unix\/ia32.lo atomic\/unix\/mutex.lo atomic\/unix\/ppc.lo atomic\/unix\/s390.lo atomic\/unix\/solaris.lo$/;"	m
OBJECTS_atomic_win32	build-outputs.mk	/^OBJECTS_atomic_win32 = atomic\/win32\/apr_atomic.lo$/;"	m
OBJECTS_beos	build-outputs.mk	/^OBJECTS_beos = $(OBJECTS_all) $(OBJECTS_atomic_unix) $(OBJECTS_dso_beos) $(OBJECTS_file_io_unix) $(OBJECTS_locks_beos) $(OBJECTS_memory_unix) $(OBJECTS_misc_unix) $(OBJECTS_mmap_unix) $(OBJECTS_network_io_beos) $(OBJECTS_poll_unix) $(OBJECTS_random_unix) $(OBJECTS_shmem_beos) $(OBJECTS_support_unix) $(OBJECTS_threadproc_beos) $(OBJECTS_time_unix) $(OBJECTS_user_unix)$/;"	m
OBJECTS_dso_aix	build-outputs.mk	/^OBJECTS_dso_aix = dso\/aix\/dso.lo$/;"	m
OBJECTS_dso_beos	build-outputs.mk	/^OBJECTS_dso_beos = dso\/beos\/dso.lo$/;"	m
OBJECTS_dso_os2	build-outputs.mk	/^OBJECTS_dso_os2 = dso\/os2\/dso.lo$/;"	m
OBJECTS_dso_os390	build-outputs.mk	/^OBJECTS_dso_os390 = dso\/os390\/dso.lo$/;"	m
OBJECTS_dso_unix	build-outputs.mk	/^OBJECTS_dso_unix = dso\/unix\/dso.lo$/;"	m
OBJECTS_dso_win32	build-outputs.mk	/^OBJECTS_dso_win32 = dso\/win32\/dso.lo$/;"	m
OBJECTS_file_io_os2	build-outputs.mk	/^OBJECTS_file_io_os2 = file_io\/os2\/buffer.lo file_io\/os2\/copy.lo file_io\/os2\/dir.lo file_io\/os2\/dir_make_recurse.lo file_io\/os2\/fileacc.lo file_io\/os2\/filedup.lo file_io\/os2\/filepath.lo file_io\/os2\/filepath_util.lo file_io\/os2\/filestat.lo file_io\/os2\/filesys.lo file_io\/os2\/flock.lo file_io\/os2\/fullrw.lo file_io\/os2\/maperrorcode.lo file_io\/os2\/mktemp.lo file_io\/os2\/open.lo file_io\/os2\/pipe.lo file_io\/os2\/readwrite.lo file_io\/os2\/seek.lo file_io\/os2\/tempdir.lo$/;"	m
OBJECTS_file_io_unix	build-outputs.mk	/^OBJECTS_file_io_unix = file_io\/unix\/buffer.lo file_io\/unix\/copy.lo file_io\/unix\/dir.lo file_io\/unix\/fileacc.lo file_io\/unix\/filedup.lo file_io\/unix\/filepath.lo file_io\/unix\/filepath_util.lo file_io\/unix\/filestat.lo file_io\/unix\/flock.lo file_io\/unix\/fullrw.lo file_io\/unix\/mktemp.lo file_io\/unix\/open.lo file_io\/unix\/pipe.lo file_io\/unix\/readwrite.lo file_io\/unix\/seek.lo file_io\/unix\/tempdir.lo$/;"	m
OBJECTS_file_io_win32	build-outputs.mk	/^OBJECTS_file_io_win32 = file_io\/unix\/copy.lo file_io\/unix\/fileacc.lo file_io\/unix\/filepath_util.lo file_io\/unix\/fullrw.lo file_io\/unix\/mktemp.lo file_io\/unix\/tempdir.lo file_io\/win32\/buffer.lo file_io\/win32\/dir.lo file_io\/win32\/filedup.lo file_io\/win32\/filepath.lo file_io\/win32\/filestat.lo file_io\/win32\/filesys.lo file_io\/win32\/flock.lo file_io\/win32\/open.lo file_io\/win32\/pipe.lo file_io\/win32\/readwrite.lo file_io\/win32\/seek.lo$/;"	m
OBJECTS_locks_beos	build-outputs.mk	/^OBJECTS_locks_beos = locks\/beos\/proc_mutex.lo locks\/beos\/thread_cond.lo locks\/beos\/thread_mutex.lo locks\/beos\/thread_rwlock.lo$/;"	m
OBJECTS_locks_os2	build-outputs.mk	/^OBJECTS_locks_os2 = locks\/os2\/proc_mutex.lo locks\/os2\/thread_cond.lo locks\/os2\/thread_mutex.lo locks\/os2\/thread_rwlock.lo$/;"	m
OBJECTS_locks_unix	build-outputs.mk	/^OBJECTS_locks_unix = locks\/unix\/global_mutex.lo locks\/unix\/proc_mutex.lo locks\/unix\/thread_cond.lo locks\/unix\/thread_mutex.lo locks\/unix\/thread_rwlock.lo$/;"	m
OBJECTS_locks_win32	build-outputs.mk	/^OBJECTS_locks_win32 = locks\/win32\/proc_mutex.lo locks\/win32\/thread_cond.lo locks\/win32\/thread_mutex.lo locks\/win32\/thread_rwlock.lo$/;"	m
OBJECTS_memory_unix	build-outputs.mk	/^OBJECTS_memory_unix = memory\/unix\/apr_pools.lo$/;"	m
OBJECTS_misc_unix	build-outputs.mk	/^OBJECTS_misc_unix = misc\/unix\/charset.lo misc\/unix\/env.lo misc\/unix\/errorcodes.lo misc\/unix\/getopt.lo misc\/unix\/otherchild.lo misc\/unix\/rand.lo misc\/unix\/start.lo misc\/unix\/version.lo$/;"	m
OBJECTS_misc_win32	build-outputs.mk	/^OBJECTS_misc_win32 = misc\/unix\/errorcodes.lo misc\/unix\/getopt.lo misc\/unix\/otherchild.lo misc\/unix\/version.lo misc\/win32\/charset.lo misc\/win32\/env.lo misc\/win32\/internal.lo misc\/win32\/misc.lo misc\/win32\/rand.lo misc\/win32\/start.lo misc\/win32\/utf8.lo$/;"	m
OBJECTS_mmap_unix	build-outputs.mk	/^OBJECTS_mmap_unix = mmap\/unix\/common.lo mmap\/unix\/mmap.lo$/;"	m
OBJECTS_mmap_win32	build-outputs.mk	/^OBJECTS_mmap_win32 = mmap\/unix\/common.lo mmap\/win32\/mmap.lo$/;"	m
OBJECTS_network_io_beos	build-outputs.mk	/^OBJECTS_network_io_beos = network_io\/beos\/sendrecv.lo network_io\/beos\/socketcommon.lo$/;"	m
OBJECTS_network_io_os2	build-outputs.mk	/^OBJECTS_network_io_os2 = network_io\/os2\/inet_ntop.lo network_io\/os2\/inet_pton.lo network_io\/os2\/os2calls.lo network_io\/os2\/sendrecv.lo network_io\/os2\/sendrecv_udp.lo network_io\/os2\/sockaddr.lo network_io\/os2\/socket_util.lo network_io\/os2\/sockets.lo network_io\/os2\/sockopt.lo$/;"	m
OBJECTS_network_io_unix	build-outputs.mk	/^OBJECTS_network_io_unix = network_io\/unix\/inet_ntop.lo network_io\/unix\/inet_pton.lo network_io\/unix\/multicast.lo network_io\/unix\/sendrecv.lo network_io\/unix\/sockaddr.lo network_io\/unix\/socket_util.lo network_io\/unix\/sockets.lo network_io\/unix\/sockopt.lo$/;"	m
OBJECTS_network_io_win32	build-outputs.mk	/^OBJECTS_network_io_win32 = network_io\/unix\/inet_ntop.lo network_io\/unix\/inet_pton.lo network_io\/unix\/multicast.lo network_io\/unix\/sockaddr.lo network_io\/unix\/socket_util.lo network_io\/win32\/sendrecv.lo network_io\/win32\/sockets.lo network_io\/win32\/sockopt.lo$/;"	m
OBJECTS_os2	build-outputs.mk	/^OBJECTS_os2 = $(OBJECTS_all) $(OBJECTS_atomic_unix) $(OBJECTS_dso_os2) $(OBJECTS_file_io_os2) $(OBJECTS_locks_os2) $(OBJECTS_memory_unix) $(OBJECTS_misc_unix) $(OBJECTS_mmap_unix) $(OBJECTS_network_io_os2) $(OBJECTS_poll_os2) $(OBJECTS_random_unix) $(OBJECTS_shmem_os2) $(OBJECTS_support_unix) $(OBJECTS_threadproc_os2) $(OBJECTS_time_unix) $(OBJECTS_user_unix)$/;"	m
OBJECTS_os390	build-outputs.mk	/^OBJECTS_os390 = $(OBJECTS_all) $(OBJECTS_atomic_os390) $(OBJECTS_dso_os390) $(OBJECTS_file_io_unix) $(OBJECTS_locks_unix) $(OBJECTS_memory_unix) $(OBJECTS_misc_unix) $(OBJECTS_mmap_unix) $(OBJECTS_network_io_unix) $(OBJECTS_poll_unix) $(OBJECTS_random_unix) $(OBJECTS_shmem_unix) $(OBJECTS_support_unix) $(OBJECTS_threadproc_unix) $(OBJECTS_time_unix) $(OBJECTS_user_unix)$/;"	m
OBJECTS_poll_os2	build-outputs.mk	/^OBJECTS_poll_os2 = poll\/os2\/poll.lo poll\/os2\/pollset.lo$/;"	m
OBJECTS_poll_unix	build-outputs.mk	/^OBJECTS_poll_unix = poll\/unix\/epoll.lo poll\/unix\/kqueue.lo poll\/unix\/poll.lo poll\/unix\/pollcb.lo poll\/unix\/pollset.lo poll\/unix\/port.lo poll\/unix\/select.lo$/;"	m
OBJECTS_random_unix	build-outputs.mk	/^OBJECTS_random_unix = random\/unix\/apr_random.lo random\/unix\/sha2.lo random\/unix\/sha2_glue.lo$/;"	m
OBJECTS_shmem_beos	build-outputs.mk	/^OBJECTS_shmem_beos = shmem\/beos\/shm.lo$/;"	m
OBJECTS_shmem_os2	build-outputs.mk	/^OBJECTS_shmem_os2 = shmem\/os2\/shm.lo$/;"	m
OBJECTS_shmem_unix	build-outputs.mk	/^OBJECTS_shmem_unix = shmem\/unix\/shm.lo$/;"	m
OBJECTS_shmem_win32	build-outputs.mk	/^OBJECTS_shmem_win32 = shmem\/win32\/shm.lo$/;"	m
OBJECTS_support_unix	build-outputs.mk	/^OBJECTS_support_unix = support\/unix\/waitio.lo$/;"	m
OBJECTS_threadproc_beos	build-outputs.mk	/^OBJECTS_threadproc_beos = threadproc\/beos\/apr_proc_stub.lo threadproc\/beos\/proc.lo threadproc\/beos\/thread.lo threadproc\/beos\/threadpriv.lo threadproc\/beos\/threadproc_common.lo$/;"	m
OBJECTS_threadproc_os2	build-outputs.mk	/^OBJECTS_threadproc_os2 = threadproc\/os2\/proc.lo threadproc\/os2\/signals.lo threadproc\/os2\/thread.lo threadproc\/os2\/threadpriv.lo$/;"	m
OBJECTS_threadproc_unix	build-outputs.mk	/^OBJECTS_threadproc_unix = threadproc\/unix\/proc.lo threadproc\/unix\/procsup.lo threadproc\/unix\/signals.lo threadproc\/unix\/thread.lo threadproc\/unix\/threadpriv.lo$/;"	m
OBJECTS_threadproc_win32	build-outputs.mk	/^OBJECTS_threadproc_win32 = threadproc\/win32\/proc.lo threadproc\/win32\/signals.lo threadproc\/win32\/thread.lo threadproc\/win32\/threadpriv.lo$/;"	m
OBJECTS_time_unix	build-outputs.mk	/^OBJECTS_time_unix = time\/unix\/time.lo time\/unix\/timestr.lo$/;"	m
OBJECTS_time_win32	build-outputs.mk	/^OBJECTS_time_win32 = time\/win32\/time.lo time\/win32\/timestr.lo$/;"	m
OBJECTS_unix	build-outputs.mk	/^OBJECTS_unix = $(OBJECTS_all) $(OBJECTS_atomic_unix) $(OBJECTS_dso_unix) $(OBJECTS_file_io_unix) $(OBJECTS_locks_unix) $(OBJECTS_memory_unix) $(OBJECTS_misc_unix) $(OBJECTS_mmap_unix) $(OBJECTS_network_io_unix) $(OBJECTS_poll_unix) $(OBJECTS_random_unix) $(OBJECTS_shmem_unix) $(OBJECTS_support_unix) $(OBJECTS_threadproc_unix) $(OBJECTS_time_unix) $(OBJECTS_user_unix)$/;"	m
OBJECTS_user_unix	build-outputs.mk	/^OBJECTS_user_unix = user\/unix\/groupinfo.lo user\/unix\/userinfo.lo$/;"	m
OBJECTS_user_win32	build-outputs.mk	/^OBJECTS_user_win32 = user\/win32\/groupinfo.lo user\/win32\/userinfo.lo$/;"	m
OBJECTS_win32	build-outputs.mk	/^OBJECTS_win32 = $(OBJECTS_all) $(OBJECTS_atomic_win32) $(OBJECTS_dso_win32) $(OBJECTS_file_io_win32) $(OBJECTS_locks_win32) $(OBJECTS_memory_unix) $(OBJECTS_misc_win32) $(OBJECTS_mmap_win32) $(OBJECTS_network_io_win32) $(OBJECTS_poll_unix) $(OBJECTS_random_unix) $(OBJECTS_shmem_win32) $(OBJECTS_support_unix) $(OBJECTS_threadproc_win32) $(OBJECTS_time_win32) $(OBJECTS_user_win32)$/;"	m
OBJECT_EXT	build\aplibtool.c	48;"	d	file:
OBJECT_EXT	build\aplibtool.c	53;"	d	file:
OBJECT_EXT	build\jlibtool.c	103;"	d	file:
OBJECT_EXT	build\jlibtool.c	124;"	d	file:
OBJECT_EXT	build\jlibtool.c	138;"	d	file:
OBJECT_EXT	build\jlibtool.c	156;"	d	file:
OBJECT_EXT	build\jlibtool.c	43;"	d	file:
OBJECT_EXT	build\jlibtool.c	49;"	d	file:
OBJECT_EXT	build\jlibtool.c	60;"	d	file:
OBJECT_EXT	build\jlibtool.c	83;"	d	file:
OUTDIR	apr.mak	/^OUTDIR=.\\9x\\LibD$/;"	m
OUTDIR	apr.mak	/^OUTDIR=.\\9x\\LibR$/;"	m
OUTDIR	apr.mak	/^OUTDIR=.\\LibD$/;"	m
OUTDIR	apr.mak	/^OUTDIR=.\\LibR$/;"	m
OUTDIR	apr.mak	/^OUTDIR=.\\x64\\LibD$/;"	m
OUTDIR	apr.mak	/^OUTDIR=.\\x64\\LibR$/;"	m
OUTDIR	build\aprapp.mak	/^OUTDIR=.\\..\\9x\\LibD$/;"	m
OUTDIR	build\aprapp.mak	/^OUTDIR=.\\..\\9x\\LibR$/;"	m
OUTDIR	build\aprapp.mak	/^OUTDIR=.\\..\\LibD$/;"	m
OUTDIR	build\aprapp.mak	/^OUTDIR=.\\..\\LibR$/;"	m
OUTDIR	build\aprapp.mak	/^OUTDIR=.\\..\\x64\\LibD$/;"	m
OUTDIR	build\aprapp.mak	/^OUTDIR=.\\..\\x64\\LibR$/;"	m
OUTDIR	build\libaprapp.mak	/^OUTDIR=.\\..\\9x\\Debug$/;"	m
OUTDIR	build\libaprapp.mak	/^OUTDIR=.\\..\\9x\\Release$/;"	m
OUTDIR	build\libaprapp.mak	/^OUTDIR=.\\..\\Debug$/;"	m
OUTDIR	build\libaprapp.mak	/^OUTDIR=.\\..\\Release$/;"	m
OUTDIR	build\libaprapp.mak	/^OUTDIR=.\\..\\x64\\Debug$/;"	m
OUTDIR	build\libaprapp.mak	/^OUTDIR=.\\..\\x64\\Release$/;"	m
OUTDIR	libapr.mak	/^OUTDIR=.\\9x\\Debug$/;"	m
OUTDIR	libapr.mak	/^OUTDIR=.\\9x\\Release$/;"	m
OUTDIR	libapr.mak	/^OUTDIR=.\\Debug$/;"	m
OUTDIR	libapr.mak	/^OUTDIR=.\\Release$/;"	m
OUTDIR	libapr.mak	/^OUTDIR=.\\x64\\Debug$/;"	m
OUTDIR	libapr.mak	/^OUTDIR=.\\x64\\Release$/;"	m
OVER	test\testcond.c	/^    OVER$/;"	e	enum:__anon35	file:
OpenEventA	include\arch\win32\apr_dbg_win32_handles.h	143;"	d
OpenEventW	include\arch\win32\apr_dbg_win32_handles.h	144;"	d
OpenFileMappingA	include\arch\win32\apr_dbg_win32_handles.h	146;"	d
OpenFileMappingW	include\arch\win32\apr_dbg_win32_handles.h	147;"	d
OutDir	apr.mak	/^OutDir=.\\9x\\LibD$/;"	m
OutDir	apr.mak	/^OutDir=.\\9x\\LibR$/;"	m
OutDir	apr.mak	/^OutDir=.\\LibD$/;"	m
OutDir	apr.mak	/^OutDir=.\\LibR$/;"	m
OutDir	apr.mak	/^OutDir=.\\x64\\LibD$/;"	m
OutDir	apr.mak	/^OutDir=.\\x64\\LibR$/;"	m
OutDir	build\aprapp.mak	/^OutDir=.\\..\\9x\\LibD$/;"	m
OutDir	build\aprapp.mak	/^OutDir=.\\..\\9x\\LibR$/;"	m
OutDir	build\aprapp.mak	/^OutDir=.\\..\\LibD$/;"	m
OutDir	build\aprapp.mak	/^OutDir=.\\..\\LibR$/;"	m
OutDir	build\aprapp.mak	/^OutDir=.\\..\\x64\\LibD$/;"	m
OutDir	build\aprapp.mak	/^OutDir=.\\..\\x64\\LibR$/;"	m
OutDir	build\libaprapp.mak	/^OutDir=.\\..\\9x\\Debug$/;"	m
OutDir	build\libaprapp.mak	/^OutDir=.\\..\\9x\\Release$/;"	m
OutDir	build\libaprapp.mak	/^OutDir=.\\..\\Debug$/;"	m
OutDir	build\libaprapp.mak	/^OutDir=.\\..\\Release$/;"	m
OutDir	build\libaprapp.mak	/^OutDir=.\\..\\x64\\Debug$/;"	m
OutDir	build\libaprapp.mak	/^OutDir=.\\..\\x64\\Release$/;"	m
OutDir	libapr.mak	/^OutDir=.\\9x\\Debug$/;"	m
OutDir	libapr.mak	/^OutDir=.\\9x\\Release$/;"	m
OutDir	libapr.mak	/^OutDir=.\\Debug$/;"	m
OutDir	libapr.mak	/^OutDir=.\\Release$/;"	m
OutDir	libapr.mak	/^OutDir=.\\x64\\Debug$/;"	m
OutDir	libapr.mak	/^OutDir=.\\x64\\Release$/;"	m
P1	test\testpath.c	32;"	d	file:
P2	test\testpath.c	33;"	d	file:
P3	test\testpath.c	34;"	d	file:
P4	test\testpath.c	35;"	d	file:
P5	test\testpath.c	36;"	d	file:
PAD	strings\apr_snprintf.c	295;"	d	file:
PATH_LEN	test\testmmap.c	28;"	d	file:
PATH_MAX	build\jlibtool.c	180;"	d	file:
PATH_SEPARATOR	file_io\unix\dir.c	38;"	d	file:
PBI	include\arch\win32\apr_arch_misc.h	/^typedef struct PBI {$/;"	s
PBI	include\arch\win32\apr_arch_misc.h	/^} PBI, *PPBI;$/;"	t	typeref:struct:PBI
PBI::AffinityMask	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t AffinityMask;$/;"	m	struct:PBI
PBI::BasePriority	include\arch\win32\apr_arch_misc.h	/^    LONG      BasePriority;$/;"	m	struct:PBI
PBI::ExitStatus	include\arch\win32\apr_arch_misc.h	/^    LONG      ExitStatus;$/;"	m	struct:PBI
PBI::InheritedFromUniqueProcessId	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t InheritedFromUniqueProcessId;$/;"	m	struct:PBI
PBI::PebBaseAddress	include\arch\win32\apr_arch_misc.h	/^    PVOID     PebBaseAddress;$/;"	m	struct:PBI
PBI::UniqueProcessId	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t UniqueProcessId;$/;"	m	struct:PBI
PFSI	include\arch\win32\apr_arch_misc.h	/^} FSI, *PFSI;$/;"	t	typeref:struct:FSI
PIC_FLAG	build\jlibtool.c	107;"	d	file:
PIC_FLAG	build\jlibtool.c	65;"	d	file:
PIC_FLAG	build\jlibtool.c	87;"	d	file:
PING	test\testcond.c	/^    PING,$/;"	e	enum:__anon35	file:
PIOSB	include\arch\win32\apr_arch_misc.h	/^} IOSB, *PIOSB;$/;"	t	typeref:struct:IOSB
PLATFORMS	build\gen-build.py	/^PLATFORMS = [ 'aix', 'beos', 'netware', 'os2', 'os390', 'unix', 'win32' ]$/;"	v
POLLCB_PREREQ	test\testpoll.c	563;"	d	file:
POLLERR	include\arch\unix\apr_arch_networkio.h	91;"	d
POLLERR	include\arch\win32\apr_arch_misc.h	452;"	d
POLLHUP	include\arch\unix\apr_arch_networkio.h	92;"	d
POLLHUP	include\arch\win32\apr_arch_misc.h	453;"	d
POLLIN	include\arch\unix\apr_arch_networkio.h	88;"	d
POLLIN	include\arch\win32\apr_arch_misc.h	445;"	d
POLLNVAL	include\arch\unix\apr_arch_networkio.h	93;"	d
POLLNVAL	include\arch\win32\apr_arch_misc.h	454;"	d
POLLOUT	include\arch\unix\apr_arch_networkio.h	90;"	d
POLLOUT	include\arch\win32\apr_arch_misc.h	449;"	d
POLLPRI	include\arch\unix\apr_arch_networkio.h	89;"	d
POLLPRI	include\arch\win32\apr_arch_misc.h	446;"	d
POLLRDBAND	include\arch\win32\apr_arch_misc.h	444;"	d
POLLRDNORM	include\arch\win32\apr_arch_misc.h	443;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	51;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	54;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	57;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	60;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	63;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	68;"	d
POLLSET_DEFAULT_METHOD	include\arch\unix\apr_arch_poll_private.h	69;"	d
POLLSET_USES_EPOLL	include\arch\unix\apr_arch_poll_private.h	56;"	d
POLLSET_USES_KQUEUE	include\arch\unix\apr_arch_poll_private.h	50;"	d
POLLSET_USES_POLL	include\arch\unix\apr_arch_poll_private.h	59;"	d
POLLSET_USES_PORT	include\arch\unix\apr_arch_poll_private.h	53;"	d
POLLSET_USES_SELECT	include\arch\unix\apr_arch_poll_private.h	62;"	d
POLLWRBAND	include\arch\win32\apr_arch_misc.h	450;"	d
POLLWRNORM	include\arch\win32\apr_arch_misc.h	448;"	d
POLL_USES_POLL	include\arch\unix\apr_arch_poll_private.h	72;"	d
POLL_USES_SELECT	include\arch\unix\apr_arch_poll_private.h	67;"	d
POLL_USES_SELECT	include\arch\unix\apr_arch_poll_private.h	74;"	d
PONG	test\testcond.c	/^    PONG,$/;"	e	enum:__anon35	file:
POOL_POISON_BYTE	memory\unix\apr_pools.c	1529;"	d	file:
PPBI	include\arch\win32\apr_arch_misc.h	/^} PBI, *PPBI;$/;"	t	typeref:struct:PBI
PPC405_ERR77_SYNC	atomic\unix\ppc.c	22;"	d	file:
PPC405_ERR77_SYNC	atomic\unix\ppc.c	24;"	d	file:
PRECOND	test\testlfs.c	41;"	d	file:
PREFIX	strings\apr_snprintf.c	308;"	d	file:
PROC_MUTEX_H	include\arch\beos\apr_arch_proc_mutex.h	18;"	d
PROC_MUTEX_H	include\arch\netware\apr_arch_proc_mutex.h	18;"	d
PROC_MUTEX_H	include\arch\os2\apr_arch_proc_mutex.h	18;"	d
PROC_MUTEX_H	include\arch\unix\apr_arch_proc_mutex.h	18;"	d
PROC_MUTEX_H	include\arch\win32\apr_arch_proc_mutex.h	18;"	d
PSEP	test\testpath.c	24;"	d	file:
PSEP	test\testpath.c	27;"	d	file:
PTHREAD_CANCEL_AYNCHRONOUS	include\arch\beos\apr_arch_threadproc.h	34;"	d
PTHREAD_CANCEL_DEFERRED	include\arch\beos\apr_arch_threadproc.h	35;"	d
PTHREAD_CANCEL_DISABLE	include\arch\beos\apr_arch_threadproc.h	38;"	d
PTHREAD_CANCEL_ENABLE	include\arch\beos\apr_arch_threadproc.h	37;"	d
PWBUF_SIZE	user\netware\userinfo.c	31;"	d	file:
PWBUF_SIZE	user\unix\userinfo.c	33;"	d	file:
PWSAPOLLFD	include\arch\win32\apr_arch_misc.h	/^} WSAPOLLFD, *PWSAPOLLFD, FAR *LPWSAPOLLFD;$/;"	t	typeref:struct:pollfd
PX	test\testpath.c	31;"	d	file:
PebBaseAddress	include\arch\win32\apr_arch_misc.h	/^    PVOID     PebBaseAddress;$/;"	m	struct:PBI
PostBuild_Desc	libapr.mak	/^PostBuild_Desc=Embed .manifest$/;"	m
Process32FirstW	include\arch\win32\apr_arch_misc.h	424;"	d
Process32FirstW	include\arch\win32\apr_arch_misc.h	430;"	d
Process32NextW	include\arch\win32\apr_arch_misc.h	433;"	d
Process32NextW	include\arch\win32\apr_arch_misc.h	439;"	d
QueryInformationProcess	include\arch\win32\apr_arch_misc.h	378;"	d
QueryObject	include\arch\win32\apr_arch_misc.h	387;"	d
QueryTimerResolution	include\arch\win32\apr_arch_misc.h	353;"	d
R	random\unix\sha2.c	126;"	d	file:
RANLIB	build\jlibtool.c	106;"	d	file:
RANLIB	build\jlibtool.c	159;"	d	file:
RANLIB	build\jlibtool.c	64;"	d	file:
RANLIB	build\jlibtool.c	86;"	d	file:
REMOVE_ESCAPE_CHARS	strings\apr_cpystrn.c	133;"	d	file:
REVERSE32	random\unix\sha2.c	61;"	d	file:
REVERSE64	random\unix\sha2.c	66;"	d	file:
ROUND256	random\unix\sha2.c	302;"	d	file:
ROUND256_0_TO_15	random\unix\sha2.c	282;"	d	file:
ROUND256_0_TO_15	random\unix\sha2.c	293;"	d	file:
ROUND512	random\unix\sha2.c	631;"	d	file:
ROUND512_0_TO_15	random\unix\sha2.c	611;"	d	file:
ROUND512_0_TO_15	random\unix\sha2.c	622;"	d	file:
RPATH	build\jlibtool.c	108;"	d	file:
RPATH	build\jlibtool.c	141;"	d	file:
RPATH	build\jlibtool.c	88;"	d	file:
RSC	apr.mak	/^RSC=rc.exe$/;"	m
RSC	build\aprapp.mak	/^RSC=rc.exe$/;"	m
RSC	build\libaprapp.mak	/^RSC=rc.exe$/;"	m
RSC	libapr.mak	/^RSC=rc.exe$/;"	m
RSC_PROJ	libapr.mak	/^RSC_PROJ=\/l 0x409 \/fo"$(INTDIR)\\libapr.res" \/i ".\/include" \/d "NDEBUG" \/d "APR_VERSION_ONLY" $/;"	m
RSC_PROJ	libapr.mak	/^RSC_PROJ=\/l 0x409 \/fo"$(INTDIR)\\libapr.res" \/i ".\/include" \/d "_DEBUG" \/d "APR_VERSION_ONLY" $/;"	m
RTLD_GLOBAL	dso\aix\dso.c	82;"	d	file:
RTLD_GLOBAL	dso\aix\dso.c	83;"	d	file:
RTLD_GLOBAL	include\arch\unix\apr_arch_dso.h	45;"	d
RTLD_LAZY	dso\aix\dso.c	78;"	d	file:
RTLD_LAZY	dso\aix\dso.c	79;"	d	file:
RTLD_NOW	dso\aix\dso.c	80;"	d	file:
RTLD_NOW	dso\aix\dso.c	81;"	d	file:
RTLD_NOW	include\arch\unix\apr_arch_dso.h	41;"	d
Read	include\arch\beos\apr_arch_thread_rwlock.h	/^    sem_id Read;$/;"	m	struct:apr_thread_rwlock_t
ReadCount	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  ReadCount;$/;"	m	struct:apr_thread_rwlock_t
RegisterAppWithWinSock	misc\netware\start.c	/^static int RegisterAppWithWinSock (void *nlm_handle)$/;"	f	file:
RegisterEventSourceA	include\arch\win32\apr_dbg_win32_handles.h	149;"	d
RegisterEventSourceW	include\arch\win32\apr_dbg_win32_handles.h	150;"	d
S32	random\unix\sha2.c	128;"	d	file:
S64	random\unix\sha2.c	130;"	d	file:
SA_NOCLDSTOP	include\arch\netware\apr_private.h	131;"	d
SA_NOCLDSTOP	include\arch\netware\apr_private.h	132;"	d
SEM_FAILED	locks\unix\proc_mutex.c	41;"	d	file:
SEND_WAIT	network_io\beos\sendrecv.c	58;"	d	file:
SET_H_ERRNO	network_io\unix\sockaddr.c	44;"	d	file:
SET_H_ERRNO	network_io\unix\sockaddr.c	46;"	d	file:
SET_H_ERRNO	network_io\unix\sockaddr.c	49;"	d	file:
SHA256_BLOCK_LENGTH	random\unix\sha2.h	33;"	d
SHA256_CTX	random\unix\sha2.h	/^} SHA256_CTX;$/;"	t	typeref:struct:_SHA256_CTX
SHA256_DIGEST_LENGTH	random\unix\sha2.h	34;"	d
SHA256_DIGEST_STRING_LENGTH	random\unix\sha2.h	35;"	d
SHA256_SHORT_BLOCK_LENGTH	random\unix\sha2.c	54;"	d	file:
SHA2_USE_MEMSET_MEMCPY	random\unix\sha2.c	99;"	d	file:
SHA384_BLOCK_LENGTH	random\unix\sha2.h	36;"	d
SHA384_CTX	random\unix\sha2.h	/^typedef SHA512_CTX SHA384_CTX;$/;"	t
SHA384_DIGEST_LENGTH	random\unix\sha2.h	37;"	d
SHA384_DIGEST_STRING_LENGTH	random\unix\sha2.h	38;"	d
SHA384_SHORT_BLOCK_LENGTH	random\unix\sha2.c	55;"	d	file:
SHA512_BLOCK_LENGTH	random\unix\sha2.h	39;"	d
SHA512_CTX	random\unix\sha2.h	/^} SHA512_CTX;$/;"	t	typeref:struct:_SHA512_CTX
SHA512_DIGEST_LENGTH	random\unix\sha2.h	40;"	d
SHA512_DIGEST_STRING_LENGTH	random\unix\sha2.h	41;"	d
SHA512_SHORT_BLOCK_LENGTH	random\unix\sha2.c	56;"	d	file:
SHARED_FILENAME	test\testshm.h	28;"	d
SHARED_OPTS	build\jlibtool.c	109;"	d	file:
SHARED_OPTS	build\jlibtool.c	127;"	d	file:
SHARED_OPTS	build\jlibtool.c	142;"	d	file:
SHARED_OPTS	build\jlibtool.c	161;"	d	file:
SHARED_OPTS	build\jlibtool.c	66;"	d	file:
SHARED_OPTS	build\jlibtool.c	89;"	d	file:
SHARED_SIZE	test\testshm.h	27;"	d
SHARE_SW	build\aplibtool.c	39;"	d	file:
SHARE_SW	build\jlibtool.c	34;"	d	file:
SHELL_CMD	build\aplibtool.c	35;"	d	file:
SHELL_CMD	build\jlibtool.c	120;"	d	file:
SHELL_CMD	build\jlibtool.c	134;"	d	file:
SHELL_CMD	build\jlibtool.c	152;"	d	file:
SHELL_CMD	build\jlibtool.c	31;"	d	file:
SHELL_CMD	build\jlibtool.c	56;"	d	file:
SHELL_CMD	build\jlibtool.c	79;"	d	file:
SHELL_CMD	build\jlibtool.c	99;"	d	file:
SHELL_PATH	include\arch\beos\apr_arch_threadproc.h	32;"	d
SHELL_PATH	include\arch\netware\apr_arch_threadproc.h	26;"	d
SHELL_PATH	include\arch\os2\apr_arch_threadproc.h	25;"	d
SHELL_PATH	include\arch\unix\apr_arch_threadproc.h	51;"	d
SHELL_PATH	include\arch\win32\apr_arch_threadproc.h	24;"	d
SHM_H	include\arch\unix\apr_arch_shm.h	18;"	d
SHM_R	include\arch\unix\apr_arch_shm.h	46;"	d
SHM_W	include\arch\unix\apr_arch_shm.h	49;"	d
SHUT_RDWR	misc\unix\rand.c	47;"	d	file:
SIGALRM	include\arch\netware\apr_private.h	105;"	d
SIGALRM	include\arch\win32\apr_private.h	98;"	d
SIGBUS	include\arch\netware\apr_private.h	135;"	d
SIGBUS	include\arch\win32\apr_private.h	91;"	d
SIGCHLD	include\arch\netware\apr_private.h	106;"	d
SIGCHLD	include\arch\win32\apr_private.h	101;"	d
SIGCONT	include\arch\netware\apr_private.h	107;"	d
SIGCONT	include\arch\win32\apr_private.h	102;"	d
SIGHUP	include\arch\netware\apr_private.h	108;"	d
SIGHUP	include\arch\win32\apr_private.h	85;"	d
SIGIO	include\arch\netware\apr_private.h	128;"	d
SIGIO	include\arch\win32\apr_private.h	115;"	d
SIGIOT	include\arch\netware\apr_private.h	120;"	d
SIGIOT	include\arch\win32\apr_private.h	90;"	d
SIGKILL	include\arch\netware\apr_private.h	104;"	d
SIGKILL	include\arch\win32\apr_private.h	93;"	d
SIGKILL	test\testoc.c	51;"	d	file:
SIGPIPE	include\arch\netware\apr_private.h	109;"	d
SIGPIPE	include\arch\win32\apr_private.h	97;"	d
SIGPROF	include\arch\netware\apr_private.h	126;"	d
SIGPROF	include\arch\win32\apr_private.h	113;"	d
SIGQUIT	include\arch\netware\apr_private.h	110;"	d
SIGQUIT	include\arch\win32\apr_private.h	87;"	d
SIGSTKFLT	include\arch\netware\apr_private.h	121;"	d
SIGSTKFLT	include\arch\win32\apr_private.h	100;"	d
SIGSTOP	include\arch\netware\apr_private.h	111;"	d
SIGSTOP	include\arch\win32\apr_private.h	103;"	d
SIGTRAP	include\arch\netware\apr_private.h	119;"	d
SIGTRAP	include\arch\win32\apr_private.h	89;"	d
SIGTSTP	include\arch\netware\apr_private.h	112;"	d
SIGTSTP	include\arch\win32\apr_private.h	104;"	d
SIGTTIN	include\arch\netware\apr_private.h	113;"	d
SIGTTIN	include\arch\win32\apr_private.h	107;"	d
SIGTTOU	include\arch\netware\apr_private.h	114;"	d
SIGTTOU	include\arch\win32\apr_private.h	108;"	d
SIGURG	include\arch\netware\apr_private.h	122;"	d
SIGURG	include\arch\win32\apr_private.h	109;"	d
SIGUSR1	include\arch\netware\apr_private.h	115;"	d
SIGUSR1	include\arch\win32\apr_private.h	94;"	d
SIGUSR2	include\arch\netware\apr_private.h	116;"	d
SIGUSR2	include\arch\win32\apr_private.h	96;"	d
SIGVTALRM	include\arch\netware\apr_private.h	125;"	d
SIGVTALRM	include\arch\win32\apr_private.h	112;"	d
SIGWINCH	include\arch\netware\apr_private.h	127;"	d
SIGWINCH	include\arch\win32\apr_private.h	114;"	d
SIGXCPU	include\arch\netware\apr_private.h	123;"	d
SIGXCPU	include\arch\win32\apr_private.h	110;"	d
SIGXFSZ	include\arch\netware\apr_private.h	124;"	d
SIGXFSZ	include\arch\win32\apr_private.h	111;"	d
SIG_DFL	include\apr_signal.h	48;"	d
SIG_DFL	include\apr_signal.h	51;"	d
SIG_ERR	include\apr_signal.h	50;"	d
SIG_ERR	include\apr_signal.h	53;"	d
SIG_ERR	include\apr_signal.h	67;"	d
SIG_IGN	include\apr_signal.h	49;"	d
SIG_IGN	include\apr_signal.h	52;"	d
SIZE	test\teststr.c	171;"	d	file:
SIZEOF_ALLOCATOR_T	memory\unix\apr_pools.c	111;"	d	file:
SIZEOF_CHAR	include\arch\netware\apr_private.h	143;"	d
SIZEOF_CHAR	include\arch\win32\apr_private.h	129;"	d
SIZEOF_DEBUG_NODE_T	memory\unix\apr_pools.c	485;"	d	file:
SIZEOF_INT	include\arch\netware\apr_private.h	141;"	d
SIZEOF_INT	include\arch\win32\apr_private.h	127;"	d
SIZEOF_LONGLONG	include\arch\netware\apr_private.h	142;"	d
SIZEOF_LONGLONG	include\arch\win32\apr_private.h	128;"	d
SIZEOF_POOL_T	memory\unix\apr_pools.c	533;"	d	file:
SIZEOF_SHORT	include\arch\netware\apr_private.h	140;"	d
SIZEOF_SHORT	include\arch\win32\apr_private.h	126;"	d
SIZEOF_SSIZE_T	include\arch\netware\apr_private.h	144;"	d
SIZEOF_SSIZE_T	include\arch\win32\apr_private.h	130;"	d
SKIP_WHITESPACE	strings\apr_cpystrn.c	95;"	d	file:
SLEEP_INTERVAL	test\testsleep.c	26;"	d	file:
SMALL_NUM_SOCKETS	test\testpoll.c	25;"	d	file:
SMALL_POLLSET_LIMIT	poll\unix\poll.c	69;"	d	file:
SOCBASEERR	include\apr_errno.h	865;"	d
SOCBASEERR	include\arch\os2\apr_arch_networkio.h	58;"	d
SOCEACCES	include\apr_errno.h	871;"	d
SOCEACCES	include\arch\os2\apr_arch_networkio.h	64;"	d
SOCEADDRINUSE	include\apr_errno.h	890;"	d
SOCEADDRNOTAVAIL	include\apr_errno.h	891;"	d
SOCEAFNOSUPPORT	include\apr_errno.h	889;"	d
SOCEALREADY	include\apr_errno.h	879;"	d
SOCEBADF	include\apr_errno.h	870;"	d
SOCEBADF	include\arch\os2\apr_arch_networkio.h	63;"	d
SOCECONNABORTED	include\apr_errno.h	895;"	d
SOCECONNREFUSED	include\apr_errno.h	903;"	d
SOCECONNRESET	include\apr_errno.h	896;"	d
SOCEDESTADDRREQ	include\apr_errno.h	881;"	d
SOCEFAULT	include\apr_errno.h	872;"	d
SOCEFAULT	include\arch\os2\apr_arch_networkio.h	65;"	d
SOCEHOSTDOWN	include\apr_errno.h	906;"	d
SOCEHOSTUNREACH	include\apr_errno.h	907;"	d
SOCEINPROGRESS	include\apr_errno.h	878;"	d
SOCEINTR	include\apr_errno.h	868;"	d
SOCEINTR	include\arch\os2\apr_arch_networkio.h	61;"	d
SOCEINVAL	include\apr_errno.h	873;"	d
SOCEINVAL	include\arch\os2\apr_arch_networkio.h	66;"	d
SOCEISCONN	include\apr_errno.h	898;"	d
SOCELOOP	include\apr_errno.h	904;"	d
SOCEMFILE	include\apr_errno.h	874;"	d
SOCEMFILE	include\arch\os2\apr_arch_networkio.h	67;"	d
SOCEMSGSIZE	include\apr_errno.h	882;"	d
SOCENAMETOOLONG	include\apr_errno.h	905;"	d
SOCENETDOWN	include\apr_errno.h	892;"	d
SOCENETRESET	include\apr_errno.h	894;"	d
SOCENETUNREACH	include\apr_errno.h	893;"	d
SOCENOBUFS	include\apr_errno.h	897;"	d
SOCENOPROTOOPT	include\apr_errno.h	884;"	d
SOCENOTCONN	include\apr_errno.h	899;"	d
SOCENOTEMPTY	include\apr_errno.h	908;"	d
SOCENOTSOCK	include\apr_errno.h	880;"	d
SOCENXIO	include\apr_errno.h	869;"	d
SOCENXIO	include\arch\os2\apr_arch_networkio.h	62;"	d
SOCEOPNOTSUPP	include\apr_errno.h	887;"	d
SOCEOS2ERR	include\apr_errno.h	876;"	d
SOCEOS2ERR	include\arch\os2\apr_arch_networkio.h	69;"	d
SOCEPERM	include\apr_errno.h	866;"	d
SOCEPERM	include\arch\os2\apr_arch_networkio.h	59;"	d
SOCEPFNOSUPPORT	include\apr_errno.h	888;"	d
SOCEPIPE	include\apr_errno.h	875;"	d
SOCEPIPE	include\arch\os2\apr_arch_networkio.h	68;"	d
SOCEPROTONOSUPPORT	include\apr_errno.h	885;"	d
SOCEPROTOTYPE	include\apr_errno.h	883;"	d
SOCESHUTDOWN	include\apr_errno.h	900;"	d
SOCESOCKTNOSUPPORT	include\apr_errno.h	886;"	d
SOCESRCH	include\apr_errno.h	867;"	d
SOCESRCH	include\arch\os2\apr_arch_networkio.h	60;"	d
SOCETIMEDOUT	include\apr_errno.h	902;"	d
SOCETOOMANYREFS	include\apr_errno.h	901;"	d
SOCEWOULDBLOCK	include\apr_errno.h	877;"	d
SOCKET_TIMEOUT	test\testsock.h	31;"	d
SOURCE	apr.mak	/^SOURCE=.\\atomic\\win32\\apr_atomic.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\dso\\win32\\dso.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\unix\\copy.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\unix\\fileacc.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\unix\\filepath_util.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\unix\\fullrw.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\unix\\mktemp.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\unix\\tempdir.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\buffer.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\dir.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\filedup.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\filepath.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\filestat.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\filesys.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\flock.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\open.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\pipe.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\readwrite.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\file_io\\win32\\seek.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\include\\apr.hw$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\locks\\win32\\proc_mutex.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\locks\\win32\\thread_cond.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\locks\\win32\\thread_mutex.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\locks\\win32\\thread_rwlock.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\memory\\unix\\apr_pools.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\unix\\errorcodes.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\unix\\getopt.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\unix\\otherchild.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\unix\\version.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\apr_app.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\charset.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\env.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\internal.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\misc.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\rand.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\start.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\misc\\win32\\utf8.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\mmap\\unix\\common.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\mmap\\win32\\mmap.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\unix\\inet_ntop.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\unix\\inet_pton.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\unix\\multicast.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\unix\\sockaddr.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\unix\\socket_util.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\win32\\sendrecv.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\win32\\sockets.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\network_io\\win32\\sockopt.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\passwd\\apr_getpass.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\poll\\unix\\poll.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\poll\\unix\\pollcb.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\poll\\unix\\pollset.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\poll\\unix\\select.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\random\\unix\\apr_random.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\random\\unix\\sha2.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\random\\unix\\sha2_glue.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\shmem\\win32\\shm.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\strings\\apr_cpystrn.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\strings\\apr_fnmatch.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\strings\\apr_snprintf.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\strings\\apr_strings.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\strings\\apr_strnatcmp.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\strings\\apr_strtok.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\tables\\apr_hash.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\tables\\apr_tables.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\threadproc\\win32\\proc.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\threadproc\\win32\\signals.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\threadproc\\win32\\thread.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\threadproc\\win32\\threadpriv.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\time\\win32\\time.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\time\\win32\\timestr.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\user\\win32\\groupinfo.c$/;"	m
SOURCE	apr.mak	/^SOURCE=.\\user\\win32\\userinfo.c$/;"	m
SOURCE	build\aprapp.mak	/^SOURCE=..\\misc\\win32\\apr_app.c$/;"	m
SOURCE	build\libaprapp.mak	/^SOURCE=..\\misc\\win32\\apr_app.c$/;"	m
SOURCE	build\libaprapp.mak	/^SOURCE=..\\misc\\win32\\internal.c$/;"	m
SOURCE	libapr.mak	/^SOURCE="$(InputPath)"$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\atomic\\win32\\apr_atomic.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\dso\\win32\\dso.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\unix\\copy.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\unix\\fileacc.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\unix\\filepath_util.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\unix\\fullrw.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\unix\\mktemp.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\unix\\tempdir.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\buffer.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\dir.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\filedup.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\filepath.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\filestat.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\filesys.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\flock.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\open.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\pipe.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\readwrite.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\file_io\\win32\\seek.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\include\\apr.hw$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\libapr.rc$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\locks\\win32\\proc_mutex.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\locks\\win32\\thread_cond.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\locks\\win32\\thread_mutex.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\locks\\win32\\thread_rwlock.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\memory\\unix\\apr_pools.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\unix\\errorcodes.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\unix\\getopt.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\unix\\otherchild.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\unix\\version.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\apr_app.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\charset.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\env.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\internal.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\misc.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\rand.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\start.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\misc\\win32\\utf8.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\mmap\\unix\\common.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\mmap\\win32\\mmap.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\unix\\inet_ntop.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\unix\\inet_pton.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\unix\\multicast.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\unix\\sockaddr.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\unix\\socket_util.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\win32\\sendrecv.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\win32\\sockets.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\network_io\\win32\\sockopt.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\passwd\\apr_getpass.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\poll\\unix\\poll.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\poll\\unix\\pollcb.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\poll\\unix\\pollset.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\poll\\unix\\select.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\random\\unix\\apr_random.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\random\\unix\\sha2.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\random\\unix\\sha2_glue.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\shmem\\win32\\shm.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\strings\\apr_cpystrn.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\strings\\apr_fnmatch.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\strings\\apr_snprintf.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\strings\\apr_strings.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\strings\\apr_strnatcmp.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\strings\\apr_strtok.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\tables\\apr_hash.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\tables\\apr_tables.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\threadproc\\win32\\proc.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\threadproc\\win32\\signals.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\threadproc\\win32\\thread.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\threadproc\\win32\\threadpriv.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\time\\win32\\time.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\time\\win32\\timestr.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\user\\win32\\groupinfo.c$/;"	m
SOURCE	libapr.mak	/^SOURCE=.\\user\\win32\\userinfo.c$/;"	m
SOURCE_DIRS	build-outputs.mk	/^SOURCE_DIRS = random\/unix misc\/win32 mmap\/win32 dso\/os2 time\/unix network_io\/win32 dso\/win32 locks\/unix user\/unix time\/win32 locks\/beos tables support\/unix file_io\/unix mmap\/unix atomic\/unix threadproc\/win32 poll\/os2 atomic\/win32 dso\/os390 atomic\/os390 dso\/beos poll\/unix passwd network_io\/beos threadproc\/os2 network_io\/os2 shmem\/win32 threadproc\/beos shmem\/unix network_io\/unix file_io\/os2 dso\/aix file_io\/win32 threadproc\/unix misc\/unix locks\/win32 shmem\/beos dso\/unix locks\/os2 user\/win32 shmem\/os2 memory\/unix strings $(EXTRA_SOURCE_DIRS)$/;"	m
STARTF_USESHOWWINDOW	threadproc\win32\proc.c	56;"	d	file:
STATIC_LIB_EXT	build\aplibtool.c	47;"	d	file:
STATIC_LIB_EXT	build\aplibtool.c	52;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	102;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	123;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	137;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	155;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	42;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	48;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	59;"	d	file:
STATIC_LIB_EXT	build\jlibtool.c	82;"	d	file:
STDERR_FILENO	include\apr.h	608;"	d
STDIN_FILENO	include\apr.h	606;"	d
STDOUT_FILENO	include\apr.h	607;"	d
STR	misc\unix\rand.c	243;"	d	file:
STRING_MAX	test\testutil.h	46;"	d
STRLEN	test\testsock.h	21;"	d
STRLEN	test\testsockets.c	23;"	d	file:
STR_SIZE	test\testtime.c	25;"	d	file:
STR_TO_DEC	strings\apr_snprintf.c	262;"	d	file:
SUCCEEDS	test\testfnmatch.c	33;"	d	file:
SUCCEEDS_IF	test\testfnmatch.c	32;"	d	file:
SUCCESSFUL_READ	test\testflock.h	23;"	d
SW_HIDE	include\apr.h	98;"	d
SW_HIDE	include\arch\win32\apr_private.h	39;"	d
SW_HIDE	threadproc\win32\proc.c	59;"	d	file:
S_IFBLK	include\arch\win32\apr_arch_file_io.h	92;"	d
S_IFIFO	include\arch\win32\apr_arch_file_io.h	91;"	d
S_IFLNK	include\arch\win32\apr_arch_file_io.h	93;"	d
S_IFSOCK	include\arch\win32\apr_arch_file_io.h	94;"	d
S_IFWHT	include\arch\win32\apr_arch_file_io.h	95;"	d
S_NULL	strings\apr_snprintf.c	58;"	d	file:
S_NULL_LEN	strings\apr_snprintf.c	59;"	d	file:
SetDllDirectoryW	include\arch\win32\apr_arch_misc.h	476;"	d
SetDllDirectoryW	include\arch\win32\apr_arch_misc.h	481;"	d
SetEvent	include\arch\win32\apr_dbg_win32_handles.h	152;"	d
SetStdHandle	include\arch\win32\apr_dbg_win32_handles.h	158;"	d
SetTimerResolution	include\arch\win32\apr_arch_misc.h	360;"	d
Sigfunc	include\arch\win32\apr_private.h	/^typedef void (Sigfunc)(int);$/;"	t
Sigma0_256	random\unix\sha2.c	137;"	d	file:
Sigma0_512	random\unix\sha2.c	143;"	d	file:
Sigma1_256	random\unix\sha2.c	138;"	d	file:
Sigma1_512	random\unix\sha2.c	144;"	d	file:
Status	include\arch\win32\apr_arch_misc.h	/^    UINT Status;$/;"	m	union:IOSB::__anon31
SwitchToThread	include\arch\win32\apr_arch_misc.h	264;"	d
SystemTimeToAprExpTime	time\win32\time.c	/^static void SystemTimeToAprExpTime(apr_time_exp_t *xt, SYSTEMTIME *tm)$/;"	f	file:
TABLE_HASH	tables\apr_tables.c	298;"	d	file:
TABLE_HASH_SIZE	tables\apr_tables.c	296;"	d	file:
TABLE_INDEX_IS_INITIALIZED	tables\apr_tables.c	299;"	d	file:
TABLE_INDEX_MASK	tables\apr_tables.c	297;"	d	file:
TABLE_SET_INDEX_INITIALIZED	tables\apr_tables.c	300;"	d	file:
TEST	test\testdup.c	24;"	d	file:
TEST2	test\testdup.c	25;"	d	file:
TESTBINPATH	test\testutil.h	30;"	d
TESTBINPATH	test\testutil.h	32;"	d
TESTBINPATH	test\testutil.h	35;"	d
TESTBUFFN	test\testlfs.c	294;"	d	file:
TESTDIR	test\testlfs.c	43;"	d	file:
TESTFILE	test\sendfile.c	52;"	d	file:
TESTFILE	test\testflock.h	20;"	d
TESTFILE	test\testlfs.c	44;"	d	file:
TESTFLOCK	test\testflock.h	18;"	d
TESTFN	test\testlfs.c	45;"	d	file:
TESTGLOBALMUTEX_H	test\testglobalmutex.h	18;"	d
TESTREAD_BLKSIZE	test\testfile.c	30;"	d	file:
TESTSF_PORT	test\sendfile.c	50;"	d	file:
TESTSHM_H	test\testshm.h	18;"	d
TESTSOCK_H	test\testsock.h	18;"	d
TESTSTR	test\testfile.c	28;"	d	file:
TESTSTR	test\testlfs.c	171;"	d	file:
TESTSTR	test\testproc.c	24;"	d	file:
TEST_ENVVAR2_NAME	test\testenv.c	22;"	d	file:
TEST_ENVVAR_NAME	test\testenv.c	21;"	d	file:
TEST_ENVVAR_VALUE	test\testenv.c	23;"	d	file:
TEST_GLOBAL	test\testmutexscope.c	/^typedef enum {TEST_GLOBAL, TEST_PROC} test_mode_e;$/;"	e	enum:__anon38	file:
TEST_PROC	test\testmutexscope.c	/^typedef enum {TEST_GLOBAL, TEST_PROC} test_mode_e;$/;"	e	enum:__anon38	file:
TEST_SIZE	test\sockperf.c	37;"	d	file:
TEST_STRING	test\testmmap.c	29;"	d	file:
THREAD_COND_H	include\arch\beos\apr_arch_thread_cond.h	18;"	d
THREAD_COND_H	include\arch\netware\apr_arch_thread_cond.h	18;"	d
THREAD_COND_H	include\arch\os2\apr_arch_thread_cond.h	18;"	d
THREAD_COND_H	include\arch\unix\apr_arch_thread_cond.h	18;"	d
THREAD_COND_H	include\arch\win32\apr_arch_thread_cond.h	18;"	d
THREAD_MUTEX_H	include\arch\beos\apr_arch_thread_mutex.h	18;"	d
THREAD_MUTEX_H	include\arch\netware\apr_arch_thread_mutex.h	18;"	d
THREAD_MUTEX_H	include\arch\os2\apr_arch_thread_mutex.h	18;"	d
THREAD_MUTEX_H	include\arch\unix\apr_arch_thread_mutex.h	18;"	d
THREAD_MUTEX_H	include\arch\win32\apr_arch_thread_mutex.h	18;"	d
THREAD_PROC_H	include\arch\beos\apr_arch_threadproc.h	30;"	d
THREAD_PROC_H	include\arch\netware\apr_arch_threadproc.h	24;"	d
THREAD_PROC_H	include\arch\os2\apr_arch_threadproc.h	21;"	d
THREAD_PROC_H	include\arch\unix\apr_arch_threadproc.h	49;"	d
THREAD_PROC_H	include\arch\win32\apr_arch_threadproc.h	22;"	d
THREAD_RWLOCK_H	include\arch\beos\apr_arch_thread_rwlock.h	18;"	d
THREAD_RWLOCK_H	include\arch\netware\apr_arch_thread_rwlock.h	18;"	d
THREAD_RWLOCK_H	include\arch\os2\apr_arch_thread_rwlock.h	18;"	d
THREAD_RWLOCK_H	include\arch\unix\apr_arch_thread_rwlock.h	18;"	d
THREAD_RWLOCK_H	include\arch\win32\apr_arch_thread_rwlock.h	18;"	d
TIMEOUT	test\sendfile.c	/^typedef enum {BLK, NONBLK, TIMEOUT} client_socket_mode_t;$/;"	e	enum:__anon34	file:
TIMEOUT_INTERVAL	memory\unix\apr_pools.c	71;"	d	file:
TIMEOUT_USECS	memory\unix\apr_pools.c	70;"	d	file:
TIME_INTERNAL_H	include\arch\netware\apr_arch_internal_time.h	18;"	d
TIME_INTERNAL_H	include\arch\unix\apr_arch_internal_time.h	18;"	d
TOSS	test\testcond.c	/^    TOSS,$/;"	e	enum:__anon35	file:
TRL1	test\sendfile.c	45;"	d	file:
TRL2	test\sendfile.c	46;"	d	file:
TRL3_CHAR	test\sendfile.c	48;"	d	file:
TRL3_LEN	test\sendfile.c	47;"	d	file:
TRUE	include\apr_general.h	55;"	d
TRUE	strings\apr_snprintf.c	53;"	d	file:
TRUE	test\abts.h	38;"	d
TRUNCATE_DLL_NAME	build\aplibtool.c	41;"	d	file:
TRUNCATE_DLL_NAME	build\jlibtool.c	36;"	d	file:
TRUSTEE_IS_WELL_KNOWN_GROUP	include\arch\win32\apr_arch_file_io.h	125;"	d
TZONE	include\arch\netware\apr_arch_internal_time.h	22;"	d
TargetPath	libapr.mak	/^TargetPath=.\\9x\\Debug\\libapr-1.dll$/;"	m
TargetPath	libapr.mak	/^TargetPath=.\\9x\\Release\\libapr-1.dll$/;"	m
TargetPath	libapr.mak	/^TargetPath=.\\Debug\\libapr-1.dll$/;"	m
TargetPath	libapr.mak	/^TargetPath=.\\Release\\libapr-1.dll$/;"	m
TargetPath	libapr.mak	/^TargetPath=.\\x64\\Debug\\libapr-1.dll$/;"	m
TargetPath	libapr.mak	/^TargetPath=.\\x64\\Release\\libapr-1.dll$/;"	m
TryEnterCriticalSection	include\arch\win32\apr_arch_misc.h	259;"	d
UNEXPECTED_ERROR	test\testflock.h	24;"	d
UNUSED	strings\apr_strnatcmp.c	29;"	d	file:
UNUSED	strings\apr_strnatcmp.c	31;"	d	file:
USE_ATOMICS_BUILTINS	include\arch\unix\apr_arch_atomic.h	32;"	d
USE_ATOMICS_GENERIC	include\arch\unix\apr_arch_atomic.h	30;"	d
USE_ATOMICS_GENERIC	include\arch\unix\apr_arch_atomic.h	42;"	d
USE_ATOMICS_IA32	include\arch\unix\apr_arch_atomic.h	36;"	d
USE_ATOMICS_PPC	include\arch\unix\apr_arch_atomic.h	38;"	d
USE_ATOMICS_S390	include\arch\unix\apr_arch_atomic.h	40;"	d
USE_ATOMICS_SOLARIS	include\arch\unix\apr_arch_atomic.h	34;"	d
USE_OMF	build\aplibtool.c	40;"	d	file:
USE_OMF	build\jlibtool.c	35;"	d	file:
USE_WAIT_FOR_IO	file_io\unix\readwrite.c	25;"	d	file:
USE_WAIT_FOR_IO	support\unix\waitio.c	26;"	d	file:
UTF8_H	include\arch\win32\apr_arch_utf8.h	18;"	d
UniqueProcessId	include\arch\win32\apr_arch_misc.h	/^    apr_uintptr_t UniqueProcessId;$/;"	m	struct:PBI
UnregisterAppWithWinSock	misc\netware\start.c	/^static int UnregisterAppWithWinSock (void *nlm_handle)$/;"	f	file:
V4MAPPED_EQUAL	network_io\unix\sockaddr.c	784;"	d	file:
VERSION	build\jlibtool.c	185;"	d	file:
WIN32_LEAN_AND_MEAN	include\apr.h	75;"	d
WSABUF	include\arch\win32\apr_arch_networkio.h	/^} WSABUF, FAR * LPWSABUF;$/;"	t	typeref:struct:_WSABUF
WSABUF_ON_STACK	network_io\win32\sendrecv.c	37;"	d	file:
WSACleanupWithNLMHandle	misc\netware\start.c	/^int (*WSACleanupWithNLMHandle)( void *handle ) = NULL;$/;"	v
WSAHighByte	include\arch\unix\apr_arch_misc.h	62;"	d
WSAHighByte	include\arch\win32\apr_arch_misc.h	59;"	d
WSALowByte	include\arch\unix\apr_arch_misc.h	63;"	d
WSALowByte	include\arch\win32\apr_arch_misc.h	60;"	d
WSAPOLLFD	include\arch\win32\apr_arch_misc.h	/^} WSAPOLLFD, *PWSAPOLLFD, FAR *LPWSAPOLLFD;$/;"	t	typeref:struct:pollfd
WSAPoll	include\arch\win32\apr_arch_misc.h	465;"	d
WSAPoll	include\arch\win32\apr_arch_misc.h	472;"	d
WSASocketA	include\arch\win32\apr_dbg_win32_handles.h	188;"	d
WSASocketW	include\arch\win32\apr_dbg_win32_handles.h	193;"	d
WSAStartupWithNLMHandle	misc\netware\start.c	/^int (*WSAStartupWithNLMHandle)( WORD version, LPWSADATA data, void *handle ) = NULL;$/;"	v
WS_CPORT_SIGNATURE	misc\netware\start.c	48;"	d	file:
WS_LOAD_ENTRY_SIGNATURE	misc\netware\start.c	44;"	d	file:
WS_LOOKUP_SERVICE_SIGNATURE	misc\netware\start.c	46;"	d	file:
WS_SKT_SIGNATURE	misc\netware\start.c	45;"	d	file:
WS_WSAEVENT_SIGNATURE	misc\netware\start.c	47;"	d	file:
WaitForMultipleObjects	include\arch\win32\apr_dbg_win32_handles.h	178;"	d
WaitForMultipleObjectsEx	include\arch\win32\apr_dbg_win32_handles.h	183;"	d
WaitForSingleObject	include\arch\win32\apr_dbg_win32_handles.h	168;"	d
WaitForSingleObjectEx	include\arch\win32\apr_dbg_win32_handles.h	173;"	d
Where	build\lineends.pl	/^Where:  paths specifies the top level directory to convert (default of '.')$/;"	l
Write	include\arch\beos\apr_arch_thread_rwlock.h	/^    sem_id Write;$/;"	m	struct:apr_thread_rwlock_t
WriteCount	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  WriteCount;$/;"	m	struct:apr_thread_rwlock_t
XSTR	misc\unix\rand.c	244;"	d	file:
YES	strings\apr_snprintf.c	/^    NO = 0, YES = 1$/;"	e	enum:__anon33	file:
ZwQueryInformationFile	include\arch\win32\apr_arch_misc.h	412;"	d
_APR_FNMATCH_H_	include\apr_fnmatch.h	38;"	d
_CRT_SECURE_NO_DEPRECATE	include\apr.h	64;"	d
_NonAppCheckUnload	misc\netware\libprews.c	/^int  _NonAppCheckUnload( void )$/;"	f
_NonAppStart	misc\netware\libprews.c	/^int _NonAppStart$/;"	f
_NonAppStop	misc\netware\libprews.c	/^void _NonAppStop( void )$/;"	f
_NonAppStop	test\nw_misc.c	/^void _NonAppStop( void )$/;"	f
_SHA256_CTX	random\unix\sha2.h	/^typedef struct _SHA256_CTX {$/;"	s
_SHA256_CTX::bitcount	random\unix\sha2.h	/^        apr_uint64_t    bitcount;$/;"	m	struct:_SHA256_CTX
_SHA256_CTX::buffer	random\unix\sha2.h	/^        apr_byte_t      buffer[SHA256_BLOCK_LENGTH];$/;"	m	struct:_SHA256_CTX
_SHA256_CTX::state	random\unix\sha2.h	/^        apr_uint32_t    state[8];$/;"	m	struct:_SHA256_CTX
_SHA512_CTX	random\unix\sha2.h	/^typedef struct _SHA512_CTX {$/;"	s
_SHA512_CTX::bitcount	random\unix\sha2.h	/^        apr_uint64_t    bitcount[2];$/;"	m	struct:_SHA512_CTX
_SHA512_CTX::buffer	random\unix\sha2.h	/^        apr_byte_t      buffer[SHA512_BLOCK_LENGTH];$/;"	m	struct:_SHA512_CTX
_SHA512_CTX::state	random\unix\sha2.h	/^        apr_uint64_t    state[8];$/;"	m	struct:_SHA512_CTX
_WCHAR_T	include\arch\netware\apr_arch_pre_nw.h	41;"	d
_WIN32_WINNT	include\apr.h	81;"	d
_WSABUF	include\arch\win32\apr_arch_networkio.h	/^typedef struct _WSABUF {$/;"	s
_WSABUF::buf	include\arch\win32\apr_arch_networkio.h	/^    char FAR *  buf;     \/* the pointer to the buffer *\/$/;"	m	struct:_WSABUF
_WSABUF::len	include\arch\win32\apr_arch_networkio.h	/^    u_long      len;     \/* the length of the buffer *\/$/;"	m	struct:_WSABUF
__P	network_io\unix\inet_ntop.c	48;"	d	file:
__P	network_io\unix\inet_pton.c	50;"	d	file:
__SHA2_H__	random\unix\sha2.h	24;"	d
__anon15::f	include\apr_poll.h	/^    apr_file_t *f;              \/**< file *\/$/;"	m	union:__anon15
__anon15::s	include\apr_poll.h	/^    apr_socket_t *s;            \/**< socket *\/$/;"	m	union:__anon15
__anon1::arglist	build\aplibtool.c	/^    char *arglist[1024];$/;"	m	struct:__anon1	file:
__anon1::mode	build\aplibtool.c	/^    enum mode_t mode;$/;"	m	struct:__anon1	typeref:enum:__anon1::mode_t	file:
__anon1::num_args	build\aplibtool.c	/^    int num_args;$/;"	m	struct:__anon1	file:
__anon1::num_obj_files	build\aplibtool.c	/^    int num_obj_files;$/;"	m	struct:__anon1	file:
__anon1::num_tmp_dirs	build\aplibtool.c	/^    int num_tmp_dirs;$/;"	m	struct:__anon1	file:
__anon1::obj_files	build\aplibtool.c	/^    char *obj_files[1024];$/;"	m	struct:__anon1	file:
__anon1::output_name	build\aplibtool.c	/^    char *output_name;$/;"	m	struct:__anon1	file:
__anon1::output_type	build\aplibtool.c	/^    enum output_type_t output_type;$/;"	m	struct:__anon1	typeref:enum:__anon1::output_type_t	file:
__anon1::stub_name	build\aplibtool.c	/^    char *stub_name;$/;"	m	struct:__anon1	file:
__anon1::tmp_dirs	build\aplibtool.c	/^    char *tmp_dirs[1024];$/;"	m	struct:__anon1	file:
__anon21::is_dev	include\apr_version.h	/^    int is_dev;     \/**< is development (1 or 0) *\/$/;"	m	struct:__anon21
__anon21::major	include\apr_version.h	/^    int major;      \/**< major number *\/$/;"	m	struct:__anon21
__anon21::minor	include\apr_version.h	/^    int minor;      \/**< minor number *\/$/;"	m	struct:__anon21
__anon21::patch	include\apr_version.h	/^    int patch;      \/**< patch number *\/$/;"	m	struct:__anon21
__anon25::epoll	include\arch\unix\apr_arch_poll_private.h	/^    struct epoll_event *epoll;$/;"	m	union:__anon25	typeref:struct:__anon25::epoll_event
__anon25::ke	include\arch\unix\apr_arch_poll_private.h	/^    struct kevent *ke;$/;"	m	union:__anon25	typeref:struct:__anon25::kevent
__anon25::port	include\arch\unix\apr_arch_poll_private.h	/^    port_event_t *port;$/;"	m	union:__anon25
__anon25::ps	include\arch\unix\apr_arch_poll_private.h	/^    struct pollfd *ps;$/;"	m	union:__anon25	typeref:struct:__anon25::pollfd
__anon25::undef	include\arch\unix\apr_arch_poll_private.h	/^    void *undef;$/;"	m	union:__anon25
__anon2::num	build\jlibtool.c	/^    int num; $/;"	m	struct:__anon2	file:
__anon2::vals	build\jlibtool.c	/^    const char **vals;$/;"	m	struct:__anon2	file:
__anon32::code	misc\unix\errorcodes.c	/^    apr_status_t code;$/;"	m	struct:__anon32	file:
__anon32::msg	misc\unix\errorcodes.c	/^    const char *msg;$/;"	m	struct:__anon32	file:
__anon36::mutex	test\testlock.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:__anon36	file:
__anon36::nput	test\testlock.c	/^    int                nput;$/;"	m	struct:__anon36	file:
__anon36::nval	test\testlock.c	/^    int                nval;$/;"	m	struct:__anon36	file:
__anon37::cond	test\testlock.c	/^    apr_thread_cond_t  *cond;$/;"	m	struct:__anon37	file:
__anon37::mutex	test\testlock.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:__anon37	file:
__anon37::nready	test\testlock.c	/^    int                nready;$/;"	m	struct:__anon37	file:
__anon3::install	build\jlibtool.c	/^    const char *install;$/;"	m	struct:__anon3	file:
__anon3::normal	build\jlibtool.c	/^    const char *normal;$/;"	m	struct:__anon3	file:
__anon4::dependencies	build\jlibtool.c	/^    count_chars *dependencies;$/;"	m	struct:__anon4	file:
__anon4::install	build\jlibtool.c	/^    count_chars *install;$/;"	m	struct:__anon4	file:
__anon4::normal	build\jlibtool.c	/^    count_chars *normal;$/;"	m	struct:__anon4	file:
__anon5::dry_run	build\jlibtool.c	/^    int dry_run;$/;"	m	struct:__anon5	file:
__anon5::export_all	build\jlibtool.c	/^    int export_all;$/;"	m	struct:__anon5	file:
__anon5::export_dynamic	build\jlibtool.c	/^    int export_dynamic;$/;"	m	struct:__anon5	file:
__anon5::no_install	build\jlibtool.c	/^    int no_install;$/;"	m	struct:__anon5	file:
__anon5::pic_mode	build\jlibtool.c	/^    enum pic_mode_e pic_mode;$/;"	m	struct:__anon5	typeref:enum:__anon5::pic_mode_e	file:
__anon5::shared	build\jlibtool.c	/^    enum shared_mode_e shared;$/;"	m	struct:__anon5	typeref:enum:__anon5::shared_mode_e	file:
__anon5::silent	build\jlibtool.c	/^    int silent;$/;"	m	struct:__anon5	file:
__anon6::arglist	build\jlibtool.c	/^    count_chars *arglist;$/;"	m	struct:__anon6	file:
__anon6::basename	build\jlibtool.c	/^    char *basename;$/;"	m	struct:__anon6	file:
__anon6::compiler	build\jlibtool.c	/^    const char *compiler;$/;"	m	struct:__anon6	file:
__anon6::dep_rpaths	build\jlibtool.c	/^    count_chars *dep_rpaths;$/;"	m	struct:__anon6	file:
__anon6::fake_output_name	build\jlibtool.c	/^    char *fake_output_name;$/;"	m	struct:__anon6	file:
__anon6::install_path	build\jlibtool.c	/^    const char *install_path;$/;"	m	struct:__anon6	file:
__anon6::mode	build\jlibtool.c	/^    enum tool_mode_t mode;$/;"	m	struct:__anon6	typeref:enum:__anon6::tool_mode_t	file:
__anon6::module_name	build\jlibtool.c	/^    library_name module_name;$/;"	m	struct:__anon6	file:
__anon6::obj_files	build\jlibtool.c	/^    count_chars *obj_files;$/;"	m	struct:__anon6	file:
__anon6::options	build\jlibtool.c	/^    options_t options;$/;"	m	struct:__anon6	file:
__anon6::output	build\jlibtool.c	/^    enum output_t output;$/;"	m	struct:__anon6	typeref:enum:__anon6::output_t	file:
__anon6::output_name	build\jlibtool.c	/^    char *output_name;$/;"	m	struct:__anon6	file:
__anon6::program	build\jlibtool.c	/^    const char *program;$/;"	m	struct:__anon6	file:
__anon6::program_opts	build\jlibtool.c	/^    count_chars *program_opts;$/;"	m	struct:__anon6	file:
__anon6::rpaths	build\jlibtool.c	/^    count_chars *rpaths;$/;"	m	struct:__anon6	file:
__anon6::shared_name	build\jlibtool.c	/^    library_name shared_name;$/;"	m	struct:__anon6	file:
__anon6::shared_opts	build\jlibtool.c	/^    library_opts shared_opts;$/;"	m	struct:__anon6	file:
__anon6::static_name	build\jlibtool.c	/^    library_name static_name;$/;"	m	struct:__anon6	file:
__anon6::static_opts	build\jlibtool.c	/^    library_opts static_opts;$/;"	m	struct:__anon6	file:
__anon6::tmp_dirs	build\jlibtool.c	/^    count_chars *tmp_dirs;$/;"	m	struct:__anon6	file:
__anon6::undefined_flag	build\jlibtool.c	/^    const char *undefined_flag;$/;"	m	struct:__anon6	file:
__anon6::version_info	build\jlibtool.c	/^    const char *version_info;$/;"	m	struct:__anon6	file:
__anon7::addr	dso\aix\dso.c	/^    void *addr;			\/* its relocated virtual address *\/$/;"	m	struct:__anon7	file:
__anon7::name	dso\aix\dso.c	/^    char *name;			\/* the symbols's name *\/$/;"	m	struct:__anon7	file:
__anon8::init	dso\aix\dso.c	/^    void (*init) (void);	\/* call static constructors *\/$/;"	m	struct:__anon8	file:
__anon8::term	dso\aix\dso.c	/^    void (*term) (void);	\/* call static destructors *\/$/;"	m	struct:__anon8	file:
__attribute__	include\apr.h	123;"	d
__int64	include\arch\netware\apr_arch_pre_nw.h	51;"	d
__pre_nw__	include\arch\netware\apr_arch_pre_nw.h	17;"	d
__wtypes_h__	include\arch\win32\apr_private.h	51;"	d
__wtypes_h__	include\arch\win32\apr_private.h	53;"	d
_alloca	include\arch\netware\apr_private.h	184;"	d
_beginthread	include\arch\win32\apr_dbg_win32_handles.h	203;"	d
_beginthreadex	include\arch\win32\apr_dbg_win32_handles.h	208;"	d
_getch	include\arch\netware\apr_private.h	138;"	d
_proc_mutex_cleanup	locks\beos\proc_mutex.c	/^static apr_status_t _proc_mutex_cleanup(void * data)$/;"	f	file:
_re_include	build\gen-build.py	/^_re_include = re.compile('#include *["<](.*)[">]')$/;"	v
_thread_cond_timedwait	locks\win32\thread_cond.c	/^static APR_INLINE apr_status_t _thread_cond_timedwait(apr_thread_cond_t *cond,$/;"	f	file:
_thread_mutex_cleanup	locks\beos\thread_mutex.c	/^static apr_status_t _thread_mutex_cleanup(void * data)$/;"	f	file:
_thread_rw_cleanup	locks\beos\thread_rwlock.c	/^static apr_status_t _thread_rw_cleanup(void * data)$/;"	f	file:
a	include\apr_tables.h	/^APR_DECLARE(int) apr_is_empty_array(const apr_array_header_t *a);$/;"	v
a	tables\apr_tables.c	/^    apr_array_header_t a;$/;"	m	struct:apr_table_t	file:
a1	test\testtable.c	/^static apr_array_header_t *a1 = NULL;$/;"	v	file:
abort_fn	memory\unix\apr_pools.c	/^    apr_abortfunc_t       abort_fn;$/;"	m	struct:apr_pool_t	file:
abts_add_suite	test\abts.c	/^abts_suite *abts_add_suite(abts_suite *suite, const char *suite_name_full)$/;"	f
abts_assert	test\abts.c	/^void abts_assert(abts_case *tc, const char *message, int condition, int lineno)$/;"	f
abts_case	test\abts.h	/^struct abts_case {$/;"	s
abts_case	test\abts.h	/^typedef struct abts_case abts_case;$/;"	t	typeref:struct:abts_case
abts_case::failed	test\abts.h	/^    int failed;$/;"	m	struct:abts_case
abts_case::suite	test\abts.h	/^    sub_suite *suite;$/;"	m	struct:abts_case
abts_fail	test\abts.c	/^void abts_fail(abts_case *tc, const char *message, int lineno)$/;"	f
abts_int_equal	test\abts.c	/^void abts_int_equal(abts_case *tc, const int expected, const int actual, int lineno)$/;"	f
abts_int_nequal	test\abts.c	/^void abts_int_nequal(abts_case *tc, const int expected, const int actual, int lineno)$/;"	f
abts_log_message	test\abts.c	/^void abts_log_message(const char *fmt, ...)$/;"	f
abts_not_impl	test\abts.c	/^void abts_not_impl(abts_case *tc, const char *message, int lineno)$/;"	f
abts_ptr_equal	test\abts.c	/^void abts_ptr_equal(abts_case *tc, const void *expected, const void *actual, int lineno)$/;"	f
abts_ptr_notnull	test\abts.c	/^void abts_ptr_notnull(abts_case *tc, const void *ptr, int lineno)$/;"	f
abts_run_test	test\abts.c	/^void abts_run_test(abts_suite *ts, test_func f, void *value)$/;"	f
abts_size_equal	test\abts.c	/^void abts_size_equal(abts_case *tc, size_t expected, size_t actual, int lineno)$/;"	f
abts_str_equal	test\abts.c	/^void abts_str_equal(abts_case *tc, const char *expected, const char *actual, int lineno)$/;"	f
abts_str_nequal	test\abts.c	/^void abts_str_nequal(abts_case *tc, const char *expected, const char *actual,$/;"	f
abts_suite	test\abts.h	/^struct abts_suite {$/;"	s
abts_suite	test\abts.h	/^typedef struct abts_suite abts_suite;$/;"	t	typeref:struct:abts_suite
abts_suite::head	test\abts.h	/^    sub_suite *head;$/;"	m	struct:abts_suite
abts_suite::tail	test\abts.h	/^    sub_suite *tail;$/;"	m	struct:abts_suite
abts_true	test\abts.c	/^void abts_true(abts_case *tc, int condition, int lineno)$/;"	f
accept	include\arch\os2\apr_arch_os2calls.h	44;"	d
acquire	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*acquire)(apr_proc_mutex_t *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
active	memory\unix\apr_pools.c	/^    apr_memnode_t        *active;$/;"	m	struct:apr_pool_t	file:
add	include\apr_random.h	/^    apr_crypto_hash_add_t *add;$/;"	m	struct:apr_crypto_hash_t
add	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*add)(apr_pollcb_t *, apr_pollfd_t *);$/;"	m	struct:apr_pollcb_provider_t
add	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*add)(apr_pollset_t *, const apr_pollfd_t *);$/;"	m	struct:apr_pollset_provider_t
add_dylink_noinstall	build\jlibtool.c	/^void add_dylink_noinstall(count_chars *cc, const char *arg, int pathlen,$/;"	f
add_dynamic_link_opts	build\jlibtool.c	/^void add_dynamic_link_opts(command_t *cmd_data, count_chars *args)$/;"	f
add_for_runtime	build\jlibtool.c	/^int add_for_runtime(command_t *cmd_data)$/;"	f
add_linker_flag_prefix	build\jlibtool.c	/^void add_linker_flag_prefix(count_chars *cc, const char *arg)$/;"	f
add_minus_l	build\jlibtool.c	/^void add_minus_l(count_chars *cc, const char *arg)$/;"	f
add_rpath	build\jlibtool.c	/^void add_rpath(count_chars *cc, const char *path)$/;"	f
add_rpath_file	build\jlibtool.c	/^void add_rpath_file(count_chars *cc, const char *arg)$/;"	f
add_rpath_noinstall	build\jlibtool.c	/^void add_rpath_noinstall(count_chars *cc, const char *arg, int pathlen)$/;"	f
add_runtimedirlib	build\jlibtool.c	/^void add_runtimedirlib(char *arg, command_t *cmd_data)$/;"	f
add_sockets_pollset	test\testpoll.c	/^static void add_sockets_pollset(abts_case *tc, void *data)$/;"	f	file:
add_symbol	build\make_exports.awk	/^function add_symbol(symbol) {$/;"	f
add_symbol	build\make_nw_export.awk	/^function add_symbol(sym_name) {$/;"	f
add_symbol	build\make_var_export.awk	/^function add_symbol (sym_name) {$/;"	f
addmt	build\cvtdsp.pl	/^sub addmt { $/;"	s
addr	dso\aix\dso.c	/^    void *addr;			\/* its relocated virtual address *\/$/;"	m	struct:__anon7	file:
addr_str_len	include\apr_network_io.h	/^    int addr_str_len;$/;"	m	struct:apr_sockaddr_t
addrspace	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t addrspace;$/;"	m	struct:apr_procattr_t
aid	shmem\beos\shm.c	/^    area_id aid;$/;"	m	struct:apr_shm_t	file:
alist	include\arch\beos\apr_arch_thread_cond.h	/^    APR_RING_HEAD(active_list, waiter_t) alist;$/;"	m	struct:apr_thread_cond_t
all_random	random\unix\apr_random.c	/^static apr_random_t *all_random;$/;"	v	file:
alloc_array	tables\apr_hash.c	/^static apr_hash_entry_t **alloc_array(apr_hash_t *ht, unsigned int max)$/;"	f	file:
alloc_bytes	test\testpools.c	/^static void alloc_bytes(abts_case *tc, void *data)$/;"	f	file:
alloc_socket	network_io\os2\sockets.c	/^static void alloc_socket(apr_socket_t **new, apr_pool_t *p)$/;"	f	file:
alloc_socket	network_io\unix\sockets.c	/^static void alloc_socket(apr_socket_t **new, apr_pool_t *p)$/;"	f	file:
alloc_socket	network_io\win32\sockets.c	/^static void alloc_socket(apr_socket_t **new, apr_pool_t *p)$/;"	f	file:
allocator	include\apr_allocator.h	/^                                      apr_allocator_t *allocator);$/;"	v
allocator	include\apr_allocator.h	/^APR_DECLARE(apr_pool_t *) apr_allocator_owner_get(apr_allocator_t *allocator);$/;"	v
allocator	include\apr_allocator.h	/^APR_DECLARE(apr_status_t) apr_allocator_create(apr_allocator_t **allocator);$/;"	v
allocator	include\apr_allocator.h	/^APR_DECLARE(void) apr_allocator_destroy(apr_allocator_t *allocator);$/;"	v
allocator	memory\unix\apr_pools.c	/^    apr_allocator_t      *allocator;$/;"	m	struct:apr_pool_t	file:
allocator_alloc	memory\unix\apr_pools.c	/^apr_memnode_t *allocator_alloc(apr_allocator_t *allocator, apr_size_t in_size)$/;"	f	file:
allocator_free	memory\unix\apr_pools.c	/^void allocator_free(apr_allocator_t *allocator, apr_memnode_t *node)$/;"	f	file:
alltests	test\abts_tests.h	/^} alltests[] = {$/;"	v	typeref:struct:testlist
app_data	include\arch\netware\apr_private.h	/^typedef struct app_data {$/;"	s
app_data::gPool	include\arch\netware\apr_private.h	/^    void*   gPool;$/;"	m	struct:app_data
app_data::gs_aHooksToSort	include\arch\netware\apr_private.h	/^    void*   gs_aHooksToSort;$/;"	m	struct:app_data
app_data::gs_event_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_event_rtag;$/;"	m	struct:app_data
app_data::gs_ldap_xref_lock	include\arch\netware\apr_private.h	/^    void*   gs_ldap_xref_lock;$/;"	m	struct:app_data
app_data::gs_lookup_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_lookup_rtag;$/;"	m	struct:app_data
app_data::gs_nlmhandle	include\arch\netware\apr_private.h	/^    void*   gs_nlmhandle;$/;"	m	struct:app_data
app_data::gs_pcp_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_pcp_rtag;$/;"	m	struct:app_data
app_data::gs_phOptionalFunctions	include\arch\netware\apr_private.h	/^    void*   gs_phOptionalFunctions;$/;"	m	struct:app_data
app_data::gs_phOptionalHooks	include\arch\netware\apr_private.h	/^    void*   gs_phOptionalHooks;$/;"	m	struct:app_data
app_data::gs_socket_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_socket_rtag;$/;"	m	struct:app_data
app_data::gs_startup_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_startup_rtag;$/;"	m	struct:app_data
app_data::gs_xref_head	include\arch\netware\apr_private.h	/^    void*   gs_xref_head;$/;"	m	struct:app_data
app_data::initialized	include\arch\netware\apr_private.h	/^    int     initialized;$/;"	m	struct:app_data
append	include\arch\win32\apr_arch_file_io.h	/^    int append; $/;"	m	struct:apr_file_t
append_count_chars	build\jlibtool.c	/^void append_count_chars(count_chars *cc, count_chars *cctoadd)$/;"	f
append_exist	test\testfilecopy.c	/^static void append_exist(abts_case *tc, void *data)$/;"	f	file:
append_nonexist	test\testfilecopy.c	/^static void append_nonexist(abts_case *tc, void *data)$/;"	f	file:
apr__SHA256_Data	random\unix\sha2.c	/^char* apr__SHA256_Data(const sha2_byte* data, size_t len, char digest[SHA256_DIGEST_STRING_LENGTH]) {$/;"	f
apr__SHA256_End	random\unix\sha2.c	/^char *apr__SHA256_End(SHA256_CTX* context, char buffer[]) {$/;"	f
apr__SHA256_Final	random\unix\sha2.c	/^void apr__SHA256_Final(sha2_byte digest[], SHA256_CTX* context) {$/;"	f
apr__SHA256_Init	random\unix\sha2.c	/^void apr__SHA256_Init(SHA256_CTX* context) {$/;"	f
apr__SHA256_Transform	random\unix\sha2.c	/^void apr__SHA256_Transform(SHA256_CTX* context, const sha2_word32* data) {$/;"	f
apr__SHA256_Update	random\unix\sha2.c	/^void apr__SHA256_Update(SHA256_CTX* context, const sha2_byte *data, size_t len) {$/;"	f
apr__SHA384_Data	random\unix\sha2.c	/^char* apr__SHA384_Data(const sha2_byte* data, size_t len, char digest[SHA384_DIGEST_STRING_LENGTH]) {$/;"	f
apr__SHA384_End	random\unix\sha2.c	/^char *apr__SHA384_End(SHA384_CTX* context, char buffer[]) {$/;"	f
apr__SHA384_Final	random\unix\sha2.c	/^void apr__SHA384_Final(sha2_byte digest[], SHA384_CTX* context) {$/;"	f
apr__SHA384_Init	random\unix\sha2.c	/^void apr__SHA384_Init(SHA384_CTX* context) {$/;"	f
apr__SHA384_Update	random\unix\sha2.c	/^void apr__SHA384_Update(SHA384_CTX* context, const sha2_byte* data, size_t len) {$/;"	f
apr__SHA512_Data	random\unix\sha2.c	/^char* apr__SHA512_Data(const sha2_byte* data, size_t len, char digest[SHA512_DIGEST_STRING_LENGTH]) {$/;"	f
apr__SHA512_End	random\unix\sha2.c	/^char *apr__SHA512_End(SHA512_CTX* context, char buffer[]) {$/;"	f
apr__SHA512_Final	random\unix\sha2.c	/^void apr__SHA512_Final(sha2_byte digest[], SHA512_CTX* context) {$/;"	f
apr__SHA512_Init	random\unix\sha2.c	/^void apr__SHA512_Init(SHA512_CTX* context) {$/;"	f
apr__SHA512_Last	random\unix\sha2.c	/^void apr__SHA512_Last(SHA512_CTX* context) {$/;"	f
apr__SHA512_Transform	random\unix\sha2.c	/^void apr__SHA512_Transform(SHA512_CTX* context, const sha2_word64* data) {$/;"	f
apr__SHA512_Update	random\unix\sha2.c	/^void apr__SHA512_Update(SHA512_CTX* context, const sha2_byte *data, size_t len) {$/;"	f
apr_abortfunc_t	include\apr_pools.h	/^typedef int (*apr_abortfunc_t)(int retcode);$/;"	t
apr_allocator_alloc	memory\unix\apr_pools.c	/^APR_DECLARE(apr_memnode_t *) apr_allocator_alloc(apr_allocator_t *allocator,$/;"	f
apr_allocator_destroy	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_allocator_destroy(apr_allocator_t *allocator)$/;"	f
apr_allocator_free	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_allocator_free(apr_allocator_t *allocator,$/;"	f
apr_allocator_max_free_set	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_allocator_max_free_set(apr_allocator_t *allocator,$/;"	f
apr_allocator_mutex_get	memory\unix\apr_pools.c	/^APR_DECLARE(apr_thread_mutex_t *) apr_allocator_mutex_get($/;"	f
apr_allocator_mutex_set	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_allocator_mutex_set(apr_allocator_t *allocator,$/;"	f
apr_allocator_owner_get	memory\unix\apr_pools.c	/^APR_DECLARE(apr_pool_t *) apr_allocator_owner_get(apr_allocator_t *allocator)$/;"	f
apr_allocator_owner_set	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_allocator_owner_set(apr_allocator_t *allocator,$/;"	f
apr_allocator_t	include\apr_allocator.h	/^typedef struct apr_allocator_t apr_allocator_t;$/;"	t	typeref:struct:apr_allocator_t
apr_allocator_t	memory\unix\apr_pools.c	/^struct apr_allocator_t {$/;"	s	file:
apr_allocator_t::current_free_index	memory\unix\apr_pools.c	/^    apr_uint32_t        current_free_index;$/;"	m	struct:apr_allocator_t	file:
apr_allocator_t::free	memory\unix\apr_pools.c	/^    apr_memnode_t      *free[MAX_INDEX];$/;"	m	struct:apr_allocator_t	file:
apr_allocator_t::max_free_index	memory\unix\apr_pools.c	/^    apr_uint32_t        max_free_index;$/;"	m	struct:apr_allocator_t	file:
apr_allocator_t::max_index	memory\unix\apr_pools.c	/^    apr_uint32_t        max_index;$/;"	m	struct:apr_allocator_t	file:
apr_allocator_t::mutex	memory\unix\apr_pools.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:apr_allocator_t	file:
apr_allocator_t::owner	memory\unix\apr_pools.c	/^    apr_pool_t         *owner;$/;"	m	struct:apr_allocator_t	file:
apr_app_init_complete	misc\win32\start.c	/^int APR_DECLARE_DATA apr_app_init_complete = 0;$/;"	v
apr_array_append	tables\apr_tables.c	/^    apr_array_append(apr_pool_t *p,$/;"	f
apr_array_cat	tables\apr_tables.c	/^APR_DECLARE(void) apr_array_cat(apr_array_header_t *dst,$/;"	f
apr_array_clear	tables\apr_tables.c	/^APR_DECLARE(void) apr_array_clear(apr_array_header_t *arr)$/;"	f
apr_array_copy	tables\apr_tables.c	/^APR_DECLARE(apr_array_header_t *) apr_array_copy(apr_pool_t *p,$/;"	f
apr_array_copy_hdr	tables\apr_tables.c	/^    apr_array_copy_hdr(apr_pool_t *p,$/;"	f
apr_array_header_t	include\apr_tables.h	/^struct apr_array_header_t {$/;"	s
apr_array_header_t	include\apr_tables.h	/^typedef struct apr_array_header_t apr_array_header_t;$/;"	t	typeref:struct:apr_array_header_t
apr_array_header_t::elt_size	include\apr_tables.h	/^    int elt_size;$/;"	m	struct:apr_array_header_t
apr_array_header_t::elts	include\apr_tables.h	/^    char *elts;$/;"	m	struct:apr_array_header_t
apr_array_header_t::nalloc	include\apr_tables.h	/^    int nalloc;$/;"	m	struct:apr_array_header_t
apr_array_header_t::nelts	include\apr_tables.h	/^    int nelts;$/;"	m	struct:apr_array_header_t
apr_array_header_t::pool	include\apr_tables.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_array_header_t
apr_array_make	tables\apr_tables.c	/^APR_DECLARE(apr_array_header_t *) apr_array_make(apr_pool_t *p,$/;"	f
apr_array_pop	tables\apr_tables.c	/^APR_DECLARE(void *) apr_array_pop(apr_array_header_t *arr)$/;"	f
apr_array_pstrcat	tables\apr_tables.c	/^APR_DECLARE(char *) apr_array_pstrcat(apr_pool_t *p,$/;"	f
apr_array_push	tables\apr_tables.c	/^APR_DECLARE(void *) apr_array_push(apr_array_header_t *arr)$/;"	f
apr_array_push_noclear	tables\apr_tables.c	/^static void *apr_array_push_noclear(apr_array_header_t *arr)$/;"	f	file:
apr_assert_success	test\testutil.c	/^void apr_assert_success(abts_case* tc, const char* context, apr_status_t rv, $/;"	f
apr_atomic_add32	atomic\os390\atomic.c	/^apr_uint32_t apr_atomic_add32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_cas32	atomic\os390\atomic.c	/^apr_uint32_t apr_atomic_cas32(volatile apr_uint32_t *mem, apr_uint32_t swap, $/;"	f
apr_atomic_casptr	atomic\netware\apr_atomic.c	/^APR_DECLARE(void *) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\os390\atomic.c	/^void *apr_atomic_casptr(volatile void **mem_ptr,$/;"	f
apr_atomic_casptr	atomic\unix\builtins.c	/^APR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\unix\ia32.c	/^APR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\unix\mutex.c	/^APR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\unix\ppc.c	/^APR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\unix\s390.c	/^APR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\unix\solaris.c	/^APR_DECLARE(void*) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_casptr	atomic\win32\apr_atomic.c	/^APR_DECLARE(void *) apr_atomic_casptr(volatile void **mem, void *with, const void *cmp)$/;"	f
apr_atomic_dec32	atomic\netware\apr_atomic.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem) $/;"	f
apr_atomic_dec32	atomic\os390\atomic.c	/^int apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\unix\builtins.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\unix\ia32.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\unix\mutex.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\unix\ppc.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\unix\s390.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\unix\solaris.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_dec32	atomic\win32\apr_atomic.c	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_inc32	atomic\os390\atomic.c	/^apr_uint32_t apr_atomic_inc32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_init	atomic\os390\atomic.c	/^apr_status_t apr_atomic_init(apr_pool_t *p)$/;"	f
apr_atomic_read32	atomic\os390\atomic.c	/^apr_uint32_t apr_atomic_read32(volatile apr_uint32_t *mem)$/;"	f
apr_atomic_set32	atomic\netware\apr_atomic.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\os390\atomic.c	/^void apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\unix\builtins.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\unix\ia32.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\unix\mutex.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\unix\ppc.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\unix\s390.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\unix\solaris.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_set32	atomic\win32\apr_atomic.c	/^APR_DECLARE(void) apr_atomic_set32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\netware\apr_atomic.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\os390\atomic.c	/^void apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\unix\builtins.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\unix\ia32.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\unix\mutex.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\unix\ppc.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\unix\s390.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\unix\solaris.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_sub32	atomic\win32\apr_atomic.c	/^APR_DECLARE(void) apr_atomic_sub32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_win32_ptr_fn	atomic\win32\apr_atomic.c	/^typedef WINBASEAPI apr_uint32_t (WINAPI * apr_atomic_win32_ptr_fn)$/;"	t	file:
apr_atomic_win32_ptr_ptr_fn	atomic\win32\apr_atomic.c	/^typedef WINBASEAPI void * (WINAPI * apr_atomic_win32_ptr_ptr_fn)$/;"	t	file:
apr_atomic_win32_ptr_ptr_ptr_fn	atomic\win32\apr_atomic.c	/^typedef WINBASEAPI void * (WINAPI * apr_atomic_win32_ptr_ptr_ptr_fn)$/;"	t	file:
apr_atomic_win32_ptr_val_fn	atomic\win32\apr_atomic.c	/^typedef WINBASEAPI apr_uint32_t (WINAPI * apr_atomic_win32_ptr_val_fn)$/;"	t	file:
apr_atomic_win32_ptr_val_val_fn	atomic\win32\apr_atomic.c	/^typedef WINBASEAPI apr_uint32_t (WINAPI * apr_atomic_win32_ptr_val_val_fn)$/;"	t	file:
apr_atomic_xchg32	atomic\os390\atomic.c	/^apr_uint32_t apr_atomic_xchg32(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f
apr_atomic_xchgptr	atomic\netware\apr_atomic.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\os390\atomic.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem_ptr, void *new_ptr)$/;"	f
apr_atomic_xchgptr	atomic\unix\builtins.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\unix\ia32.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\unix\mutex.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\unix\ppc.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\unix\s390.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\unix\solaris.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_atomic_xchgptr	atomic\win32\apr_atomic.c	/^APR_DECLARE(void*) apr_atomic_xchgptr(volatile void **mem, void *with)$/;"	f
apr_byte_t	include\apr.h	/^typedef  unsigned char     apr_byte_t;$/;"	t
apr_c_is_fnchar	file_io\win32\filesys.c	/^const char apr_c_is_fnchar[256] =$/;"	v
apr_canonical_error	file_io\os2\maperrorcode.c	/^int apr_canonical_error(apr_status_t err)$/;"	f
apr_caret_escape_args	threadproc\win32\proc.c	/^static char *apr_caret_escape_args(apr_pool_t *p, const char *str)$/;"	f	file:
apr_child_errfn_t	include\apr_thread_proc.h	/^typedef void (apr_child_errfn_t)(apr_pool_t *proc, apr_status_t err,$/;"	t
apr_cmdtype_e	include\apr_thread_proc.h	/^} apr_cmdtype_e;$/;"	t	typeref:enum:__anon17
apr_collapse_spaces	strings\apr_cpystrn.c	/^APR_DECLARE(char *) apr_collapse_spaces(char *dest, const char *src)$/;"	f
apr_cpystrn	strings\apr_cpystrn.c	/^APR_DECLARE(char *) apr_cpystrn(char *dst, const char *src, apr_size_t dst_size)$/;"	f
apr_crypto_hash_add_t	include\apr_random.h	/^typedef void apr_crypto_hash_add_t(apr_crypto_hash_t *hash, const void *data,$/;"	t
apr_crypto_hash_finish_t	include\apr_random.h	/^typedef void apr_crypto_hash_finish_t(apr_crypto_hash_t *hash,$/;"	t
apr_crypto_hash_init_t	include\apr_random.h	/^typedef void apr_crypto_hash_init_t(apr_crypto_hash_t *hash);$/;"	t
apr_crypto_hash_t	include\apr_random.h	/^struct apr_crypto_hash_t {$/;"	s
apr_crypto_hash_t	include\apr_random.h	/^typedef struct apr_crypto_hash_t apr_crypto_hash_t;$/;"	t	typeref:struct:apr_crypto_hash_t
apr_crypto_hash_t::add	include\apr_random.h	/^    apr_crypto_hash_add_t *add;$/;"	m	struct:apr_crypto_hash_t
apr_crypto_hash_t::data	include\apr_random.h	/^    void *data;$/;"	m	struct:apr_crypto_hash_t
apr_crypto_hash_t::finish	include\apr_random.h	/^    apr_crypto_hash_finish_t *finish;$/;"	m	struct:apr_crypto_hash_t
apr_crypto_hash_t::init	include\apr_random.h	/^    apr_crypto_hash_init_t *init;$/;"	m	struct:apr_crypto_hash_t
apr_crypto_hash_t::size	include\apr_random.h	/^    apr_size_t size;$/;"	m	struct:apr_crypto_hash_t
apr_crypto_sha256_new	random\unix\sha2_glue.c	/^APR_DECLARE(apr_crypto_hash_t *) apr_crypto_sha256_new(apr_pool_t *p)$/;"	f
apr_ctime	time\unix\timestr.c	/^apr_status_t apr_ctime(char *date_str, apr_time_t t)$/;"	f
apr_cvt	strings\apr_snprintf.c	/^static char *apr_cvt(double arg, int ndigits, int *decpt, int *sign, $/;"	f	file:
apr_datatype_e	include\apr_poll.h	/^} apr_datatype_e ;$/;"	t	typeref:enum:__anon14
apr_day_snames	time\unix\timestr.c	/^APR_DECLARE_DATA const char apr_day_snames[7][4] =$/;"	v
apr_day_snames	time\win32\timestr.c	/^APR_DECLARE_DATA const char apr_day_snames[7][4] =$/;"	v
apr_dbg_rv	include\arch\win32\apr_dbg_win32_handles.h	59;"	d
apr_descriptor	include\apr_poll.h	/^} apr_descriptor;$/;"	t	typeref:union:__anon15
apr_dev_t	include\apr_file_info.h	/^typedef apr_uint32_t              apr_dev_t;$/;"	t
apr_dev_t	include\apr_file_info.h	/^typedef dev_t                     apr_dev_t;$/;"	t
apr_dir_close	file_io\unix\dir.c	/^apr_status_t apr_dir_close(apr_dir_t *thedir)$/;"	f
apr_dir_make	file_io\unix\dir.c	/^apr_status_t apr_dir_make(const char *path, apr_fileperms_t perm, $/;"	f
apr_dir_make_recursive	file_io\os2\dir_make_recurse.c	/^apr_status_t apr_dir_make_recursive(const char *path, apr_fileperms_t perm,$/;"	f
apr_dir_make_recursive	file_io\unix\dir.c	/^apr_status_t apr_dir_make_recursive(const char *path, apr_fileperms_t perm,$/;"	f
apr_dir_open	file_io\unix\dir.c	/^apr_status_t apr_dir_open(apr_dir_t **new, const char *dirname, $/;"	f
apr_dir_read	file_io\unix\dir.c	/^apr_status_t apr_dir_read(apr_finfo_t *finfo, apr_int32_t wanted,$/;"	f
apr_dir_remove	file_io\unix\dir.c	/^apr_status_t apr_dir_remove(const char *path, apr_pool_t *pool)$/;"	f
apr_dir_rewind	file_io\unix\dir.c	/^apr_status_t apr_dir_rewind(apr_dir_t *thedir)$/;"	f
apr_dir_t	include\apr_file_info.h	/^typedef struct apr_dir_t          apr_dir_t;$/;"	t	typeref:struct:apr_dir_t
apr_dir_t	include\arch\netware\apr_arch_file_io.h	/^struct apr_dir_t {$/;"	s
apr_dir_t	include\arch\os2\apr_arch_file_io.h	/^struct apr_dir_t {$/;"	s
apr_dir_t	include\arch\unix\apr_arch_file_io.h	/^struct apr_dir_t {$/;"	s
apr_dir_t	include\arch\win32\apr_arch_file_io.h	/^struct apr_dir_t {$/;"	s
apr_dir_t::__anon26::__anon27::entry	include\arch\win32\apr_arch_file_io.h	/^            WIN32_FIND_DATAW *entry;$/;"	m	struct:apr_dir_t::__anon26::__anon27
apr_dir_t::__anon26::__anon28::entry	include\arch\win32\apr_arch_file_io.h	/^            WIN32_FIND_DATAA *entry;$/;"	m	struct:apr_dir_t::__anon26::__anon28
apr_dir_t::__anon26::n	include\arch\win32\apr_arch_file_io.h	/^        } n;$/;"	m	union:apr_dir_t::__anon26	typeref:struct:apr_dir_t::__anon26::__anon28
apr_dir_t::__anon26::w	include\arch\win32\apr_arch_file_io.h	/^        } w;$/;"	m	union:apr_dir_t::__anon26	typeref:struct:apr_dir_t::__anon26::__anon27
apr_dir_t::bof	include\arch\win32\apr_arch_file_io.h	/^    int bof;$/;"	m	struct:apr_dir_t
apr_dir_t::dirhand	include\arch\win32\apr_arch_file_io.h	/^    HANDLE dirhand;$/;"	m	struct:apr_dir_t
apr_dir_t::dirname	include\arch\netware\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
apr_dir_t::dirname	include\arch\os2\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
apr_dir_t::dirname	include\arch\unix\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
apr_dir_t::dirname	include\arch\win32\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
apr_dir_t::dirstruct	include\arch\netware\apr_arch_file_io.h	/^    DIR *dirstruct;$/;"	m	struct:apr_dir_t
apr_dir_t::dirstruct	include\arch\unix\apr_arch_file_io.h	/^    DIR *dirstruct;$/;"	m	struct:apr_dir_t
apr_dir_t::entry	include\arch\netware\apr_arch_file_io.h	/^    struct dirent *entry;$/;"	m	struct:apr_dir_t	typeref:struct:apr_dir_t::dirent
apr_dir_t::entry	include\arch\os2\apr_arch_file_io.h	/^    FILEFINDBUF3 entry;$/;"	m	struct:apr_dir_t
apr_dir_t::entry	include\arch\unix\apr_arch_file_io.h	/^    struct dirent *entry;$/;"	m	struct:apr_dir_t	typeref:struct:apr_dir_t::dirent
apr_dir_t::entry	include\arch\unix\apr_arch_file_io.h	/^    struct dirent64 *entry;$/;"	m	struct:apr_dir_t	typeref:struct:apr_dir_t::dirent64
apr_dir_t::handle	include\arch\os2\apr_arch_file_io.h	/^    ULONG handle;$/;"	m	struct:apr_dir_t
apr_dir_t::name	include\arch\win32\apr_arch_file_io.h	/^    char *name;$/;"	m	struct:apr_dir_t
apr_dir_t::pool	include\arch\netware\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
apr_dir_t::pool	include\arch\os2\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
apr_dir_t::pool	include\arch\unix\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
apr_dir_t::pool	include\arch\win32\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
apr_dir_t::rootlen	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t rootlen;$/;"	m	struct:apr_dir_t
apr_dir_t::validentry	include\arch\os2\apr_arch_file_io.h	/^    int validentry;$/;"	m	struct:apr_dir_t
apr_dlltoken_e	include\arch\win32\apr_arch_misc.h	/^} apr_dlltoken_e;$/;"	t	typeref:enum:__anon30
apr_dso_error	dso\aix\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *dso, char *buffer, apr_size_t buflen)$/;"	f
apr_dso_error	dso\beos\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *dso, char *buffer, apr_size_t buflen)$/;"	f
apr_dso_error	dso\netware\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *dso, char *buffer, $/;"	f
apr_dso_error	dso\os2\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *dso, char *buffer, apr_size_t buflen)$/;"	f
apr_dso_error	dso\os390\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *handle, char *buffer, $/;"	f
apr_dso_error	dso\unix\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *dso, char *buffer, $/;"	f
apr_dso_error	dso\win32\dso.c	/^APR_DECLARE(const char *) apr_dso_error(apr_dso_handle_t *dso, char *buf, apr_size_t bufsize)$/;"	f
apr_dso_handle_sym_t	include\apr_dso.h	/^typedef void *                        apr_dso_handle_sym_t;$/;"	t
apr_dso_handle_t	include\apr_dso.h	/^typedef struct apr_dso_handle_t       apr_dso_handle_t;$/;"	t	typeref:struct:apr_dso_handle_t
apr_dso_handle_t	include\arch\aix\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t	include\arch\beos\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t	include\arch\netware\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t	include\arch\os2\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t	include\arch\os390\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t	include\arch\unix\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t	include\arch\win32\apr_arch_dso.h	/^struct apr_dso_handle_t {$/;"	s
apr_dso_handle_t::cont	include\arch\os2\apr_arch_dso.h	/^    apr_pool_t  *cont;       \/* Context for returning error strings *\/$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::cont	include\arch\win32\apr_arch_dso.h	/^    apr_pool_t  *cont;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::errormsg	include\arch\aix\apr_arch_dso.h	/^    const char *errormsg;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::errormsg	include\arch\beos\apr_arch_dso.h	/^    const char   *errormsg;  \/* if the load fails, we have an error$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::errormsg	include\arch\netware\apr_arch_dso.h	/^    const char  *errormsg;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::errormsg	include\arch\unix\apr_arch_dso.h	/^    const char    *errormsg;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::failed_module	include\arch\os2\apr_arch_dso.h	/^    char          *failed_module;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::failing_errno	include\arch\os390\apr_arch_dso.h	/^    int failing_errno;      \/* Don't save the buffer returned by$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\aix\apr_arch_dso.h	/^    void          *handle;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\beos\apr_arch_dso.h	/^    image_id      handle;    \/* Handle to the DSO loaded *\/$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\netware\apr_arch_dso.h	/^    void        *handle;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\os2\apr_arch_dso.h	/^    HMODULE       handle;     \/* Handle to the DSO loaded            *\/$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\os390\apr_arch_dso.h	/^    dllhandle  *handle;     \/* Handle to the DSO loaded            *\/$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\unix\apr_arch_dso.h	/^    void          *handle;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::handle	include\arch\win32\apr_arch_dso.h	/^    void          *handle;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::load_error	include\arch\os2\apr_arch_dso.h	/^    apr_status_t   load_error;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::load_error	include\arch\win32\apr_arch_dso.h	/^    apr_status_t   load_error;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::path	include\arch\netware\apr_arch_dso.h	/^    char        *path;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::pool	include\arch\aix\apr_arch_dso.h	/^    apr_pool_t  *pool;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::pool	include\arch\beos\apr_arch_dso.h	/^    apr_pool_t   *pool;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::pool	include\arch\netware\apr_arch_dso.h	/^    apr_pool_t  *pool;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::pool	include\arch\os390\apr_arch_dso.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::pool	include\arch\unix\apr_arch_dso.h	/^    apr_pool_t    *pool;$/;"	m	struct:apr_dso_handle_t
apr_dso_handle_t::symbols	include\arch\netware\apr_arch_dso.h	/^    sym_list    *symbols;$/;"	m	struct:apr_dso_handle_t
apr_ecvt	strings\apr_snprintf.c	/^static char *apr_ecvt(double arg, int ndigits, int *decpt, int *sign, char *buf)$/;"	f	file:
apr_error_string	misc\unix\errorcodes.c	/^static char *apr_error_string(apr_status_t statcode)$/;"	f	file:
apr_exit_why_e	include\apr_thread_proc.h	/^} apr_exit_why_e;$/;"	t	typeref:enum:__anon19
apr_fcvt	strings\apr_snprintf.c	/^static char *apr_fcvt(double arg, int ndigits, int *decpt, int *sign, char *buf)$/;"	f	file:
apr_file_check_read	file_io\os2\readwrite.c	/^apr_status_t apr_file_check_read(apr_file_t *fd)$/;"	f
apr_file_cleanup	file_io\os2\open.c	/^apr_status_t apr_file_cleanup(void *thefile)$/;"	f
apr_file_flush_locked	file_io\unix\readwrite.c	/^apr_status_t apr_file_flush_locked(apr_file_t *thefile)$/;"	f
apr_file_info_get_locked	file_io\netware\filestat.c	/^apr_status_t apr_file_info_get_locked(apr_finfo_t *finfo, apr_int32_t wanted,$/;"	f
apr_file_info_get_locked	file_io\unix\filestat.c	/^apr_status_t apr_file_info_get_locked(apr_finfo_t *finfo, apr_int32_t wanted,$/;"	f
apr_file_lock	file_io\netware\flock.c	/^apr_status_t apr_file_lock(apr_file_t *thefile, int type)$/;"	f
apr_file_printf	file_io\os2\readwrite.c	/^APR_DECLARE_NONSTD(int) apr_file_printf(apr_file_t *fptr, $/;"	f
apr_file_printf	file_io\unix\readwrite.c	/^APR_DECLARE_NONSTD(int) apr_file_printf(apr_file_t *fptr, $/;"	f
apr_file_printf	file_io\win32\readwrite.c	/^APR_DECLARE_NONSTD(int) apr_file_printf(apr_file_t *fptr, $/;"	f
apr_file_printf_data	file_io\unix\readwrite.c	/^struct apr_file_printf_data {$/;"	s	file:
apr_file_printf_data	file_io\win32\readwrite.c	/^struct apr_file_printf_data {$/;"	s	file:
apr_file_printf_data::buf	file_io\unix\readwrite.c	/^    char *buf;$/;"	m	struct:apr_file_printf_data	file:
apr_file_printf_data::buf	file_io\win32\readwrite.c	/^    char *buf;$/;"	m	struct:apr_file_printf_data	file:
apr_file_printf_data::fptr	file_io\unix\readwrite.c	/^    apr_file_t *fptr;$/;"	m	struct:apr_file_printf_data	file:
apr_file_printf_data::fptr	file_io\win32\readwrite.c	/^    apr_file_t *fptr;$/;"	m	struct:apr_file_printf_data	file:
apr_file_printf_data::vbuff	file_io\unix\readwrite.c	/^    apr_vformatter_buff_t vbuff;$/;"	m	struct:apr_file_printf_data	file:
apr_file_printf_data::vbuff	file_io\win32\readwrite.c	/^    apr_vformatter_buff_t vbuff;$/;"	m	struct:apr_file_printf_data	file:
apr_file_socket_pipe_close	file_io\win32\pipe.c	/^apr_status_t apr_file_socket_pipe_close(apr_file_t *file)$/;"	f
apr_file_socket_pipe_close	poll\unix\pollset.c	/^static apr_status_t apr_file_socket_pipe_close(apr_file_t *file)$/;"	f	file:
apr_file_socket_pipe_create	file_io\win32\pipe.c	/^apr_status_t apr_file_socket_pipe_create(apr_file_t **in,$/;"	f
apr_file_t	include\apr_file_io.h	/^typedef struct apr_file_t         apr_file_t;$/;"	t	typeref:struct:apr_file_t
apr_file_t	include\arch\netware\apr_arch_file_io.h	/^struct apr_file_t {$/;"	s
apr_file_t	include\arch\os2\apr_arch_file_io.h	/^struct apr_file_t {$/;"	s
apr_file_t	include\arch\unix\apr_arch_file_io.h	/^struct apr_file_t {$/;"	s
apr_file_t	include\arch\win32\apr_arch_file_io.h	/^struct apr_file_t {$/;"	s
apr_file_t::BLK_OFF	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon22
apr_file_t::BLK_OFF	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon23
apr_file_t::BLK_OFF	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon24
apr_file_t::BLK_ON	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon22
apr_file_t::BLK_ON	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon23
apr_file_t::BLK_ON	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon24
apr_file_t::BLK_UNKNOWN	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon22
apr_file_t::BLK_UNKNOWN	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon23
apr_file_t::BLK_UNKNOWN	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	e	enum:apr_file_t::__anon24
apr_file_t::append	include\arch\win32\apr_arch_file_io.h	/^    int append; $/;"	m	struct:apr_file_t
apr_file_t::blocking	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	m	struct:apr_file_t	typeref:enum:apr_file_t::__anon22
apr_file_t::blocking	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	m	struct:apr_file_t	typeref:enum:apr_file_t::__anon23
apr_file_t::blocking	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	m	struct:apr_file_t	typeref:enum:apr_file_t::__anon24
apr_file_t::buffer	include\arch\netware\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
apr_file_t::buffer	include\arch\os2\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
apr_file_t::buffer	include\arch\unix\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
apr_file_t::buffer	include\arch\win32\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
apr_file_t::buffered	include\arch\netware\apr_arch_file_io.h	/^    int buffered;$/;"	m	struct:apr_file_t
apr_file_t::buffered	include\arch\os2\apr_arch_file_io.h	/^    int buffered;$/;"	m	struct:apr_file_t
apr_file_t::buffered	include\arch\unix\apr_arch_file_io.h	/^    int buffered;$/;"	m	struct:apr_file_t
apr_file_t::buffered	include\arch\win32\apr_arch_file_io.h	/^    BOOLEAN buffered;          \/\/ Use buffered I\/O?$/;"	m	struct:apr_file_t
apr_file_t::bufpos	include\arch\netware\apr_arch_file_io.h	/^    apr_size_t bufpos;    \/* Read\/Write position in buffer *\/$/;"	m	struct:apr_file_t
apr_file_t::bufpos	include\arch\os2\apr_arch_file_io.h	/^    apr_size_t bufpos;         \/* Read\/Write position in buffer             *\/$/;"	m	struct:apr_file_t
apr_file_t::bufpos	include\arch\unix\apr_arch_file_io.h	/^    apr_size_t bufpos;        \/* Read\/Write position in buffer *\/$/;"	m	struct:apr_file_t
apr_file_t::bufpos	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t bufpos;         \/\/ Read\/Write position in buffer$/;"	m	struct:apr_file_t
apr_file_t::bufsize	include\arch\netware\apr_arch_file_io.h	/^    apr_size_t bufsize;   \/* The buffer size *\/$/;"	m	struct:apr_file_t
apr_file_t::bufsize	include\arch\os2\apr_arch_file_io.h	/^    apr_size_t bufsize;        \/* Read\/Write position in buffer             *\/$/;"	m	struct:apr_file_t
apr_file_t::bufsize	include\arch\unix\apr_arch_file_io.h	/^    apr_size_t bufsize;       \/* The size of the buffer *\/$/;"	m	struct:apr_file_t
apr_file_t::bufsize	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t bufsize;        \/\/ The size of the buffer$/;"	m	struct:apr_file_t
apr_file_t::dataRead	include\arch\netware\apr_arch_file_io.h	/^    apr_off_t dataRead;   \/* amount of valid data read into buffer *\/$/;"	m	struct:apr_file_t
apr_file_t::dataRead	include\arch\os2\apr_arch_file_io.h	/^    unsigned long dataRead;    \/* amount of valid data read into buffer     *\/$/;"	m	struct:apr_file_t
apr_file_t::dataRead	include\arch\unix\apr_arch_file_io.h	/^    unsigned long dataRead;   \/* amount of valid data read into buffer *\/$/;"	m	struct:apr_file_t
apr_file_t::dataRead	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t dataRead;       \/\/ amount of valid data read into buffer$/;"	m	struct:apr_file_t
apr_file_t::direction	include\arch\netware\apr_arch_file_io.h	/^    int direction;            \/* buffer being used for 0 = read, 1 = write *\/$/;"	m	struct:apr_file_t
apr_file_t::direction	include\arch\os2\apr_arch_file_io.h	/^    int direction;             \/* buffer being used for 0 = read, 1 = write *\/$/;"	m	struct:apr_file_t
apr_file_t::direction	include\arch\unix\apr_arch_file_io.h	/^    int direction;            \/* buffer being used for 0 = read, 1 = write *\/$/;"	m	struct:apr_file_t
apr_file_t::direction	include\arch\win32\apr_arch_file_io.h	/^    int direction;             \/\/ buffer being used for 0 = read, 1 = write$/;"	m	struct:apr_file_t
apr_file_t::dwFileAttributes	include\arch\win32\apr_arch_file_io.h	/^    DWORD dwFileAttributes;$/;"	m	struct:apr_file_t
apr_file_t::eof_hit	include\arch\netware\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
apr_file_t::eof_hit	include\arch\os2\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
apr_file_t::eof_hit	include\arch\unix\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
apr_file_t::eof_hit	include\arch\win32\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
apr_file_t::filePtr	include\arch\netware\apr_arch_file_io.h	/^    apr_off_t filePtr;    \/* position in file of handle *\/$/;"	m	struct:apr_file_t
apr_file_t::filePtr	include\arch\os2\apr_arch_file_io.h	/^    unsigned long filePtr;     \/* position in file of handle                *\/$/;"	m	struct:apr_file_t
apr_file_t::filePtr	include\arch\unix\apr_arch_file_io.h	/^    apr_off_t filePtr;        \/* position in file of handle *\/$/;"	m	struct:apr_file_t
apr_file_t::filePtr	include\arch\win32\apr_arch_file_io.h	/^    apr_off_t filePtr;         \/\/ position in file of handle$/;"	m	struct:apr_file_t
apr_file_t::filedes	include\arch\netware\apr_arch_file_io.h	/^    int filedes;$/;"	m	struct:apr_file_t
apr_file_t::filedes	include\arch\os2\apr_arch_file_io.h	/^    HFILE filedes;$/;"	m	struct:apr_file_t
apr_file_t::filedes	include\arch\unix\apr_arch_file_io.h	/^    int filedes;$/;"	m	struct:apr_file_t
apr_file_t::filehand	include\arch\win32\apr_arch_file_io.h	/^    HANDLE filehand;$/;"	m	struct:apr_file_t
apr_file_t::finfo	include\arch\win32\apr_arch_file_io.h	/^    apr_finfo_t *finfo;$/;"	m	struct:apr_file_t
apr_file_t::flags	include\arch\netware\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
apr_file_t::flags	include\arch\os2\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
apr_file_t::flags	include\arch\unix\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
apr_file_t::flags	include\arch\win32\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
apr_file_t::fname	include\arch\netware\apr_arch_file_io.h	/^    char *fname;$/;"	m	struct:apr_file_t
apr_file_t::fname	include\arch\os2\apr_arch_file_io.h	/^    char * fname;$/;"	m	struct:apr_file_t
apr_file_t::fname	include\arch\unix\apr_arch_file_io.h	/^    char *fname;$/;"	m	struct:apr_file_t
apr_file_t::fname	include\arch\win32\apr_arch_file_io.h	/^    char *fname;$/;"	m	struct:apr_file_t
apr_file_t::is_pipe	include\arch\netware\apr_arch_file_io.h	/^    int is_pipe;$/;"	m	struct:apr_file_t
apr_file_t::is_pipe	include\arch\unix\apr_arch_file_io.h	/^    int is_pipe;$/;"	m	struct:apr_file_t
apr_file_t::isopen	include\arch\os2\apr_arch_file_io.h	/^    int isopen;$/;"	m	struct:apr_file_t
apr_file_t::mutex	include\arch\os2\apr_arch_file_io.h	/^    apr_thread_mutex_t *mutex; \/* mutex semaphore, must be owned to access$/;"	m	struct:apr_file_t
apr_file_t::mutex	include\arch\win32\apr_arch_file_io.h	/^    apr_thread_mutex_t *mutex; \/\/ mutex semaphore, must be owned to access the above fields$/;"	m	struct:apr_file_t
apr_file_t::pOverlapped	include\arch\win32\apr_arch_file_io.h	/^    OVERLAPPED *pOverlapped;$/;"	m	struct:apr_file_t
apr_file_t::pipe	include\arch\os2\apr_arch_file_io.h	/^    int pipe;$/;"	m	struct:apr_file_t
apr_file_t::pipe	include\arch\win32\apr_arch_file_io.h	/^    BOOLEAN pipe;              \/* Is this a pipe of a file? *\/$/;"	m	struct:apr_file_t
apr_file_t::pipeSem	include\arch\os2\apr_arch_file_io.h	/^    HEV pipeSem;$/;"	m	struct:apr_file_t
apr_file_t::pollset	include\arch\netware\apr_arch_file_io.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_file_t
apr_file_t::pollset	include\arch\unix\apr_arch_file_io.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_file_t
apr_file_t::pollset	include\arch\win32\apr_arch_file_io.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_file_t
apr_file_t::pool	include\arch\netware\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
apr_file_t::pool	include\arch\os2\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
apr_file_t::pool	include\arch\unix\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
apr_file_t::pool	include\arch\win32\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
apr_file_t::thlock	include\arch\netware\apr_arch_file_io.h	/^    struct apr_thread_mutex_t *thlock;$/;"	m	struct:apr_file_t	typeref:struct:apr_file_t::apr_thread_mutex_t
apr_file_t::thlock	include\arch\unix\apr_arch_file_io.h	/^    struct apr_thread_mutex_t *thlock;$/;"	m	struct:apr_file_t	typeref:struct:apr_file_t::apr_thread_mutex_t
apr_file_t::timeout	include\arch\netware\apr_arch_file_io.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_file_t
apr_file_t::timeout	include\arch\os2\apr_arch_file_io.h	/^    int timeout;$/;"	m	struct:apr_file_t
apr_file_t::timeout	include\arch\unix\apr_arch_file_io.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_file_t
apr_file_t::timeout	include\arch\win32\apr_arch_file_io.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_file_t
apr_file_t::ungetchar	include\arch\netware\apr_arch_file_io.h	/^    int ungetchar;    \/* Last char provided by an unget op. (-1 = no char)*\/$/;"	m	struct:apr_file_t
apr_file_t::ungetchar	include\arch\unix\apr_arch_file_io.h	/^    int ungetchar;    \/* Last char provided by an unget op. (-1 = no char)*\/$/;"	m	struct:apr_file_t
apr_file_t::ungetchar	include\arch\win32\apr_arch_file_io.h	/^    int ungetchar;             \/\/ Last char provided by an unget op. (-1 = no char)$/;"	m	struct:apr_file_t
apr_file_transfer_contents	file_io\unix\copy.c	/^static apr_status_t apr_file_transfer_contents(const char *from_path,$/;"	f	file:
apr_file_trunc	file_io\unix\seek.c	/^apr_status_t apr_file_trunc(apr_file_t *fp, apr_off_t offset)$/;"	f
apr_file_unlock	file_io\netware\flock.c	/^apr_status_t apr_file_unlock(apr_file_t *thefile)$/;"	f
apr_fileattrs_t	include\apr_file_io.h	/^typedef apr_uint32_t apr_fileattrs_t;$/;"	t
apr_filepath_list_merge_impl	file_io\unix\filepath_util.c	/^apr_status_t apr_filepath_list_merge_impl(char **liststr,$/;"	f
apr_filepath_list_split_impl	file_io\unix\filepath_util.c	/^apr_status_t apr_filepath_list_split_impl(apr_array_header_t **pathelts,$/;"	f
apr_filepath_name_get	strings\apr_cpystrn.c	/^APR_DECLARE(const char *) apr_filepath_name_get(const char *pathname)$/;"	f
apr_fileperms_t	include\apr_file_info.h	/^typedef apr_int32_t               apr_fileperms_t;$/;"	t
apr_filetype_e	include\apr_file_info.h	/^} apr_filetype_e; $/;"	t	typeref:enum:__anon9
apr_finfo_t	include\apr_file_info.h	/^struct apr_finfo_t {$/;"	s
apr_finfo_t	include\apr_file_info.h	/^typedef struct apr_finfo_t        apr_finfo_t;$/;"	t	typeref:struct:apr_finfo_t
apr_finfo_t::atime	include\apr_file_info.h	/^    apr_time_t atime;$/;"	m	struct:apr_finfo_t
apr_finfo_t::csize	include\apr_file_info.h	/^    apr_off_t csize;$/;"	m	struct:apr_finfo_t
apr_finfo_t::ctime	include\apr_file_info.h	/^    apr_time_t ctime;$/;"	m	struct:apr_finfo_t
apr_finfo_t::device	include\apr_file_info.h	/^    apr_dev_t device;$/;"	m	struct:apr_finfo_t
apr_finfo_t::filehand	include\apr_file_info.h	/^    struct apr_file_t *filehand;$/;"	m	struct:apr_finfo_t	typeref:struct:apr_finfo_t::apr_file_t
apr_finfo_t::filetype	include\apr_file_info.h	/^    apr_filetype_e filetype;$/;"	m	struct:apr_finfo_t
apr_finfo_t::fname	include\apr_file_info.h	/^    const char *fname;$/;"	m	struct:apr_finfo_t
apr_finfo_t::group	include\apr_file_info.h	/^    apr_gid_t group;$/;"	m	struct:apr_finfo_t
apr_finfo_t::inode	include\apr_file_info.h	/^    apr_ino_t inode;$/;"	m	struct:apr_finfo_t
apr_finfo_t::mtime	include\apr_file_info.h	/^    apr_time_t mtime;$/;"	m	struct:apr_finfo_t
apr_finfo_t::name	include\apr_file_info.h	/^    const char *name;$/;"	m	struct:apr_finfo_t
apr_finfo_t::nlink	include\apr_file_info.h	/^    apr_int32_t nlink;$/;"	m	struct:apr_finfo_t
apr_finfo_t::pool	include\apr_file_info.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_finfo_t
apr_finfo_t::protection	include\apr_file_info.h	/^    apr_fileperms_t protection;$/;"	m	struct:apr_finfo_t
apr_finfo_t::size	include\apr_file_info.h	/^    apr_off_t size;$/;"	m	struct:apr_finfo_t
apr_finfo_t::user	include\apr_file_info.h	/^    apr_uid_t user;$/;"	m	struct:apr_finfo_t
apr_finfo_t::valid	include\apr_file_info.h	/^    apr_int32_t valid;$/;"	m	struct:apr_finfo_t
apr_fnmatch	strings\apr_fnmatch.c	/^APR_DECLARE(int) apr_fnmatch(const char *pattern, const char *string, int flags)$/;"	f
apr_fnmatch_test	strings\apr_fnmatch.c	/^APR_DECLARE(int) apr_fnmatch_test(const char *pattern)$/;"	f
apr_gcvt	strings\apr_snprintf.c	/^static char *apr_gcvt(double number, int ndigit, char *buf, boolean_e altform)$/;"	f	file:
apr_get_netos_error	include\apr_errno.h	1018;"	d
apr_get_netos_error	include\apr_errno.h	1133;"	d
apr_get_netos_error	include\apr_errno.h	1198;"	d
apr_get_netos_error	include\apr_errno.h	855;"	d
apr_get_os_error	include\apr_errno.h	1013;"	d
apr_get_os_error	include\apr_errno.h	1129;"	d
apr_get_os_error	include\apr_errno.h	1193;"	d
apr_get_oslevel	misc\win32\misc.c	/^apr_status_t apr_get_oslevel(apr_oslevel_e *level)$/;"	f
apr_gethostname	network_io\unix\sockopt.c	/^apr_status_t apr_gethostname(char *buf, apr_int32_t len, apr_pool_t *cont)$/;"	f
apr_getopt_err_fn_t	include\apr_getopt.h	/^typedef void (apr_getopt_err_fn_t)(void *arg, const char *err, ...);$/;"	t
apr_getopt_option_t	include\apr_getopt.h	/^struct apr_getopt_option_t {$/;"	s
apr_getopt_option_t	include\apr_getopt.h	/^typedef struct apr_getopt_option_t apr_getopt_option_t;$/;"	t	typeref:struct:apr_getopt_option_t
apr_getopt_option_t::description	include\apr_getopt.h	/^    const char *description;$/;"	m	struct:apr_getopt_option_t
apr_getopt_option_t::has_arg	include\apr_getopt.h	/^    int has_arg;$/;"	m	struct:apr_getopt_option_t
apr_getopt_option_t::name	include\apr_getopt.h	/^    const char *name;$/;"	m	struct:apr_getopt_option_t
apr_getopt_option_t::optch	include\apr_getopt.h	/^    int optch;$/;"	m	struct:apr_getopt_option_t
apr_getopt_t	include\apr_getopt.h	/^struct apr_getopt_t {$/;"	s
apr_getopt_t	include\apr_getopt.h	/^typedef struct apr_getopt_t apr_getopt_t;$/;"	t	typeref:struct:apr_getopt_t
apr_getopt_t::argc	include\apr_getopt.h	/^    int argc;$/;"	m	struct:apr_getopt_t
apr_getopt_t::argv	include\apr_getopt.h	/^    const char **argv;$/;"	m	struct:apr_getopt_t
apr_getopt_t::cont	include\apr_getopt.h	/^    apr_pool_t *cont;$/;"	m	struct:apr_getopt_t
apr_getopt_t::errarg	include\apr_getopt.h	/^    void *errarg;$/;"	m	struct:apr_getopt_t
apr_getopt_t::errfn	include\apr_getopt.h	/^    apr_getopt_err_fn_t *errfn;$/;"	m	struct:apr_getopt_t
apr_getopt_t::ind	include\apr_getopt.h	/^    int ind;$/;"	m	struct:apr_getopt_t
apr_getopt_t::interleave	include\apr_getopt.h	/^    int interleave;$/;"	m	struct:apr_getopt_t
apr_getopt_t::opt	include\apr_getopt.h	/^    int opt;$/;"	m	struct:apr_getopt_t
apr_getopt_t::place	include\apr_getopt.h	/^    char const* place;$/;"	m	struct:apr_getopt_t
apr_getopt_t::reset	include\apr_getopt.h	/^    int reset;$/;"	m	struct:apr_getopt_t
apr_getopt_t::skip_end	include\apr_getopt.h	/^    int skip_end;$/;"	m	struct:apr_getopt_t
apr_getopt_t::skip_start	include\apr_getopt.h	/^    int skip_start;$/;"	m	struct:apr_getopt_t
apr_gid_compare	include\apr_user.h	147;"	d
apr_gid_t	include\apr_user.h	/^typedef PSID                      apr_gid_t;$/;"	t
apr_gid_t	include\apr_user.h	/^typedef gid_t                     apr_gid_t;$/;"	t
apr_global_mutex_child_init	include\apr_global_mutex.h	152;"	d
apr_global_mutex_create	include\apr_global_mutex.h	151;"	d
apr_global_mutex_destroy	include\apr_global_mutex.h	156;"	d
apr_global_mutex_lock	include\apr_global_mutex.h	153;"	d
apr_global_mutex_lockfile	include\apr_global_mutex.h	157;"	d
apr_global_mutex_lockfile	locks\unix\global_mutex.c	/^APR_DECLARE(const char *) apr_global_mutex_lockfile(apr_global_mutex_t *mutex)$/;"	f
apr_global_mutex_name	include\apr_global_mutex.h	158;"	d
apr_global_mutex_name	locks\unix\global_mutex.c	/^APR_DECLARE(const char *) apr_global_mutex_name(apr_global_mutex_t *mutex)$/;"	f
apr_global_mutex_pool_get	include\apr_global_mutex.h	159;"	d
apr_global_mutex_t	include\apr_global_mutex.h	/^typedef struct apr_global_mutex_t apr_global_mutex_t;$/;"	t	typeref:struct:apr_global_mutex_t
apr_global_mutex_t	include\apr_global_mutex.h	150;"	d
apr_global_mutex_t	include\arch\netware\apr_arch_global_mutex.h	/^struct apr_global_mutex_t {$/;"	s
apr_global_mutex_t	include\arch\unix\apr_arch_global_mutex.h	/^struct apr_global_mutex_t {$/;"	s
apr_global_mutex_t::mutex	include\arch\netware\apr_arch_global_mutex.h	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:apr_global_mutex_t
apr_global_mutex_t::pool	include\arch\netware\apr_arch_global_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_global_mutex_t
apr_global_mutex_t::pool	include\arch\unix\apr_arch_global_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_global_mutex_t
apr_global_mutex_t::proc_mutex	include\arch\unix\apr_arch_global_mutex.h	/^    apr_proc_mutex_t *proc_mutex;$/;"	m	struct:apr_global_mutex_t
apr_global_mutex_t::thread_mutex	include\arch\unix\apr_arch_global_mutex.h	/^    apr_thread_mutex_t *thread_mutex;$/;"	m	struct:apr_global_mutex_t
apr_global_mutex_trylock	include\apr_global_mutex.h	154;"	d
apr_global_mutex_unlock	include\apr_global_mutex.h	155;"	d
apr_hash_clear	tables\apr_hash.c	/^APR_DECLARE(void) apr_hash_clear(apr_hash_t *ht)$/;"	f
apr_hash_copy	tables\apr_hash.c	/^APR_DECLARE(apr_hash_t *) apr_hash_copy(apr_pool_t *pool,$/;"	f
apr_hash_count	tables\apr_hash.c	/^APR_DECLARE(unsigned int) apr_hash_count(apr_hash_t *ht)$/;"	f
apr_hash_do	tables\apr_hash.c	/^APR_DECLARE(int) apr_hash_do(apr_hash_do_callback_fn_t *comp,$/;"	f
apr_hash_do_callback_fn_t	include\apr_hash.h	/^typedef int (apr_hash_do_callback_fn_t)(void *rec, const void *key,$/;"	t
apr_hash_entry_t	tables\apr_hash.c	/^struct apr_hash_entry_t {$/;"	s	file:
apr_hash_entry_t	tables\apr_hash.c	/^typedef struct apr_hash_entry_t apr_hash_entry_t;$/;"	t	typeref:struct:apr_hash_entry_t	file:
apr_hash_entry_t::hash	tables\apr_hash.c	/^    unsigned int      hash;$/;"	m	struct:apr_hash_entry_t	file:
apr_hash_entry_t::key	tables\apr_hash.c	/^    const void       *key;$/;"	m	struct:apr_hash_entry_t	file:
apr_hash_entry_t::klen	tables\apr_hash.c	/^    apr_ssize_t       klen;$/;"	m	struct:apr_hash_entry_t	file:
apr_hash_entry_t::next	tables\apr_hash.c	/^    apr_hash_entry_t *next;$/;"	m	struct:apr_hash_entry_t	file:
apr_hash_entry_t::val	tables\apr_hash.c	/^    const void       *val;$/;"	m	struct:apr_hash_entry_t	file:
apr_hash_first	tables\apr_hash.c	/^APR_DECLARE(apr_hash_index_t *) apr_hash_first(apr_pool_t *p, apr_hash_t *ht)$/;"	f
apr_hash_get	tables\apr_hash.c	/^APR_DECLARE(void *) apr_hash_get(apr_hash_t *ht,$/;"	f
apr_hash_index_t	include\apr_hash.h	/^typedef struct apr_hash_index_t apr_hash_index_t;$/;"	t	typeref:struct:apr_hash_index_t
apr_hash_index_t	tables\apr_hash.c	/^struct apr_hash_index_t {$/;"	s	file:
apr_hash_index_t::ht	tables\apr_hash.c	/^    apr_hash_t         *ht;$/;"	m	struct:apr_hash_index_t	file:
apr_hash_index_t::index	tables\apr_hash.c	/^    unsigned int        index;$/;"	m	struct:apr_hash_index_t	file:
apr_hash_index_t::next	tables\apr_hash.c	/^    apr_hash_entry_t   *this, *next;$/;"	m	struct:apr_hash_index_t	file:
apr_hash_index_t::this	tables\apr_hash.c	/^    apr_hash_entry_t   *this, *next;$/;"	m	struct:apr_hash_index_t	file:
apr_hash_make	tables\apr_hash.c	/^APR_DECLARE(apr_hash_t *) apr_hash_make(apr_pool_t *pool)$/;"	f
apr_hash_make_custom	tables\apr_hash.c	/^APR_DECLARE(apr_hash_t *) apr_hash_make_custom(apr_pool_t *pool,$/;"	f
apr_hash_merge	tables\apr_hash.c	/^APR_DECLARE(apr_hash_t *) apr_hash_merge(apr_pool_t *p,$/;"	f
apr_hash_next	tables\apr_hash.c	/^APR_DECLARE(apr_hash_index_t *) apr_hash_next(apr_hash_index_t *hi)$/;"	f
apr_hash_overlay	tables\apr_hash.c	/^APR_DECLARE(apr_hash_t*) apr_hash_overlay(apr_pool_t *p,$/;"	f
apr_hash_set	tables\apr_hash.c	/^APR_DECLARE(void) apr_hash_set(apr_hash_t *ht,$/;"	f
apr_hash_t	include\apr_hash.h	/^typedef struct apr_hash_t apr_hash_t;$/;"	t	typeref:struct:apr_hash_t
apr_hash_t	tables\apr_hash.c	/^struct apr_hash_t {$/;"	s	file:
apr_hash_t::array	tables\apr_hash.c	/^    apr_hash_entry_t   **array;$/;"	m	struct:apr_hash_t	file:
apr_hash_t::count	tables\apr_hash.c	/^    unsigned int         count, max;$/;"	m	struct:apr_hash_t	file:
apr_hash_t::free	tables\apr_hash.c	/^    apr_hash_entry_t    *free;  \/* List of recycled entries *\/$/;"	m	struct:apr_hash_t	file:
apr_hash_t::hash_func	tables\apr_hash.c	/^    apr_hashfunc_t       hash_func;$/;"	m	struct:apr_hash_t	file:
apr_hash_t::iterator	tables\apr_hash.c	/^    apr_hash_index_t     iterator;  \/* For apr_hash_first(NULL, ...) *\/$/;"	m	struct:apr_hash_t	file:
apr_hash_t::max	tables\apr_hash.c	/^    unsigned int         count, max;$/;"	m	struct:apr_hash_t	file:
apr_hash_t::pool	tables\apr_hash.c	/^    apr_pool_t          *pool;$/;"	m	struct:apr_hash_t	file:
apr_hash_this	tables\apr_hash.c	/^APR_DECLARE(void) apr_hash_this(apr_hash_index_t *hi,$/;"	f
apr_hashfunc_default	tables\apr_hash.c	/^APR_DECLARE_NONSTD(unsigned int) apr_hashfunc_default(const char *char_key,$/;"	f
apr_hashfunc_t	include\apr_hash.h	/^typedef unsigned int (*apr_hashfunc_t)(const char *key, apr_ssize_t *klen);$/;"	t
apr_hdtr_t	include\apr_network_io.h	/^struct apr_hdtr_t {$/;"	s
apr_hdtr_t	include\apr_network_io.h	/^typedef struct apr_hdtr_t       apr_hdtr_t;$/;"	t	typeref:struct:apr_hdtr_t
apr_hdtr_t::headers	include\apr_network_io.h	/^    struct iovec* headers;$/;"	m	struct:apr_hdtr_t	typeref:struct:apr_hdtr_t::iovec
apr_hdtr_t::numheaders	include\apr_network_io.h	/^    int numheaders;$/;"	m	struct:apr_hdtr_t
apr_hdtr_t::numtrailers	include\apr_network_io.h	/^    int numtrailers;$/;"	m	struct:apr_hdtr_t
apr_hdtr_t::trailers	include\apr_network_io.h	/^    struct iovec* trailers;$/;"	m	struct:apr_hdtr_t	typeref:struct:apr_hdtr_t::iovec
apr_in_addr_t	include\apr_network_io.h	/^typedef struct in_addr          apr_in_addr_t;$/;"	t	typeref:struct:in_addr
apr_inet_addr	include\apr_network_io.h	181;"	d
apr_inet_addr	include\apr_network_io.h	187;"	d
apr_inet_ntop	network_io\unix\inet_ntop.c	/^apr_inet_ntop(int af, const void *src, char *dst, apr_size_t size)$/;"	f
apr_inet_pton	network_io\unix\inet_pton.c	/^apr_inet_pton(int af, const char *src, void *dst)$/;"	f
apr_ino_t	include\apr.h	/^typedef  apr_uint64_t      apr_ino_t;$/;"	t
apr_int16_t	include\apr.h	/^typedef  short             apr_int16_t;$/;"	t
apr_int32_t	include\apr.h	/^typedef  int               apr_int32_t;$/;"	t
apr_int64_t	include\apr.h	/^typedef  __int64           apr_int64_t;$/;"	t
apr_interface_e	include\apr_network_io.h	/^} apr_interface_e;$/;"	t	typeref:enum:__anon11
apr_interval_time_t	include\apr_time.h	/^typedef apr_int64_t apr_interval_time_t;$/;"	t
apr_ipsubnet_t	include\apr_network_io.h	/^typedef struct apr_ipsubnet_t apr_ipsubnet_t;$/;"	t	typeref:struct:apr_ipsubnet_t
apr_ipsubnet_t	network_io\unix\sockaddr.c	/^struct apr_ipsubnet_t {$/;"	s	file:
apr_ipsubnet_t::family	network_io\unix\sockaddr.c	/^    int family;$/;"	m	struct:apr_ipsubnet_t	file:
apr_ipsubnet_t::mask	network_io\unix\sockaddr.c	/^    apr_uint32_t mask[1];$/;"	m	struct:apr_ipsubnet_t	file:
apr_ipsubnet_t::mask	network_io\unix\sockaddr.c	/^    apr_uint32_t mask[4];$/;"	m	struct:apr_ipsubnet_t	file:
apr_ipsubnet_t::sub	network_io\unix\sockaddr.c	/^    apr_uint32_t sub[1];$/;"	m	struct:apr_ipsubnet_t	file:
apr_ipsubnet_t::sub	network_io\unix\sockaddr.c	/^    apr_uint32_t sub[4]; \/* big enough for IPv4 and IPv6 addresses *\/$/;"	m	struct:apr_ipsubnet_t	file:
apr_ipsubnet_test	network_io\unix\sockaddr.c	/^APR_DECLARE(int) apr_ipsubnet_test(apr_ipsubnet_t *ipsub, apr_sockaddr_t *sa)$/;"	f
apr_is_empty_array	tables\apr_tables.c	/^APR_DECLARE(int) apr_is_empty_array(const apr_array_header_t *a)$/;"	f
apr_is_empty_table	tables\apr_tables.c	/^APR_DECLARE(int) apr_is_empty_table(const apr_table_t *t)$/;"	f
apr_is_option_set	include\arch\unix\apr_arch_networkio.h	130;"	d
apr_is_option_set	include\arch\win32\apr_arch_networkio.h	78;"	d
apr_isalnum	include\apr_lib.h	203;"	d
apr_isalpha	include\apr_lib.h	205;"	d
apr_isascii	include\apr_lib.h	216;"	d
apr_isascii	include\apr_lib.h	218;"	d
apr_iscntrl	include\apr_lib.h	207;"	d
apr_isdigit	include\apr_lib.h	209;"	d
apr_isgraph	include\apr_lib.h	211;"	d
apr_islower	include\apr_lib.h	213;"	d
apr_isprint	include\apr_lib.h	221;"	d
apr_ispunct	include\apr_lib.h	223;"	d
apr_isspace	include\apr_lib.h	225;"	d
apr_isupper	include\apr_lib.h	227;"	d
apr_isxdigit	include\apr_lib.h	229;"	d
apr_itoa	strings\apr_strings.c	/^APR_DECLARE(char *) apr_itoa(apr_pool_t *p, int n)$/;"	f
apr_kill_conditions_e	include\apr_thread_proc.h	/^} apr_kill_conditions_e;$/;"	t	typeref:enum:__anon20
apr_killpg	include\apr_lib.h	93;"	d
apr_killpg	include\apr_lib.h	96;"	d
apr_killpg	include\apr_lib.h	98;"	d
apr_load_dll_func	misc\win32\misc.c	/^FARPROC apr_load_dll_func(apr_dlltoken_e fnLib, char* fnName, int ordinal)$/;"	f
apr_lockmech_e	include\apr_proc_mutex.h	/^} apr_lockmech_e;$/;"	t	typeref:enum:__anon16
apr_ltoa	strings\apr_strings.c	/^APR_DECLARE(char *) apr_ltoa(apr_pool_t *p, long n)$/;"	f
apr_malloc_dbg	include\arch\win32\apr_arch_misc.h	/^static APR_INLINE void* apr_malloc_dbg(size_t size, const char* filename,$/;"	f
apr_memnode_t	include\apr_allocator.h	/^struct apr_memnode_t {$/;"	s
apr_memnode_t	include\apr_allocator.h	/^typedef struct apr_memnode_t apr_memnode_t;$/;"	t	typeref:struct:apr_memnode_t
apr_memnode_t::endp	include\apr_allocator.h	/^    char          *endp;            \/**< pointer to end of free memory *\/$/;"	m	struct:apr_memnode_t
apr_memnode_t::first_avail	include\apr_allocator.h	/^    char          *first_avail;     \/**< pointer to first free memory *\/$/;"	m	struct:apr_memnode_t
apr_memnode_t::free_index	include\apr_allocator.h	/^    apr_uint32_t   free_index;      \/**< how much free *\/$/;"	m	struct:apr_memnode_t
apr_memnode_t::index	include\apr_allocator.h	/^    apr_uint32_t   index;           \/**< size *\/$/;"	m	struct:apr_memnode_t
apr_memnode_t::next	include\apr_allocator.h	/^    apr_memnode_t *next;            \/**< next memnode *\/$/;"	m	struct:apr_memnode_t
apr_memnode_t::ref	include\apr_allocator.h	/^    apr_memnode_t **ref;            \/**< reference to self *\/$/;"	m	struct:apr_memnode_t
apr_mmap_t	include\apr_mmap.h	/^struct apr_mmap_t {$/;"	s
apr_mmap_t	include\apr_mmap.h	/^typedef struct apr_mmap_t            apr_mmap_t;$/;"	t	typeref:struct:apr_mmap_t
apr_mmap_t::area	include\apr_mmap.h	/^    area_id area;$/;"	m	struct:apr_mmap_t
apr_mmap_t::cntxt	include\apr_mmap.h	/^    apr_pool_t *cntxt;$/;"	m	struct:apr_mmap_t
apr_mmap_t::link	include\apr_mmap.h	/^    APR_RING_ENTRY(apr_mmap_t) link;$/;"	m	struct:apr_mmap_t
apr_mmap_t::mhandle	include\apr_mmap.h	/^    HANDLE mhandle;$/;"	m	struct:apr_mmap_t
apr_mmap_t::mm	include\apr_mmap.h	/^    void *mm;$/;"	m	struct:apr_mmap_t
apr_mmap_t::mv	include\apr_mmap.h	/^    void *mv;$/;"	m	struct:apr_mmap_t
apr_mmap_t::poffset	include\apr_mmap.h	/^    apr_off_t  poffset;$/;"	m	struct:apr_mmap_t
apr_mmap_t::psize	include\apr_mmap.h	/^    apr_size_t psize;$/;"	m	struct:apr_mmap_t
apr_mmap_t::pstart	include\apr_mmap.h	/^    apr_off_t  pstart;$/;"	m	struct:apr_mmap_t
apr_mmap_t::size	include\apr_mmap.h	/^    apr_size_t size;$/;"	m	struct:apr_mmap_t
apr_month_snames	time\unix\timestr.c	/^APR_DECLARE_DATA const char apr_month_snames[12][4] =$/;"	v
apr_month_snames	time\win32\timestr.c	/^APR_DECLARE_DATA const char apr_month_snames[12][4] =$/;"	v
apr_netware_proc_cleanup	threadproc\netware\proc.c	/^static apr_status_t apr_netware_proc_cleanup(void *theproc)$/;"	f	file:
apr_netware_setup_time	time\unix\time.c	/^APR_DECLARE(void) apr_netware_setup_time(void)$/;"	f
apr_off_t	include\apr.h	/^typedef  __int64     apr_off_t;$/;"	t
apr_off_t	include\apr.h	/^typedef  int         apr_off_t;$/;"	t
apr_off_t_toa	strings\apr_strings.c	/^APR_DECLARE(char *) apr_off_t_toa(apr_pool_t *p, apr_off_t n)$/;"	f
apr_os2_accept	network_io\os2\os2calls.c	/^int (*apr_os2_accept)(int, struct sockaddr *, int *) = NULL;$/;"	v
apr_os2_bind	network_io\os2\os2calls.c	/^int (*apr_os2_bind)(int, struct sockaddr *, int) = NULL;$/;"	v
apr_os2_connect	network_io\os2\os2calls.c	/^int (*apr_os2_connect)(int, struct sockaddr *, int) = NULL;$/;"	v
apr_os2_getpeername	network_io\os2\os2calls.c	/^int (*apr_os2_getpeername)(int, struct sockaddr *, int *) = NULL;$/;"	v
apr_os2_getsockname	network_io\os2\os2calls.c	/^int (*apr_os2_getsockname)(int, struct sockaddr *, int *) = NULL;$/;"	v
apr_os2_getsockopt	network_io\os2\os2calls.c	/^int (*apr_os2_getsockopt)(int, int, int, char *, int *) = NULL;$/;"	v
apr_os2_ioctl	network_io\os2\os2calls.c	/^int (*apr_os2_ioctl)(int, int, caddr_t, int) = NULL;$/;"	v
apr_os2_listen	network_io\os2\os2calls.c	/^int (*apr_os2_listen)(int, int) = NULL;$/;"	v
apr_os2_recv	network_io\os2\os2calls.c	/^int (*apr_os2_recv)(int, char *, int, int) = NULL;$/;"	v
apr_os2_recvfrom	network_io\os2\os2calls.c	/^int (*apr_os2_recvfrom)(int, char *, int, int, struct sockaddr *, int *);$/;"	v
apr_os2_select	network_io\os2\os2calls.c	/^int (*apr_os2_select)(int *, int, int, int, long) = NULL;$/;"	v
apr_os2_send	network_io\os2\os2calls.c	/^int (*apr_os2_send)(int, const char *, int, int) = NULL;$/;"	v
apr_os2_sendto	network_io\os2\os2calls.c	/^int (*apr_os2_sendto)(int, const char *, int, int, const struct sockaddr *, int);$/;"	v
apr_os2_setsockopt	network_io\os2\os2calls.c	/^int (*apr_os2_setsockopt)(int, int, int, char *, int) = NULL;$/;"	v
apr_os2_shutdown	network_io\os2\os2calls.c	/^int (*apr_os2_shutdown)(int, int) = NULL;$/;"	v
apr_os2_sock_errno	network_io\os2\os2calls.c	/^int (*apr_os2_sock_errno)() = NULL;$/;"	v
apr_os2_socket	network_io\os2\os2calls.c	/^int (*apr_os2_socket)(int, int, int) = os2_socket_init;$/;"	v
apr_os2_soclose	network_io\os2\os2calls.c	/^int (*apr_os2_soclose)(int) = NULL;$/;"	v
apr_os2_writev	network_io\os2\os2calls.c	/^int (*apr_os2_writev)(int, struct iovec *, int) = NULL;$/;"	v
apr_os_default_encoding	misc\netware\charset.c	/^APR_DECLARE(const char*) apr_os_default_encoding (apr_pool_t *pool)$/;"	f
apr_os_default_encoding	misc\unix\charset.c	/^APR_DECLARE(const char*) apr_os_default_encoding (apr_pool_t *pool)$/;"	f
apr_os_default_encoding	misc\win32\charset.c	/^APR_DECLARE(const char*) apr_os_default_encoding (apr_pool_t *pool)$/;"	f
apr_os_dir_get	file_io\unix\dir.c	/^apr_status_t apr_os_dir_get(apr_os_dir_t **thedir, apr_dir_t *dir)$/;"	f
apr_os_dir_put	file_io\unix\dir.c	/^apr_status_t apr_os_dir_put(apr_dir_t **dir, apr_os_dir_t *thedir,$/;"	f
apr_os_dir_t	include\apr_portable.h	/^typedef DIR                   apr_os_dir_t;         \/**< native dir *\/$/;"	t
apr_os_dir_t	include\apr_portable.h	/^typedef DIR                   apr_os_dir_t;$/;"	t
apr_os_dir_t	include\apr_portable.h	/^typedef HANDLE                apr_os_dir_t;$/;"	t
apr_os_dir_t	include\apr_portable.h	/^typedef HDIR                  apr_os_dir_t;$/;"	t
apr_os_dso_handle_t	include\apr_portable.h	/^typedef HANDLE                apr_os_dso_handle_t;$/;"	t
apr_os_dso_handle_t	include\apr_portable.h	/^typedef HMODULE               apr_os_dso_handle_t;$/;"	t
apr_os_dso_handle_t	include\apr_portable.h	/^typedef NSModule              apr_os_dso_handle_t;$/;"	t
apr_os_dso_handle_t	include\apr_portable.h	/^typedef image_id              apr_os_dso_handle_t;$/;"	t
apr_os_dso_handle_t	include\apr_portable.h	/^typedef shl_t                 apr_os_dso_handle_t;$/;"	t
apr_os_dso_handle_t	include\apr_portable.h	/^typedef void *                apr_os_dso_handle_t;$/;"	t
apr_os_exp_time_t	include\apr_portable.h	/^typedef SYSTEMTIME            apr_os_exp_time_t;$/;"	t
apr_os_exp_time_t	include\apr_portable.h	/^typedef struct tm             apr_os_exp_time_t;    \/**< native tm *\/$/;"	t	typeref:struct:tm
apr_os_exp_time_t	include\apr_portable.h	/^typedef struct tm             apr_os_exp_time_t;$/;"	t	typeref:struct:tm
apr_os_file_t	include\apr_portable.h	/^typedef HANDLE                apr_os_file_t;$/;"	t
apr_os_file_t	include\apr_portable.h	/^typedef HFILE                 apr_os_file_t;$/;"	t
apr_os_file_t	include\apr_portable.h	/^typedef int                   apr_os_file_t;        \/**< native file *\/$/;"	t
apr_os_file_t	include\apr_portable.h	/^typedef int                   apr_os_file_t;$/;"	t
apr_os_global_mutex_get	include\apr_portable.h	198;"	d
apr_os_global_mutex_t	include\apr_portable.h	/^    struct apr_os_global_mutex_t {$/;"	s
apr_os_global_mutex_t	include\apr_portable.h	/^    typedef struct apr_os_global_mutex_t apr_os_global_mutex_t;$/;"	t	typeref:struct:apr_os_global_mutex_t
apr_os_global_mutex_t	include\apr_portable.h	196;"	d
apr_os_global_mutex_t::pool	include\apr_portable.h	/^        apr_pool_t *pool;$/;"	m	struct:apr_os_global_mutex_t
apr_os_global_mutex_t::proc_mutex	include\apr_portable.h	/^        apr_proc_mutex_t *proc_mutex;$/;"	m	struct:apr_os_global_mutex_t
apr_os_global_mutex_t::thread_mutex	include\apr_portable.h	/^        apr_thread_mutex_t *thread_mutex;$/;"	m	struct:apr_os_global_mutex_t
apr_os_imp_time_t	include\apr_portable.h	/^typedef FILETIME              apr_os_imp_time_t;$/;"	t
apr_os_imp_time_t	include\apr_portable.h	/^typedef struct timeval        apr_os_imp_time_t;    \/**< native timeval *\/$/;"	t	typeref:struct:timeval
apr_os_imp_time_t	include\apr_portable.h	/^typedef struct timeval        apr_os_imp_time_t;$/;"	t	typeref:struct:timeval
apr_os_level	misc\win32\misc.c	/^APR_DECLARE_DATA apr_oslevel_e apr_os_level = APR_WIN_UNK;$/;"	v
apr_os_locale_encoding	misc\netware\charset.c	/^APR_DECLARE(const char*) apr_os_locale_encoding (apr_pool_t *pool)$/;"	f
apr_os_locale_encoding	misc\unix\charset.c	/^APR_DECLARE(const char*) apr_os_locale_encoding (apr_pool_t *pool)$/;"	f
apr_os_locale_encoding	misc\win32\charset.c	/^APR_DECLARE(const char*) apr_os_locale_encoding (apr_pool_t *pool)$/;"	f
apr_os_proc_mutex_put	locks\netware\proc_mutex.c	/^apr_status_t apr_os_proc_mutex_put(apr_proc_mutex_t **pmutex,$/;"	f
apr_os_proc_mutex_t	include\apr_portable.h	/^struct apr_os_proc_mutex_t {$/;"	s
apr_os_proc_mutex_t	include\apr_portable.h	/^typedef HANDLE                apr_os_proc_mutex_t;$/;"	t
apr_os_proc_mutex_t	include\apr_portable.h	/^typedef HMTX                  apr_os_proc_mutex_t;$/;"	t
apr_os_proc_mutex_t	include\apr_portable.h	/^typedef NXMutex_t             apr_os_proc_mutex_t;$/;"	t
apr_os_proc_mutex_t	include\apr_portable.h	/^typedef struct apr_os_proc_mutex_t  apr_os_proc_mutex_t; \/**< native process$/;"	t	typeref:struct:apr_os_proc_mutex_t
apr_os_proc_mutex_t	include\apr_portable.h	/^typedef struct apr_os_proc_mutex_t  apr_os_proc_mutex_t;$/;"	t	typeref:struct:apr_os_proc_mutex_t
apr_os_proc_mutex_t::ben	include\apr_portable.h	/^	int32  ben;$/;"	m	struct:apr_os_proc_mutex_t
apr_os_proc_mutex_t::crossproc	include\apr_portable.h	/^    int crossproc;$/;"	m	struct:apr_os_proc_mutex_t
apr_os_proc_mutex_t::intraproc	include\apr_portable.h	/^    pthread_mutex_t *intraproc;$/;"	m	struct:apr_os_proc_mutex_t
apr_os_proc_mutex_t::pthread_interproc	include\apr_portable.h	/^    pthread_mutex_t *pthread_interproc;$/;"	m	struct:apr_os_proc_mutex_t
apr_os_proc_mutex_t::sem	include\apr_portable.h	/^	sem_id sem;$/;"	m	struct:apr_os_proc_mutex_t
apr_os_proc_t	include\apr_portable.h	/^typedef HANDLE                apr_os_proc_t;$/;"	t
apr_os_proc_t	include\apr_portable.h	/^typedef PID                   apr_os_proc_t;$/;"	t
apr_os_proc_t	include\apr_portable.h	/^typedef long                  apr_os_proc_t;$/;"	t
apr_os_proc_t	include\apr_portable.h	/^typedef pid_t                 apr_os_proc_t;        \/**< native pid *\/$/;"	t
apr_os_proc_t	include\apr_portable.h	/^typedef thread_id             apr_os_proc_t;$/;"	t
apr_os_shm_t	include\apr_portable.h	/^typedef HANDLE                apr_os_shm_t;$/;"	t
apr_os_shm_t	include\apr_portable.h	/^typedef void*                 apr_os_shm_t;         \/**< native SHM *\/$/;"	t
apr_os_shm_t	include\apr_portable.h	/^typedef void*                 apr_os_shm_t;$/;"	t
apr_os_sock_get	network_io\unix\sockets.c	/^apr_status_t apr_os_sock_get(apr_os_sock_t *thesock, apr_socket_t *sock)$/;"	f
apr_os_sock_info_t	include\apr_portable.h	/^struct apr_os_sock_info_t {$/;"	s
apr_os_sock_info_t	include\apr_portable.h	/^typedef struct apr_os_sock_info_t apr_os_sock_info_t;$/;"	t	typeref:struct:apr_os_sock_info_t
apr_os_sock_info_t::family	include\apr_portable.h	/^    int family;             \/**< always required (APR_INET, APR_INET6, etc.) *\/$/;"	m	struct:apr_os_sock_info_t
apr_os_sock_info_t::local	include\apr_portable.h	/^    struct sockaddr *local; \/**< NULL if not yet bound *\/$/;"	m	struct:apr_os_sock_info_t	typeref:struct:apr_os_sock_info_t::sockaddr
apr_os_sock_info_t::os_sock	include\apr_portable.h	/^    apr_os_sock_t *os_sock; \/**< always required *\/$/;"	m	struct:apr_os_sock_info_t
apr_os_sock_info_t::protocol	include\apr_portable.h	/^    int protocol;           \/**< 0 or actual protocol (APR_PROTO_SCTP, APR_PROTO_TCP, etc.) *\/$/;"	m	struct:apr_os_sock_info_t
apr_os_sock_info_t::remote	include\apr_portable.h	/^    struct sockaddr *remote; \/**< NULL if not connected *\/$/;"	m	struct:apr_os_sock_info_t	typeref:struct:apr_os_sock_info_t::sockaddr
apr_os_sock_info_t::type	include\apr_portable.h	/^    int type;               \/**< always required (SOCK_STREAM, SOCK_DGRAM, etc.) *\/$/;"	m	struct:apr_os_sock_info_t
apr_os_sock_make	network_io\unix\sockets.c	/^apr_status_t apr_os_sock_make(apr_socket_t **apr_sock, $/;"	f
apr_os_sock_put	network_io\unix\sockets.c	/^apr_status_t apr_os_sock_put(apr_socket_t **sock, apr_os_sock_t *thesock, $/;"	f
apr_os_sock_t	include\apr_portable.h	/^typedef SOCKET                apr_os_sock_t;$/;"	t
apr_os_sock_t	include\apr_portable.h	/^typedef int                   apr_os_sock_t;        \/**< native dir *\/$/;"	t
apr_os_sock_t	include\apr_portable.h	/^typedef int                   apr_os_sock_t;$/;"	t
apr_os_strerror	misc\unix\errorcodes.c	/^static char *apr_os_strerror(char *buf, apr_size_t bufsize, apr_status_t errcode)$/;"	f	file:
apr_os_strerror	misc\unix\errorcodes.c	/^static char *apr_os_strerror(char* buf, apr_size_t bufsize, int err) $/;"	f	file:
apr_os_strerror	misc\unix\errorcodes.c	/^static char *apr_os_strerror(char* buf, apr_size_t bufsize, int err)$/;"	f	file:
apr_os_thread_current	threadproc\netware\thread.c	/^apr_os_thread_t apr_os_thread_current()$/;"	f
apr_os_thread_equal	threadproc\beos\thread.c	/^int apr_os_thread_equal(apr_os_thread_t tid1, apr_os_thread_t tid2)$/;"	f
apr_os_thread_equal	threadproc\netware\thread.c	/^int apr_os_thread_equal(apr_os_thread_t tid1, apr_os_thread_t tid2)$/;"	f
apr_os_thread_equal	threadproc\os2\thread.c	/^int apr_os_thread_equal(apr_os_thread_t tid1, apr_os_thread_t tid2)$/;"	f
apr_os_thread_equal	threadproc\unix\thread.c	/^APR_DECLARE(int) apr_os_thread_equal(apr_os_thread_t tid1,$/;"	f
apr_os_thread_equal	threadproc\win32\thread.c	/^APR_DECLARE(int) apr_os_thread_equal(apr_os_thread_t tid1,$/;"	f
apr_os_thread_t	include\apr_portable.h	/^typedef HANDLE                apr_os_thread_t;$/;"	t
apr_os_thread_t	include\apr_portable.h	/^typedef NXThreadId_t          apr_os_thread_t;$/;"	t
apr_os_thread_t	include\apr_portable.h	/^typedef TID                   apr_os_thread_t;$/;"	t
apr_os_thread_t	include\apr_portable.h	/^typedef pthread_t             apr_os_thread_t;      \/**< native thread *\/$/;"	t
apr_os_thread_t	include\apr_portable.h	/^typedef thread_id             apr_os_thread_t;$/;"	t
apr_os_threadkey_get	threadproc\netware\threadpriv.c	/^apr_status_t apr_os_threadkey_get(apr_os_threadkey_t *thekey,$/;"	f
apr_os_threadkey_put	threadproc\netware\threadpriv.c	/^apr_status_t apr_os_threadkey_put(apr_threadkey_t **key, $/;"	f
apr_os_threadkey_t	include\apr_portable.h	/^typedef DWORD                 apr_os_threadkey_t; $/;"	t
apr_os_threadkey_t	include\apr_portable.h	/^typedef NXKey_t               apr_os_threadkey_t; $/;"	t
apr_os_threadkey_t	include\apr_portable.h	/^typedef PULONG                apr_os_threadkey_t; $/;"	t
apr_os_threadkey_t	include\apr_portable.h	/^typedef int                   apr_os_threadkey_t;$/;"	t
apr_os_threadkey_t	include\apr_portable.h	/^typedef pthread_key_t         apr_os_threadkey_t;   \/**< native thread address$/;"	t
apr_oslevel_e	include\arch\win32\apr_arch_misc.h	/^} apr_oslevel_e;$/;"	t	typeref:enum:__anon29
apr_other_child_rec_t	include\apr_thread_proc.h	/^typedef struct apr_other_child_rec_t  apr_other_child_rec_t;$/;"	t	typeref:struct:apr_other_child_rec_t
apr_other_child_rec_t	include\arch\unix\apr_arch_misc.h	/^struct apr_other_child_rec_t {$/;"	s
apr_other_child_rec_t	include\arch\win32\apr_arch_misc.h	/^struct apr_other_child_rec_t {$/;"	s
apr_other_child_rec_t::data	include\arch\unix\apr_arch_misc.h	/^    void *data;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::data	include\arch\win32\apr_arch_misc.h	/^    void *data;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::maintenance	include\arch\unix\apr_arch_misc.h	/^    void (*maintenance) (int, void *, int);$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::maintenance	include\arch\win32\apr_arch_misc.h	/^    void (*maintenance) (int, void *, int);$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::next	include\arch\unix\apr_arch_misc.h	/^    struct apr_other_child_rec_t *next;$/;"	m	struct:apr_other_child_rec_t	typeref:struct:apr_other_child_rec_t::apr_other_child_rec_t
apr_other_child_rec_t::next	include\arch\win32\apr_arch_misc.h	/^    struct apr_other_child_rec_t *next;$/;"	m	struct:apr_other_child_rec_t	typeref:struct:apr_other_child_rec_t::apr_other_child_rec_t
apr_other_child_rec_t::p	include\arch\unix\apr_arch_misc.h	/^    apr_pool_t *p;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::p	include\arch\win32\apr_arch_misc.h	/^    apr_pool_t *p;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::proc	include\arch\unix\apr_arch_misc.h	/^    apr_proc_t *proc;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::proc	include\arch\win32\apr_arch_misc.h	/^    apr_proc_t *proc;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::write_fd	include\arch\unix\apr_arch_misc.h	/^    apr_os_file_t write_fd;$/;"	m	struct:apr_other_child_rec_t
apr_other_child_rec_t::write_fd	include\arch\win32\apr_arch_misc.h	/^    apr_os_file_t write_fd;$/;"	m	struct:apr_other_child_rec_t
apr_palloc	include\apr_pools.h	433;"	d
apr_palloc	memory\unix\apr_pools.c	/^APR_DECLARE(void *) apr_palloc(apr_pool_t *pool, apr_size_t in_size)$/;"	f
apr_palloc	memory\unix\apr_pools.c	/^APR_DECLARE(void *) apr_palloc(apr_pool_t *pool, apr_size_t size)$/;"	f
apr_palloc	memory\unix\apr_pools.c	2575;"	d	file:
apr_palloc_debug	memory\unix\apr_pools.c	/^APR_DECLARE(void *) apr_palloc_debug(apr_pool_t *pool, apr_size_t size,$/;"	f
apr_pcalloc	include\apr_pools.h	446;"	d
apr_pcalloc	include\apr_pools.h	461;"	d
apr_pcalloc	memory\unix\apr_pools.c	/^APR_DECLARE(void *) apr_pcalloc(apr_pool_t *pool, apr_size_t size)$/;"	f
apr_pcalloc	memory\unix\apr_pools.c	2583;"	d	file:
apr_pcalloc	memory\unix\apr_pools.c	732;"	d	file:
apr_pcalloc_debug	memory\unix\apr_pools.c	/^APR_DECLARE(void *) apr_pcalloc_debug(apr_pool_t *pool, apr_size_t size,$/;"	f
apr_pmemdup	strings\apr_strings.c	/^APR_DECLARE(void *) apr_pmemdup(apr_pool_t *a, const void *m, apr_size_t n)$/;"	f
apr_poll_method_defname	poll\unix\pollset.c	/^APR_DECLARE(const char *) apr_poll_method_defname()$/;"	f
apr_pollcb_cb_t	include\apr_poll.h	/^typedef apr_status_t (*apr_pollcb_cb_t)(void *baton, apr_pollfd_t *descriptor);$/;"	t
apr_pollcb_provider_epoll	poll\unix\epoll.c	/^apr_pollcb_provider_t *apr_pollcb_provider_epoll = &impl_cb;$/;"	v
apr_pollcb_provider_kqueue	poll\unix\kqueue.c	/^apr_pollcb_provider_t *apr_pollcb_provider_kqueue = &impl_cb;$/;"	v
apr_pollcb_provider_poll	poll\unix\poll.c	/^apr_pollcb_provider_t *apr_pollcb_provider_poll = &impl_cb;$/;"	v
apr_pollcb_provider_port	poll\unix\port.c	/^apr_pollcb_provider_t *apr_pollcb_provider_port = &impl_cb;$/;"	v
apr_pollcb_provider_t	include\arch\unix\apr_arch_poll_private.h	/^struct apr_pollcb_provider_t {$/;"	s
apr_pollcb_provider_t	include\arch\unix\apr_arch_poll_private.h	/^typedef struct apr_pollcb_provider_t apr_pollcb_provider_t;$/;"	t	typeref:struct:apr_pollcb_provider_t
apr_pollcb_provider_t::add	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*add)(apr_pollcb_t *, apr_pollfd_t *);$/;"	m	struct:apr_pollcb_provider_t
apr_pollcb_provider_t::create	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*create)(apr_pollcb_t *, apr_uint32_t, apr_pool_t *, apr_uint32_t);$/;"	m	struct:apr_pollcb_provider_t
apr_pollcb_provider_t::name	include\arch\unix\apr_arch_poll_private.h	/^    const char *name;$/;"	m	struct:apr_pollcb_provider_t
apr_pollcb_provider_t::poll	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*poll)(apr_pollcb_t *, apr_interval_time_t, apr_pollcb_cb_t, void *);$/;"	m	struct:apr_pollcb_provider_t
apr_pollcb_provider_t::remove	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*remove)(apr_pollcb_t *, apr_pollfd_t *);$/;"	m	struct:apr_pollcb_provider_t
apr_pollcb_pset	include\arch\unix\apr_arch_poll_private.h	/^} apr_pollcb_pset;$/;"	t	typeref:union:__anon25
apr_pollcb_t	include\apr_poll.h	/^typedef struct apr_pollcb_t apr_pollcb_t;$/;"	t	typeref:struct:apr_pollcb_t
apr_pollcb_t	include\arch\unix\apr_arch_poll_private.h	/^struct apr_pollcb_t {$/;"	s
apr_pollcb_t::copyset	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollfd_t **copyset;$/;"	m	struct:apr_pollcb_t
apr_pollcb_t::fd	include\arch\unix\apr_arch_poll_private.h	/^    int fd;$/;"	m	struct:apr_pollcb_t
apr_pollcb_t::nalloc	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nalloc;$/;"	m	struct:apr_pollcb_t
apr_pollcb_t::nelts	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nelts;$/;"	m	struct:apr_pollcb_t
apr_pollcb_t::pollset	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollcb_pset pollset;$/;"	m	struct:apr_pollcb_t
apr_pollcb_t::pool	include\arch\unix\apr_arch_poll_private.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_pollcb_t
apr_pollcb_t::provider	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollcb_provider_t *provider;$/;"	m	struct:apr_pollcb_t
apr_pollfd_t	include\apr_poll.h	/^struct apr_pollfd_t {$/;"	s
apr_pollfd_t	include\apr_poll.h	/^typedef struct apr_pollfd_t apr_pollfd_t;$/;"	t	typeref:struct:apr_pollfd_t
apr_pollfd_t::client_data	include\apr_poll.h	/^    void *client_data;          \/**< allows app to associate context *\/$/;"	m	struct:apr_pollfd_t
apr_pollfd_t::desc	include\apr_poll.h	/^    apr_descriptor desc;        \/**< @see apr_descriptor *\/$/;"	m	struct:apr_pollfd_t
apr_pollfd_t::desc_type	include\apr_poll.h	/^    apr_datatype_e desc_type;   \/**< descriptor type *\/$/;"	m	struct:apr_pollfd_t
apr_pollfd_t::p	include\apr_poll.h	/^    apr_pool_t *p;              \/**< associated pool *\/$/;"	m	struct:apr_pollfd_t
apr_pollfd_t::reqevents	include\apr_poll.h	/^    apr_int16_t reqevents;      \/**< requested events *\/$/;"	m	struct:apr_pollfd_t
apr_pollfd_t::rtnevents	include\apr_poll.h	/^    apr_int16_t rtnevents;      \/**< returned events *\/$/;"	m	struct:apr_pollfd_t
apr_pollset_drain_wakeup_pipe	poll\unix\pollset.c	/^void apr_pollset_drain_wakeup_pipe(apr_pollset_t *pollset)$/;"	f
apr_pollset_method_e	include\apr_poll.h	/^} apr_pollset_method_e;$/;"	t	typeref:enum:__anon13
apr_pollset_method_name	poll\unix\pollset.c	/^APR_DECLARE(const char *) apr_pollset_method_name(apr_pollset_t *pollset)$/;"	f
apr_pollset_private_t	include\arch\unix\apr_arch_poll_private.h	/^typedef struct apr_pollset_private_t apr_pollset_private_t;$/;"	t	typeref:struct:apr_pollset_private_t
apr_pollset_private_t	poll\unix\epoll.c	/^struct apr_pollset_private_t$/;"	s	file:
apr_pollset_private_t	poll\unix\kqueue.c	/^struct apr_pollset_private_t$/;"	s	file:
apr_pollset_private_t	poll\unix\poll.c	/^struct apr_pollset_private_t$/;"	s	file:
apr_pollset_private_t	poll\unix\port.c	/^struct apr_pollset_private_t$/;"	s	file:
apr_pollset_private_t	poll\unix\select.c	/^struct apr_pollset_private_t$/;"	s	file:
apr_pollset_private_t::epoll_fd	poll\unix\epoll.c	/^    int epoll_fd;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::exceptset	poll\unix\select.c	/^    fd_set readset, writeset, exceptset;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::flags	poll\unix\select.c	/^    apr_uint32_t flags;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::ke_set	poll\unix\kqueue.c	/^    struct kevent *ke_set;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::kevent	file:
apr_pollset_private_t::kevent	poll\unix\kqueue.c	/^    struct kevent kevent;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::kevent	file:
apr_pollset_private_t::kqueue_fd	poll\unix\kqueue.c	/^    int kqueue_fd;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::maxfd	poll\unix\select.c	/^    int maxfd;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::pollset	poll\unix\epoll.c	/^    struct epoll_event *pollset;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::epoll_event	file:
apr_pollset_private_t::pollset	poll\unix\poll.c	/^    struct pollfd *pollset;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::pollfd	file:
apr_pollset_private_t::port_fd	poll\unix\port.c	/^    int port_fd;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::port_set	poll\unix\port.c	/^    port_event_t *port_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::query_set	poll\unix\poll.c	/^    apr_pollfd_t *query_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::query_set	poll\unix\select.c	/^    apr_pollfd_t *query_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::readset	poll\unix\select.c	/^    fd_set readset, writeset, exceptset;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::result_set	poll\unix\epoll.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::result_set	poll\unix\kqueue.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::result_set	poll\unix\poll.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::result_set	poll\unix\port.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::result_set	poll\unix\select.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::ring_lock	poll\unix\epoll.c	/^    apr_thread_mutex_t *ring_lock;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::ring_lock	poll\unix\kqueue.c	/^    apr_thread_mutex_t *ring_lock;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::ring_lock	poll\unix\port.c	/^    apr_thread_mutex_t *ring_lock;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::set_type	poll\unix\select.c	/^    int set_type;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::setsize	poll\unix\kqueue.c	/^    apr_uint32_t setsize;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::waiting	poll\unix\port.c	/^    volatile apr_uint32_t waiting;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_private_t::writeset	poll\unix\select.c	/^    fd_set readset, writeset, exceptset;$/;"	m	struct:apr_pollset_private_t	file:
apr_pollset_provider_epoll	poll\unix\epoll.c	/^apr_pollset_provider_t *apr_pollset_provider_epoll = &impl;$/;"	v
apr_pollset_provider_kqueue	poll\unix\kqueue.c	/^apr_pollset_provider_t *apr_pollset_provider_kqueue = &impl;$/;"	v
apr_pollset_provider_poll	poll\unix\poll.c	/^apr_pollset_provider_t *apr_pollset_provider_poll = &impl;$/;"	v
apr_pollset_provider_port	poll\unix\port.c	/^apr_pollset_provider_t *apr_pollset_provider_port = &impl;$/;"	v
apr_pollset_provider_select	poll\unix\select.c	/^apr_pollset_provider_t *apr_pollset_provider_select = &impl;$/;"	v
apr_pollset_provider_t	include\arch\unix\apr_arch_poll_private.h	/^struct apr_pollset_provider_t {$/;"	s
apr_pollset_provider_t	include\arch\unix\apr_arch_poll_private.h	/^typedef struct apr_pollset_provider_t apr_pollset_provider_t;$/;"	t	typeref:struct:apr_pollset_provider_t
apr_pollset_provider_t::add	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*add)(apr_pollset_t *, const apr_pollfd_t *);$/;"	m	struct:apr_pollset_provider_t
apr_pollset_provider_t::cleanup	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*cleanup)(apr_pollset_t *);$/;"	m	struct:apr_pollset_provider_t
apr_pollset_provider_t::create	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*create)(apr_pollset_t *, apr_uint32_t, apr_pool_t *, apr_uint32_t);$/;"	m	struct:apr_pollset_provider_t
apr_pollset_provider_t::name	include\arch\unix\apr_arch_poll_private.h	/^    const char *name;$/;"	m	struct:apr_pollset_provider_t
apr_pollset_provider_t::poll	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*poll)(apr_pollset_t *, apr_interval_time_t, apr_int32_t *, const apr_pollfd_t **);$/;"	m	struct:apr_pollset_provider_t
apr_pollset_provider_t::remove	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*remove)(apr_pollset_t *, const apr_pollfd_t *);$/;"	m	struct:apr_pollset_provider_t
apr_pollset_t	include\apr_poll.h	/^typedef struct apr_pollset_t apr_pollset_t;$/;"	t	typeref:struct:apr_pollset_t
apr_pollset_t	include\arch\unix\apr_arch_poll_private.h	/^struct apr_pollset_t$/;"	s
apr_pollset_t	poll\os2\pollset.c	/^struct apr_pollset_t {$/;"	s	file:
apr_pollset_t::flags	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t flags;$/;"	m	struct:apr_pollset_t
apr_pollset_t::nalloc	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nalloc;$/;"	m	struct:apr_pollset_t
apr_pollset_t::nalloc	poll\os2\pollset.c	/^    apr_uint32_t nalloc;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::nelts	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nelts;$/;"	m	struct:apr_pollset_t
apr_pollset_t::nelts	poll\os2\pollset.c	/^    apr_uint32_t nelts;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::num_except	poll\os2\pollset.c	/^    int num_except;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::num_read	poll\os2\pollset.c	/^    int num_read;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::num_total	poll\os2\pollset.c	/^    int num_total;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::num_write	poll\os2\pollset.c	/^    int num_write;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::p	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollset_private_t *p;$/;"	m	struct:apr_pollset_t
apr_pollset_t::pollset	poll\os2\pollset.c	/^    int *pollset;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::pool	include\arch\unix\apr_arch_poll_private.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_pollset_t
apr_pollset_t::pool	poll\os2\pollset.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::provider	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollset_provider_t *provider;$/;"	m	struct:apr_pollset_t
apr_pollset_t::query_set	poll\os2\pollset.c	/^    apr_pollfd_t *query_set;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::result_set	poll\os2\pollset.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_t	file:
apr_pollset_t::wakeup_pfd	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollfd_t wakeup_pfd;$/;"	m	struct:apr_pollset_t
apr_pollset_t::wakeup_pipe	include\arch\unix\apr_arch_poll_private.h	/^    apr_file_t *wakeup_pipe[2];$/;"	m	struct:apr_pollset_t
apr_pool	random\unix\apr_random.c	/^    apr_pool_t *apr_pool;$/;"	m	struct:apr_random_t	file:
apr_pool_abort_set	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_abort_set(apr_abortfunc_t abort_fn,$/;"	f
apr_pool_allocator_get	memory\unix\apr_pools.c	/^APR_DECLARE(apr_allocator_t *) apr_pool_allocator_get(apr_pool_t *pool)$/;"	f
apr_pool_check_integrity	memory\unix\apr_pools.c	/^static void apr_pool_check_integrity(apr_pool_t *pool)$/;"	f	file:
apr_pool_child_cleanup_set	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_child_cleanup_set(apr_pool_t *p, const void *data,$/;"	f
apr_pool_cleanup_for_exec	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_cleanup_for_exec(void)$/;"	f
apr_pool_cleanup_kill	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_cleanup_kill(apr_pool_t *p, const void *data,$/;"	f
apr_pool_cleanup_register	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_cleanup_register(apr_pool_t *p, const void *data,$/;"	f
apr_pool_clear	include\apr_pools.h	375;"	d
apr_pool_clear	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_clear(apr_pool_t *pool)$/;"	f
apr_pool_clear	memory\unix\apr_pools.c	2591;"	d	file:
apr_pool_clear_debug	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_clear_debug(apr_pool_t *pool,$/;"	f
apr_pool_create	include\apr_pools.h	310;"	d
apr_pool_create	include\apr_pools.h	314;"	d
apr_pool_create_core	include\apr_pools.h	328;"	d
apr_pool_create_core	include\apr_pools.h	335;"	d
apr_pool_create_core_ex	include\apr_pools.h	283;"	d
apr_pool_create_core_ex	memory\unix\apr_pools.c	2623;"	d	file:
apr_pool_create_ex	include\apr_pools.h	248;"	d
apr_pool_create_ex	memory\unix\apr_pools.c	2607;"	d	file:
apr_pool_create_unmanaged	include\apr_pools.h	331;"	d
apr_pool_create_unmanaged	include\apr_pools.h	337;"	d
apr_pool_create_unmanaged_ex	include\apr_pools.h	287;"	d
apr_pool_create_unmanaged_ex	memory\unix\apr_pools.c	2636;"	d	file:
apr_pool_destroy	include\apr_pools.h	404;"	d
apr_pool_destroy	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_destroy(apr_pool_t *pool)$/;"	f
apr_pool_destroy	memory\unix\apr_pools.c	2599;"	d	file:
apr_pool_destroy_debug	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_destroy_debug(apr_pool_t *pool,$/;"	f
apr_pool_find	memory\unix\apr_pools.c	/^APR_DECLARE(apr_pool_t *) apr_pool_find(const void *mem)$/;"	f
apr_pool_is_ancestor	memory\unix\apr_pools.c	/^APR_DECLARE(int) apr_pool_is_ancestor(apr_pool_t *a, apr_pool_t *b)$/;"	f
apr_pool_is_child_of	memory\unix\apr_pools.c	/^static int apr_pool_is_child_of(apr_pool_t *pool, apr_pool_t *parent)$/;"	f	file:
apr_pool_join	include\apr_pools.h	771;"	d
apr_pool_join	include\apr_pools.h	773;"	d
apr_pool_join	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_join(apr_pool_t *p, apr_pool_t *sub)$/;"	f
apr_pool_lock	include\apr_pools.h	776;"	d
apr_pool_lock	include\apr_pools.h	778;"	d
apr_pool_lock	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_lock(apr_pool_t *pool, int flag)$/;"	f
apr_pool_log_event	memory\unix\apr_pools.c	/^static void apr_pool_log_event(apr_pool_t *pool, const char *event,$/;"	f	file:
apr_pool_note_subprocess	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_note_subprocess(apr_pool_t *pool, apr_proc_t *proc,$/;"	f
apr_pool_parent_get	memory\unix\apr_pools.c	/^APR_DECLARE(apr_pool_t *) apr_pool_parent_get(apr_pool_t *pool)$/;"	f
apr_pool_pre_cleanup_register	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_pre_cleanup_register(apr_pool_t *p, const void *data,$/;"	f
apr_pool_t	include\apr_pools.h	/^typedef struct apr_pool_t apr_pool_t;$/;"	t	typeref:struct:apr_pool_t
apr_pool_t	memory\unix\apr_pools.c	/^struct apr_pool_t {$/;"	s	file:
apr_pool_t::abort_fn	memory\unix\apr_pools.c	/^    apr_abortfunc_t       abort_fn;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::active	memory\unix\apr_pools.c	/^    apr_memnode_t        *active;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::allocator	memory\unix\apr_pools.c	/^    apr_allocator_t      *allocator;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::child	memory\unix\apr_pools.c	/^    apr_pool_t           *child;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::cleanups	memory\unix\apr_pools.c	/^    cleanup_t            *cleanups;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::creation_flags	memory\unix\apr_pools.c	/^    apr_uint32_t          creation_flags;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::file_line	memory\unix\apr_pools.c	/^    const char           *file_line;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::free_cleanups	memory\unix\apr_pools.c	/^    cleanup_t            *free_cleanups;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::joined	memory\unix\apr_pools.c	/^    apr_pool_t           *joined; \/* the caller has guaranteed that this pool$/;"	m	struct:apr_pool_t	file:
apr_pool_t::mutex	memory\unix\apr_pools.c	/^    apr_thread_mutex_t   *mutex;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::nodes	memory\unix\apr_pools.c	/^    debug_node_t         *nodes;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::owner	memory\unix\apr_pools.c	/^    apr_os_thread_t       owner;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::owner_proc	memory\unix\apr_pools.c	/^    apr_os_proc_t         owner_proc;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::parent	memory\unix\apr_pools.c	/^    apr_pool_t           *parent;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::pre_cleanups	memory\unix\apr_pools.c	/^    cleanup_t            *pre_cleanups;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::ref	memory\unix\apr_pools.c	/^    apr_pool_t          **ref;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::self	memory\unix\apr_pools.c	/^    apr_memnode_t        *self; \/* The node containing the pool itself *\/$/;"	m	struct:apr_pool_t	file:
apr_pool_t::self_first_avail	memory\unix\apr_pools.c	/^    char                 *self_first_avail;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::sibling	memory\unix\apr_pools.c	/^    apr_pool_t           *sibling;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::stat_alloc	memory\unix\apr_pools.c	/^    unsigned int          stat_alloc;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::stat_clear	memory\unix\apr_pools.c	/^    unsigned int          stat_clear;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::stat_total_alloc	memory\unix\apr_pools.c	/^    unsigned int          stat_total_alloc;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::subprocesses	memory\unix\apr_pools.c	/^    struct process_chain *subprocesses;$/;"	m	struct:apr_pool_t	typeref:struct:apr_pool_t::process_chain	file:
apr_pool_t::tag	memory\unix\apr_pools.c	/^    const char           *tag;$/;"	m	struct:apr_pool_t	file:
apr_pool_t::user_data	memory\unix\apr_pools.c	/^    apr_hash_t           *user_data;$/;"	m	struct:apr_pool_t	file:
apr_pool_tag	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_tag(apr_pool_t *pool, const char *tag)$/;"	f
apr_pool_terminate	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_terminate(void)$/;"	f
apr_pool_walk_tree	memory\unix\apr_pools.c	/^static int apr_pool_walk_tree(apr_pool_t *pool,$/;"	f	file:
apr_pools_initialized	memory\unix\apr_pools.c	/^static apr_byte_t   apr_pools_initialized = 0;$/;"	v	file:
apr_port_t	include\apr_network_io.h	/^typedef apr_uint16_t            apr_port_t;$/;"	t
apr_proc_detach	threadproc\netware\procsup.c	/^apr_status_t apr_proc_detach(int daemonize)$/;"	f
apr_proc_mutex_defname	locks\beos\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_defname(void)$/;"	f
apr_proc_mutex_defname	locks\netware\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_defname(void)$/;"	f
apr_proc_mutex_defname	locks\os2\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_defname(void)$/;"	f
apr_proc_mutex_defname	locks\unix\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_defname(void)$/;"	f
apr_proc_mutex_defname	locks\win32\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_defname(void)$/;"	f
apr_proc_mutex_lockfile	locks\beos\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_lockfile(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_lockfile	locks\netware\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_lockfile(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_lockfile	locks\os2\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_lockfile(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_lockfile	locks\unix\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_lockfile(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_lockfile	locks\win32\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_lockfile(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_name	locks\beos\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_name(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_name	locks\netware\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_name(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_name	locks\os2\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_name(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_name	locks\unix\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_name(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_name	locks\win32\proc_mutex.c	/^APR_DECLARE(const char *) apr_proc_mutex_name(apr_proc_mutex_t *mutex)$/;"	f
apr_proc_mutex_t	include\apr_proc_mutex.h	/^typedef struct apr_proc_mutex_t apr_proc_mutex_t;$/;"	t	typeref:struct:apr_proc_mutex_t
apr_proc_mutex_t	include\arch\beos\apr_arch_proc_mutex.h	/^struct apr_proc_mutex_t {$/;"	s
apr_proc_mutex_t	include\arch\netware\apr_arch_proc_mutex.h	/^struct apr_proc_mutex_t {$/;"	s
apr_proc_mutex_t	include\arch\os2\apr_arch_proc_mutex.h	/^struct apr_proc_mutex_t {$/;"	s
apr_proc_mutex_t	include\arch\unix\apr_arch_proc_mutex.h	/^struct apr_proc_mutex_t {$/;"	s
apr_proc_mutex_t	include\arch\win32\apr_arch_proc_mutex.h	/^struct apr_proc_mutex_t {$/;"	s
apr_proc_mutex_t::Lock	include\arch\beos\apr_arch_proc_mutex.h	/^    sem_id Lock;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::LockCount	include\arch\beos\apr_arch_proc_mutex.h	/^    int32  LockCount;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::curr_locked	include\arch\unix\apr_arch_proc_mutex.h	/^    int curr_locked;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::fname	include\arch\unix\apr_arch_proc_mutex.h	/^    char *fname;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::fname	include\arch\win32\apr_arch_proc_mutex.h	/^    const char *fname;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::hMutex	include\arch\os2\apr_arch_proc_mutex.h	/^    HMTX hMutex;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::handle	include\arch\win32\apr_arch_proc_mutex.h	/^    HANDLE handle;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::inter_meth	include\arch\unix\apr_arch_proc_mutex.h	/^    const apr_proc_mutex_unix_lock_methods_t *inter_meth;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::interproc	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_file_t *interproc;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::lock_count	include\arch\os2\apr_arch_proc_mutex.h	/^    int lock_count;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::meth	include\arch\unix\apr_arch_proc_mutex.h	/^    const apr_proc_mutex_unix_lock_methods_t *meth;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::mutex	include\arch\netware\apr_arch_proc_mutex.h	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::owner	include\arch\os2\apr_arch_proc_mutex.h	/^    TID owner;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::pool	include\arch\beos\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::pool	include\arch\netware\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::pool	include\arch\os2\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::pool	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::pool	include\arch\win32\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::psem_interproc	include\arch\unix\apr_arch_proc_mutex.h	/^    sem_t *psem_interproc;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_t::pthread_interproc	include\arch\unix\apr_arch_proc_mutex.h	/^    pthread_mutex_t *pthread_interproc;$/;"	m	struct:apr_proc_mutex_t
apr_proc_mutex_unix_lock_methods_t	include\arch\unix\apr_arch_proc_mutex.h	/^struct apr_proc_mutex_unix_lock_methods_t {$/;"	s
apr_proc_mutex_unix_lock_methods_t	include\arch\unix\apr_arch_proc_mutex.h	/^typedef struct apr_proc_mutex_unix_lock_methods_t apr_proc_mutex_unix_lock_methods_t;$/;"	t	typeref:struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::acquire	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*acquire)(apr_proc_mutex_t *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::child_init	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*child_init)(apr_proc_mutex_t **, apr_pool_t *, const char *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::cleanup	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*cleanup)(void *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::create	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*create)(apr_proc_mutex_t *, const char *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::flags	include\arch\unix\apr_arch_proc_mutex.h	/^    unsigned int flags;$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::name	include\arch\unix\apr_arch_proc_mutex.h	/^    const char *name;$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::release	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*release)(apr_proc_mutex_t *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_lock_methods_t::tryacquire	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*tryacquire)(apr_proc_mutex_t *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
apr_proc_mutex_unix_setup_lock	locks\unix\proc_mutex.c	/^void apr_proc_mutex_unix_setup_lock(void)$/;"	f
apr_proc_other_child_refresh	misc\unix\otherchild.c	/^APR_DECLARE(void) apr_proc_other_child_refresh(apr_other_child_rec_t *ocr,$/;"	f
apr_proc_other_child_refresh_all	misc\unix\otherchild.c	/^APR_DECLARE(void) apr_proc_other_child_refresh_all(int reason)$/;"	f
apr_proc_other_child_register	misc\unix\otherchild.c	/^APR_DECLARE(void) apr_proc_other_child_register(apr_proc_t *proc,$/;"	f
apr_proc_other_child_unregister	misc\unix\otherchild.c	/^APR_DECLARE(void) apr_proc_other_child_unregister(void *data)$/;"	f
apr_proc_t	include\apr_thread_proc.h	/^typedef struct apr_proc_t {$/;"	s
apr_proc_t	include\apr_thread_proc.h	/^} apr_proc_t;$/;"	t	typeref:struct:apr_proc_t
apr_proc_t::err	include\apr_thread_proc.h	/^    apr_file_t *err;$/;"	m	struct:apr_proc_t
apr_proc_t::hproc	include\apr_thread_proc.h	/^    HANDLE hproc;$/;"	m	struct:apr_proc_t
apr_proc_t::in	include\apr_thread_proc.h	/^    apr_file_t *in;$/;"	m	struct:apr_proc_t
apr_proc_t::invoked	include\apr_thread_proc.h	/^    char *invoked;$/;"	m	struct:apr_proc_t
apr_proc_t::out	include\apr_thread_proc.h	/^    apr_file_t *out;$/;"	m	struct:apr_proc_t
apr_proc_t::pid	include\apr_thread_proc.h	/^    pid_t pid;$/;"	m	struct:apr_proc_t
apr_procattr_t	include\apr_thread_proc.h	/^typedef struct apr_procattr_t         apr_procattr_t;$/;"	t	typeref:struct:apr_procattr_t
apr_procattr_t	include\arch\beos\apr_arch_threadproc.h	/^struct apr_procattr_t {$/;"	s
apr_procattr_t	include\arch\netware\apr_arch_threadproc.h	/^struct apr_procattr_t {$/;"	s
apr_procattr_t	include\arch\os2\apr_arch_threadproc.h	/^struct apr_procattr_t {$/;"	s
apr_procattr_t	include\arch\unix\apr_arch_threadproc.h	/^struct apr_procattr_t {$/;"	s
apr_procattr_t	include\arch\win32\apr_arch_threadproc.h	/^struct apr_procattr_t {$/;"	s
apr_procattr_t::addrspace	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t addrspace;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_err	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_err	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_err	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_err	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_err	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_in	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_in	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_in	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_in	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_in	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_out	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_out	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_out	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_out	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::child_out	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::cmdtype	include\arch\beos\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
apr_procattr_t::cmdtype	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
apr_procattr_t::cmdtype	include\arch\os2\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
apr_procattr_t::cmdtype	include\arch\unix\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
apr_procattr_t::cmdtype	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
apr_procattr_t::currdir	include\arch\beos\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
apr_procattr_t::currdir	include\arch\netware\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
apr_procattr_t::currdir	include\arch\os2\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
apr_procattr_t::currdir	include\arch\unix\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
apr_procattr_t::currdir	include\arch\win32\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
apr_procattr_t::detached	include\arch\beos\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
apr_procattr_t::detached	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
apr_procattr_t::detached	include\arch\os2\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
apr_procattr_t::detached	include\arch\unix\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
apr_procattr_t::detached	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
apr_procattr_t::errchk	include\arch\unix\apr_arch_threadproc.h	/^    apr_int32_t errchk;$/;"	m	struct:apr_procattr_t
apr_procattr_t::errchk	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t errchk;$/;"	m	struct:apr_procattr_t
apr_procattr_t::errfn	include\arch\unix\apr_arch_threadproc.h	/^    apr_child_errfn_t *errfn;$/;"	m	struct:apr_procattr_t
apr_procattr_t::errfn	include\arch\win32\apr_arch_threadproc.h	/^    apr_child_errfn_t *errfn;$/;"	m	struct:apr_procattr_t
apr_procattr_t::gid	include\arch\unix\apr_arch_threadproc.h	/^    apr_gid_t   gid;$/;"	m	struct:apr_procattr_t
apr_procattr_t::limit_cpu	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_cpu;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
apr_procattr_t::limit_mem	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_mem;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
apr_procattr_t::limit_nofile	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_nofile;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
apr_procattr_t::limit_nproc	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_nproc;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
apr_procattr_t::parent_err	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_err	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_err	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_err	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_err	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_in	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_in	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_in	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_in	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_in	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_out	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_out	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_out	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_out	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::parent_out	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
apr_procattr_t::pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
apr_procattr_t::pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
apr_procattr_t::pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
apr_procattr_t::pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
apr_procattr_t::pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
apr_procattr_t::sa	include\arch\win32\apr_arch_threadproc.h	/^    LPSECURITY_ATTRIBUTES   sa;$/;"	m	struct:apr_procattr_t
apr_procattr_t::sd	include\arch\win32\apr_arch_threadproc.h	/^    LPVOID                  sd;$/;"	m	struct:apr_procattr_t
apr_procattr_t::uid	include\arch\unix\apr_arch_threadproc.h	/^    apr_uid_t   uid;$/;"	m	struct:apr_procattr_t
apr_procattr_t::user_token	include\arch\win32\apr_arch_threadproc.h	/^    HANDLE     user_token;$/;"	m	struct:apr_procattr_t
apr_psprintf	memory\unix\apr_pools.c	/^APR_DECLARE_NONSTD(char *) apr_psprintf(apr_pool_t *p, const char *fmt, ...)$/;"	f
apr_pstrcat	strings\apr_strings.c	/^APR_DECLARE_NONSTD(char *) apr_pstrcat(apr_pool_t *a, ...)$/;"	f
apr_pstrcatv	strings\apr_strings.c	/^APR_DECLARE(char *) apr_pstrcatv(apr_pool_t *a, const struct iovec *vec,$/;"	f
apr_pstrdup	strings\apr_strings.c	/^APR_DECLARE(char *) apr_pstrdup(apr_pool_t *a, const char *s)$/;"	f
apr_pstrmemdup	strings\apr_strings.c	/^APR_DECLARE(char *) apr_pstrmemdup(apr_pool_t *a, const char *s, apr_size_t n)$/;"	f
apr_pstrndup	strings\apr_strings.c	/^APR_DECLARE(char *) apr_pstrndup(apr_pool_t *a, const char *s, apr_size_t n)$/;"	f
apr_pvsprintf	memory\unix\apr_pools.c	/^APR_DECLARE(char *) apr_pvsprintf(apr_pool_t *pool, const char *fmt, va_list ap)$/;"	f
apr_random_add_entropy	random\unix\apr_random.c	/^APR_DECLARE(void) apr_random_add_entropy(apr_random_t *g,const void *entropy_,$/;"	f
apr_random_after_fork	random\unix\apr_random.c	/^APR_DECLARE(void) apr_random_after_fork(apr_proc_t *proc)$/;"	f
apr_random_barrier	random\unix\apr_random.c	/^APR_DECLARE(void) apr_random_barrier(apr_random_t *g)$/;"	f
apr_random_block	random\unix\apr_random.c	/^static void apr_random_block(apr_random_t *g,unsigned char *random)$/;"	f	file:
apr_random_bytes	random\unix\apr_random.c	/^static void apr_random_bytes(apr_random_t *g,unsigned char *random,$/;"	f	file:
apr_random_init	random\unix\apr_random.c	/^APR_DECLARE(void) apr_random_init(apr_random_t *g,apr_pool_t *p,$/;"	f
apr_random_pool_t	random\unix\apr_random.c	/^typedef struct apr_random_pool_t {$/;"	s	file:
apr_random_pool_t	random\unix\apr_random.c	/^} apr_random_pool_t;$/;"	t	typeref:struct:apr_random_pool_t	file:
apr_random_pool_t::bytes	random\unix\apr_random.c	/^    unsigned int bytes;$/;"	m	struct:apr_random_pool_t	file:
apr_random_pool_t::pool	random\unix\apr_random.c	/^    unsigned char *pool;$/;"	m	struct:apr_random_pool_t	file:
apr_random_pool_t::pool_size	random\unix\apr_random.c	/^    unsigned int pool_size;$/;"	m	struct:apr_random_pool_t	file:
apr_random_standard_new	random\unix\apr_random.c	/^APR_DECLARE(apr_random_t *) apr_random_standard_new(apr_pool_t *p)$/;"	f
apr_random_t	include\apr_random.h	/^typedef struct apr_random_t apr_random_t;$/;"	t	typeref:struct:apr_random_t
apr_random_t	random\unix\apr_random.c	/^struct apr_random_t {$/;"	s	file:
apr_random_t::H	random\unix\apr_random.c	/^    unsigned char *H;$/;"	m	struct:apr_random_t	file:
apr_random_t::H_waiting	random\unix\apr_random.c	/^    unsigned char *H_waiting;$/;"	m	struct:apr_random_t	file:
apr_random_t::apr_pool	random\unix\apr_random.c	/^    apr_pool_t *apr_pool;$/;"	m	struct:apr_random_t	file:
apr_random_t::g_for_insecure	random\unix\apr_random.c	/^    unsigned int g_for_insecure;$/;"	m	struct:apr_random_t	file:
apr_random_t::g_for_secure	random\unix\apr_random.c	/^    unsigned int g_for_secure;$/;"	m	struct:apr_random_t	file:
apr_random_t::generation	random\unix\apr_random.c	/^    unsigned int generation;$/;"	m	struct:apr_random_t	file:
apr_random_t::insecure_started	random\unix\apr_random.c	/^    unsigned int insecure_started:1;$/;"	m	struct:apr_random_t	file:
apr_random_t::key_hash	random\unix\apr_random.c	/^    apr_crypto_hash_t *key_hash;$/;"	m	struct:apr_random_t	file:
apr_random_t::next	random\unix\apr_random.c	/^    apr_random_t *next;$/;"	m	struct:apr_random_t	file:
apr_random_t::next_pool	random\unix\apr_random.c	/^    unsigned int next_pool;$/;"	m	struct:apr_random_t	file:
apr_random_t::npools	random\unix\apr_random.c	/^    unsigned int npools;$/;"	m	struct:apr_random_t	file:
apr_random_t::pool_hash	random\unix\apr_random.c	/^    apr_crypto_hash_t *pool_hash;$/;"	m	struct:apr_random_t	file:
apr_random_t::pools	random\unix\apr_random.c	/^    apr_random_pool_t *pools;$/;"	m	struct:apr_random_t	file:
apr_random_t::prng_hash	random\unix\apr_random.c	/^    apr_crypto_hash_t *prng_hash;$/;"	m	struct:apr_random_t	file:
apr_random_t::random_bytes	random\unix\apr_random.c	/^    apr_size_t random_bytes;$/;"	m	struct:apr_random_t	file:
apr_random_t::randomness	random\unix\apr_random.c	/^    unsigned char *randomness;$/;"	m	struct:apr_random_t	file:
apr_random_t::rehash_size	random\unix\apr_random.c	/^    apr_size_t rehash_size;$/;"	m	struct:apr_random_t	file:
apr_random_t::reseed_size	random\unix\apr_random.c	/^    apr_size_t reseed_size;$/;"	m	struct:apr_random_t	file:
apr_random_t::secure_base	random\unix\apr_random.c	/^    unsigned int secure_base;$/;"	m	struct:apr_random_t	file:
apr_random_t::secure_started	random\unix\apr_random.c	/^    unsigned int secure_started:1;$/;"	m	struct:apr_random_t	file:
apr_realloc_dbg	include\arch\win32\apr_arch_misc.h	/^static APR_INLINE void* apr_realloc_dbg(void* userData, size_t newSize,$/;"	f
apr_rfc822_date	time\unix\timestr.c	/^apr_status_t apr_rfc822_date(char *date_str, apr_time_t t)$/;"	f
apr_seek_where_t	include\apr_file_io.h	/^typedef int       apr_seek_where_t;$/;"	t
apr_set_netos_error	include\apr_errno.h	1019;"	d
apr_set_netos_error	include\apr_errno.h	1134;"	d
apr_set_netos_error	include\apr_errno.h	1199;"	d
apr_set_netos_error	include\apr_errno.h	856;"	d
apr_set_option	include\arch\unix\apr_arch_networkio.h	133;"	d
apr_set_option	include\arch\win32\apr_arch_networkio.h	81;"	d
apr_set_os_error	include\apr_errno.h	1014;"	d
apr_set_os_error	include\apr_errno.h	1130;"	d
apr_set_os_error	include\apr_errno.h	1194;"	d
apr_setup	test\sendfile.c	/^static void apr_setup(apr_pool_t **p, apr_socket_t **sock, int *family)$/;"	f	file:
apr_shm_baseaddr_get	shmem\beos\shm.c	/^APR_DECLARE(void *) apr_shm_baseaddr_get(const apr_shm_t *m)$/;"	f
apr_shm_baseaddr_get	shmem\os2\shm.c	/^APR_DECLARE(void *) apr_shm_baseaddr_get(const apr_shm_t *m)$/;"	f
apr_shm_baseaddr_get	shmem\unix\shm.c	/^APR_DECLARE(void *) apr_shm_baseaddr_get(const apr_shm_t *m)$/;"	f
apr_shm_baseaddr_get	shmem\win32\shm.c	/^APR_DECLARE(void *) apr_shm_baseaddr_get(const apr_shm_t *m)$/;"	f
apr_shm_t	include\apr_shm.h	/^typedef struct apr_shm_t apr_shm_t;$/;"	t	typeref:struct:apr_shm_t
apr_shm_t	include\arch\unix\apr_arch_shm.h	/^struct apr_shm_t {$/;"	s
apr_shm_t	shmem\beos\shm.c	/^struct apr_shm_t {$/;"	s	file:
apr_shm_t	shmem\os2\shm.c	/^struct apr_shm_t {$/;"	s	file:
apr_shm_t	shmem\win32\shm.c	/^struct apr_shm_t {$/;"	s	file:
apr_shm_t::aid	shmem\beos\shm.c	/^    area_id aid;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::avail	shmem\beos\shm.c	/^    apr_size_t avail;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::base	include\arch\unix\apr_arch_shm.h	/^    void *base;          \/* base real address *\/$/;"	m	struct:apr_shm_t
apr_shm_t::filename	include\arch\unix\apr_arch_shm.h	/^    const char *filename;      \/* NULL if anonymous *\/$/;"	m	struct:apr_shm_t
apr_shm_t::filename	shmem\win32\shm.c	/^    const char *filename;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::hMap	shmem\win32\shm.c	/^    HANDLE      hMap;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::length	shmem\win32\shm.c	/^    apr_size_t  length;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::memblk	shmem\win32\shm.c	/^    memblock_t *memblk;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::memblock	shmem\beos\shm.c	/^    void *memblock;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::memblock	shmem\os2\shm.c	/^    void *memblock;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::pool	include\arch\unix\apr_arch_shm.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t
apr_shm_t::pool	shmem\beos\shm.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::pool	shmem\os2\shm.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::pool	shmem\win32\shm.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::ptr	shmem\beos\shm.c	/^    void *ptr;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::realsize	include\arch\unix\apr_arch_shm.h	/^    apr_size_t realsize; \/* actual segment size *\/$/;"	m	struct:apr_shm_t
apr_shm_t::reqsize	include\arch\unix\apr_arch_shm.h	/^    apr_size_t reqsize;  \/* requested segment size *\/$/;"	m	struct:apr_shm_t
apr_shm_t::reqsize	shmem\beos\shm.c	/^    apr_size_t reqsize;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::shmid	include\arch\unix\apr_arch_shm.h	/^    int shmid;          \/* shmem ID returned from shmget() *\/$/;"	m	struct:apr_shm_t
apr_shm_t::size	shmem\win32\shm.c	/^    apr_size_t  size;$/;"	m	struct:apr_shm_t	file:
apr_shm_t::usable	include\arch\unix\apr_arch_shm.h	/^    void *usable;        \/* base usable address *\/$/;"	m	struct:apr_shm_t
apr_shm_t::usrmem	shmem\win32\shm.c	/^    void       *usrmem;$/;"	m	struct:apr_shm_t	file:
apr_short_interval_time_t	include\apr_time.h	/^typedef apr_int32_t apr_short_interval_time_t;$/;"	t
apr_shutdown_how_e	include\apr_network_io.h	/^} apr_shutdown_how_e;$/;"	t	typeref:enum:__anon10
apr_sigfunc_t	include\apr_signal.h	/^typedef void apr_sigfunc_t(int);$/;"	t
apr_signal	include\apr_signal.h	71;"	d
apr_signal	threadproc\unix\signals.c	/^APR_DECLARE(apr_sigfunc_t *) apr_signal(int signo, apr_sigfunc_t * func)$/;"	f
apr_signal_description_get	threadproc\netware\signals.c	/^const char *apr_signal_description_get(int signum)$/;"	f
apr_signal_description_get	threadproc\unix\signals.c	/^const char *apr_signal_description_get(int signum)$/;"	f
apr_signal_description_get	threadproc\win32\signals.c	/^APR_DECLARE(const char *) apr_signal_description_get(int signum)$/;"	f
apr_signal_init	threadproc\netware\signals.c	/^void apr_signal_init(apr_pool_t *pglobal)$/;"	f
apr_signal_init	threadproc\unix\signals.c	/^void apr_signal_init(apr_pool_t *pglobal)$/;"	f
apr_signal_init	threadproc\win32\signals.c	/^void apr_signal_init(apr_pool_t *pglobal)$/;"	f
apr_signum_t	include\apr_general.h	/^typedef int               apr_signum_t;$/;"	t
apr_sigwait	threadproc\unix\signals.c	30;"	d	file:
apr_sigwait	threadproc\unix\signals.c	32;"	d	file:
apr_size_t	include\apr.h	/^typedef  size_t      apr_size_t;$/;"	t
apr_sleep	time\unix\time.c	/^APR_DECLARE(void) apr_sleep(apr_interval_time_t t)$/;"	f
apr_sleep	time\win32\time.c	/^APR_DECLARE(void) apr_sleep(apr_interval_time_t t)$/;"	f
apr_snprintf	strings\apr_snprintf.c	/^APR_DECLARE_NONSTD(int) apr_snprintf(char *buf, apr_size_t len, $/;"	f
apr_sockaddr_equal	network_io\unix\sockaddr.c	/^APR_DECLARE(int) apr_sockaddr_equal(const apr_sockaddr_t *addr1,$/;"	f
apr_sockaddr_t	include\apr_network_io.h	/^struct apr_sockaddr_t {$/;"	s
apr_sockaddr_t	include\apr_network_io.h	/^typedef struct apr_sockaddr_t apr_sockaddr_t;$/;"	t	typeref:struct:apr_sockaddr_t
apr_sockaddr_t::__anon12::sas	include\apr_network_io.h	/^        struct sockaddr_storage sas;$/;"	m	union:apr_sockaddr_t::__anon12	typeref:struct:apr_sockaddr_t::__anon12::sockaddr_storage
apr_sockaddr_t::__anon12::sin	include\apr_network_io.h	/^        struct sockaddr_in sin;$/;"	m	union:apr_sockaddr_t::__anon12	typeref:struct:apr_sockaddr_t::__anon12::sockaddr_in
apr_sockaddr_t::__anon12::sin6	include\apr_network_io.h	/^        struct sockaddr_in6 sin6;$/;"	m	union:apr_sockaddr_t::__anon12	typeref:struct:apr_sockaddr_t::__anon12::sockaddr_in6
apr_sockaddr_t::addr_str_len	include\apr_network_io.h	/^    int addr_str_len;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::family	include\apr_network_io.h	/^    apr_int32_t family;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::hostname	include\apr_network_io.h	/^    char *hostname;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::ipaddr_len	include\apr_network_io.h	/^    int ipaddr_len;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::ipaddr_ptr	include\apr_network_io.h	/^    void *ipaddr_ptr;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::next	include\apr_network_io.h	/^    apr_sockaddr_t *next;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::pool	include\apr_network_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::port	include\apr_network_io.h	/^    apr_port_t port;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::sa	include\apr_network_io.h	/^    } sa;$/;"	m	struct:apr_sockaddr_t	typeref:union:apr_sockaddr_t::__anon12
apr_sockaddr_t::salen	include\apr_network_io.h	/^    apr_socklen_t salen;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_t::servname	include\apr_network_io.h	/^    char *servname;$/;"	m	struct:apr_sockaddr_t
apr_sockaddr_vars_set	network_io\unix\sockaddr.c	/^void apr_sockaddr_vars_set(apr_sockaddr_t *addr, int family, apr_port_t port)$/;"	f
apr_socket_accept	network_io\unix\sockets.c	/^apr_status_t apr_socket_accept(apr_socket_t **new, apr_socket_t *sock,$/;"	f
apr_socket_accept_filter	network_io\unix\sockopt.c	/^apr_status_t apr_socket_accept_filter(apr_socket_t *sock, char *name, $/;"	f
apr_socket_atmark	network_io\unix\sockopt.c	/^apr_status_t apr_socket_atmark(apr_socket_t *sock, int *atmark)$/;"	f
apr_socket_bind	network_io\unix\sockets.c	/^apr_status_t apr_socket_bind(apr_socket_t *sock, apr_sockaddr_t *sa)$/;"	f
apr_socket_close	network_io\unix\sockets.c	/^apr_status_t apr_socket_close(apr_socket_t *thesocket)$/;"	f
apr_socket_connect	network_io\unix\sockets.c	/^apr_status_t apr_socket_connect(apr_socket_t *sock, apr_sockaddr_t *sa)$/;"	f
apr_socket_create	network_io\unix\sockets.c	/^apr_status_t apr_socket_create(apr_socket_t **new, int ofamily, int type,$/;"	f
apr_socket_data_get	network_io\unix\sockets.c	/^apr_status_t apr_socket_data_get(void **data, const char *key, apr_socket_t *sock)$/;"	f
apr_socket_data_set	network_io\unix\sockets.c	/^apr_status_t apr_socket_data_set(apr_socket_t *sock, void *data, const char *key,$/;"	f
apr_socket_listen	network_io\unix\sockets.c	/^apr_status_t apr_socket_listen(apr_socket_t *sock, apr_int32_t backlog)$/;"	f
apr_socket_opt_get	network_io\unix\sockopt.c	/^apr_status_t apr_socket_opt_get(apr_socket_t *sock, $/;"	f
apr_socket_opt_set	network_io\unix\sockopt.c	/^apr_status_t apr_socket_opt_set(apr_socket_t *sock, $/;"	f
apr_socket_protocol_get	network_io\unix\sockets.c	/^apr_status_t apr_socket_protocol_get(apr_socket_t *sock, int *protocol)$/;"	f
apr_socket_recv	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_recv(apr_socket_t *sock, char *buf, apr_size_t *len)$/;"	f
apr_socket_recvfrom	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_recvfrom(apr_sockaddr_t *from, apr_socket_t *sock,$/;"	f
apr_socket_send	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_send(apr_socket_t *sock, const char *buf, $/;"	f
apr_socket_sendfile	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_sendfile(apr_socket_t * sock, apr_file_t * file,$/;"	f
apr_socket_sendfile	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_sendfile(apr_socket_t *sock, apr_file_t *file,$/;"	f
apr_socket_sendto	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_sendto(apr_socket_t *sock, apr_sockaddr_t *where,$/;"	f
apr_socket_sendv	network_io\unix\sendrecv.c	/^apr_status_t apr_socket_sendv(apr_socket_t * sock, const struct iovec *vec,$/;"	f
apr_socket_shutdown	network_io\unix\sockets.c	/^apr_status_t apr_socket_shutdown(apr_socket_t *thesocket, $/;"	f
apr_socket_t	include\apr_network_io.h	/^typedef struct apr_socket_t     apr_socket_t;$/;"	t	typeref:struct:apr_socket_t
apr_socket_t	include\arch\os2\apr_arch_networkio.h	/^struct apr_socket_t {$/;"	s
apr_socket_t	include\arch\unix\apr_arch_networkio.h	/^struct apr_socket_t {$/;"	s
apr_socket_t	include\arch\win32\apr_arch_networkio.h	/^struct apr_socket_t {$/;"	s
apr_socket_t::connected	include\arch\unix\apr_arch_networkio.h	/^    int connected;$/;"	m	struct:apr_socket_t
apr_socket_t::disconnected	include\arch\win32\apr_arch_networkio.h	/^    apr_int32_t         disconnected;$/;"	m	struct:apr_socket_t
apr_socket_t::inherit	include\arch\os2\apr_arch_networkio.h	/^    apr_int32_t inherit;$/;"	m	struct:apr_socket_t
apr_socket_t::inherit	include\arch\unix\apr_arch_networkio.h	/^    apr_int32_t inherit;$/;"	m	struct:apr_socket_t
apr_socket_t::inherit	include\arch\win32\apr_arch_networkio.h	/^    apr_int32_t         inherit;$/;"	m	struct:apr_socket_t
apr_socket_t::local_addr	include\arch\os2\apr_arch_networkio.h	/^    apr_sockaddr_t *local_addr;$/;"	m	struct:apr_socket_t
apr_socket_t::local_addr	include\arch\unix\apr_arch_networkio.h	/^    apr_sockaddr_t *local_addr;$/;"	m	struct:apr_socket_t
apr_socket_t::local_addr	include\arch\win32\apr_arch_networkio.h	/^    apr_sockaddr_t     *local_addr;$/;"	m	struct:apr_socket_t
apr_socket_t::local_interface_unknown	include\arch\os2\apr_arch_networkio.h	/^    int local_interface_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::local_interface_unknown	include\arch\unix\apr_arch_networkio.h	/^    int local_interface_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::local_interface_unknown	include\arch\win32\apr_arch_networkio.h	/^    int                 local_interface_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::local_port_unknown	include\arch\os2\apr_arch_networkio.h	/^    int local_port_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::local_port_unknown	include\arch\unix\apr_arch_networkio.h	/^    int local_port_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::local_port_unknown	include\arch\win32\apr_arch_networkio.h	/^    int                 local_port_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::nonblock	include\arch\os2\apr_arch_networkio.h	/^    int nonblock;$/;"	m	struct:apr_socket_t
apr_socket_t::options	include\arch\os2\apr_arch_networkio.h	/^    apr_int32_t options;$/;"	m	struct:apr_socket_t
apr_socket_t::options	include\arch\unix\apr_arch_networkio.h	/^    apr_int32_t options;$/;"	m	struct:apr_socket_t
apr_socket_t::options	include\arch\win32\apr_arch_networkio.h	/^    apr_int32_t         options;$/;"	m	struct:apr_socket_t
apr_socket_t::overlapped	include\arch\win32\apr_arch_networkio.h	/^    OVERLAPPED         *overlapped;$/;"	m	struct:apr_socket_t
apr_socket_t::pollset	include\arch\os2\apr_arch_networkio.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_socket_t
apr_socket_t::pollset	include\arch\unix\apr_arch_networkio.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_socket_t
apr_socket_t::pollset	include\arch\win32\apr_arch_networkio.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_socket_t
apr_socket_t::pool	include\arch\os2\apr_arch_networkio.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_socket_t
apr_socket_t::pool	include\arch\unix\apr_arch_networkio.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_socket_t
apr_socket_t::pool	include\arch\win32\apr_arch_networkio.h	/^    apr_pool_t         *pool;$/;"	m	struct:apr_socket_t
apr_socket_t::protocol	include\arch\os2\apr_arch_networkio.h	/^    int protocol;$/;"	m	struct:apr_socket_t
apr_socket_t::protocol	include\arch\unix\apr_arch_networkio.h	/^    int protocol;$/;"	m	struct:apr_socket_t
apr_socket_t::protocol	include\arch\win32\apr_arch_networkio.h	/^    int                 protocol;$/;"	m	struct:apr_socket_t
apr_socket_t::remote_addr	include\arch\os2\apr_arch_networkio.h	/^    apr_sockaddr_t *remote_addr;$/;"	m	struct:apr_socket_t
apr_socket_t::remote_addr	include\arch\unix\apr_arch_networkio.h	/^    apr_sockaddr_t *remote_addr;$/;"	m	struct:apr_socket_t
apr_socket_t::remote_addr	include\arch\win32\apr_arch_networkio.h	/^    apr_sockaddr_t     *remote_addr;$/;"	m	struct:apr_socket_t
apr_socket_t::remote_addr_unknown	include\arch\os2\apr_arch_networkio.h	/^    int remote_addr_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::remote_addr_unknown	include\arch\unix\apr_arch_networkio.h	/^    int remote_addr_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::remote_addr_unknown	include\arch\win32\apr_arch_networkio.h	/^    int                 remote_addr_unknown;$/;"	m	struct:apr_socket_t
apr_socket_t::socketdes	include\arch\os2\apr_arch_networkio.h	/^    int socketdes;$/;"	m	struct:apr_socket_t
apr_socket_t::socketdes	include\arch\unix\apr_arch_networkio.h	/^    int socketdes;$/;"	m	struct:apr_socket_t
apr_socket_t::socketdes	include\arch\win32\apr_arch_networkio.h	/^    SOCKET              socketdes;$/;"	m	struct:apr_socket_t
apr_socket_t::timeout	include\arch\os2\apr_arch_networkio.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_socket_t
apr_socket_t::timeout	include\arch\unix\apr_arch_networkio.h	/^    apr_interval_time_t timeout; $/;"	m	struct:apr_socket_t
apr_socket_t::timeout	include\arch\win32\apr_arch_networkio.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_socket_t
apr_socket_t::timeout_ms	include\arch\win32\apr_arch_networkio.h	/^    int                 timeout_ms; \/* MUST MATCH if timeout > 0 *\/$/;"	m	struct:apr_socket_t
apr_socket_t::type	include\arch\os2\apr_arch_networkio.h	/^    int type;$/;"	m	struct:apr_socket_t
apr_socket_t::type	include\arch\unix\apr_arch_networkio.h	/^    int type;$/;"	m	struct:apr_socket_t
apr_socket_t::type	include\arch\win32\apr_arch_networkio.h	/^    int                 type; \/* SOCK_STREAM, SOCK_DGRAM *\/$/;"	m	struct:apr_socket_t
apr_socket_t::userdata	include\arch\os2\apr_arch_networkio.h	/^    sock_userdata_t *userdata;$/;"	m	struct:apr_socket_t
apr_socket_t::userdata	include\arch\unix\apr_arch_networkio.h	/^    sock_userdata_t *userdata;$/;"	m	struct:apr_socket_t
apr_socket_t::userdata	include\arch\win32\apr_arch_networkio.h	/^    sock_userdata_t    *userdata;$/;"	m	struct:apr_socket_t
apr_socket_timeout_get	network_io\unix\sockopt.c	/^apr_status_t apr_socket_timeout_get(apr_socket_t *sock, apr_interval_time_t *t)$/;"	f
apr_socket_timeout_set	network_io\unix\sockopt.c	/^apr_status_t apr_socket_timeout_set(apr_socket_t *sock, apr_interval_time_t t)$/;"	f
apr_socket_type_get	network_io\unix\sockets.c	/^apr_status_t apr_socket_type_get(apr_socket_t *sock, int *type)$/;"	f
apr_socklen_t	include\apr.h	/^typedef  int         apr_socklen_t;$/;"	t
apr_ssize_t	include\apr.h	/^typedef  int         apr_ssize_t;$/;"	t
apr_ssize_t	include\apr.h	/^typedef  ptrdiff_t   apr_ssize_t;$/;"	t
apr_stat_entry_t	include\arch\netware\apr_arch_file_io.h	/^struct apr_stat_entry_t {$/;"	s
apr_stat_entry_t	include\arch\netware\apr_arch_file_io.h	/^typedef struct apr_stat_entry_t apr_stat_entry_t;$/;"	t	typeref:struct:apr_stat_entry_t
apr_stat_entry_t::casedName	include\arch\netware\apr_arch_file_io.h	/^    char *casedName;$/;"	m	struct:apr_stat_entry_t
apr_stat_entry_t::expire	include\arch\netware\apr_arch_file_io.h	/^    apr_time_t expire;$/;"	m	struct:apr_stat_entry_t
apr_stat_entry_t::info	include\arch\netware\apr_arch_file_io.h	/^    struct stat info;$/;"	m	struct:apr_stat_entry_t	typeref:struct:apr_stat_entry_t::stat
apr_stat_entry_t::pathCtx	include\arch\netware\apr_arch_file_io.h	/^    NXPathCtx_t pathCtx;$/;"	m	struct:apr_stat_entry_t
apr_status_t	include\apr_errno.h	/^typedef int apr_status_t;$/;"	t
apr_strerror	misc\unix\errorcodes.c	/^APR_DECLARE(char *) apr_strerror(apr_status_t statcode, char *buf,$/;"	f
apr_strfsize	strings\apr_strings.c	/^APR_DECLARE(char *) apr_strfsize(apr_off_t size, char *buf)$/;"	f
apr_strftime	time\unix\timestr.c	/^apr_status_t apr_strftime(char *s, apr_size_t *retsize, apr_size_t max, $/;"	f
apr_strnatcasecmp	strings\apr_strnatcmp.c	/^APR_DECLARE(int) apr_strnatcasecmp(char const *a, char const *b)$/;"	f
apr_strnatcmp	strings\apr_strnatcmp.c	/^APR_DECLARE(int) apr_strnatcmp(char const *a, char const *b)$/;"	f
apr_strtok	strings\apr_strtok.c	/^APR_DECLARE(char *) apr_strtok(char *str, const char *sep, char **last)$/;"	f
apr_table_add	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_add(apr_table_t *t, const char *key,$/;"	f
apr_table_addn	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_addn(apr_table_t *t, const char *key,$/;"	f
apr_table_cat	tables\apr_tables.c	/^static void apr_table_cat(apr_table_t *t, const apr_table_t *s)$/;"	f	file:
apr_table_clear	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_clear(apr_table_t *t)$/;"	f
apr_table_clone	tables\apr_tables.c	/^APR_DECLARE(apr_table_t *) apr_table_clone(apr_pool_t *p, const apr_table_t *t)$/;"	f
apr_table_compress	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_compress(apr_table_t *t, unsigned flags)$/;"	f
apr_table_copy	tables\apr_tables.c	/^APR_DECLARE(apr_table_t *) apr_table_copy(apr_pool_t *p, const apr_table_t *t)$/;"	f
apr_table_do	tables\apr_tables.c	/^APR_DECLARE_NONSTD(int) apr_table_do(apr_table_do_callback_fn_t *comp,$/;"	f
apr_table_do_callback_fn_t	include\apr_tables.h	/^typedef int (apr_table_do_callback_fn_t)(void *rec, const char *key, $/;"	t
apr_table_elts	tables\apr_tables.c	/^APR_DECLARE(const apr_array_header_t *) apr_table_elts(const apr_table_t *t)$/;"	f
apr_table_entry_t	include\apr_tables.h	/^struct apr_table_entry_t {$/;"	s
apr_table_entry_t	include\apr_tables.h	/^typedef struct apr_table_entry_t apr_table_entry_t;$/;"	t	typeref:struct:apr_table_entry_t
apr_table_entry_t::key	include\apr_tables.h	/^    char *key;          \/* maybe NULL in future;$/;"	m	struct:apr_table_entry_t
apr_table_entry_t::key_checksum	include\apr_tables.h	/^    apr_uint32_t key_checksum;$/;"	m	struct:apr_table_entry_t
apr_table_entry_t::val	include\apr_tables.h	/^    char *val;$/;"	m	struct:apr_table_entry_t
apr_table_get	tables\apr_tables.c	/^APR_DECLARE(const char *) apr_table_get(const apr_table_t *t, const char *key)$/;"	f
apr_table_make	tables\apr_tables.c	/^APR_DECLARE(apr_table_t *) apr_table_make(apr_pool_t *p, int nelts)$/;"	f
apr_table_merge	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_merge(apr_table_t *t, const char *key,$/;"	f
apr_table_mergen	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_mergen(apr_table_t *t, const char *key,$/;"	f
apr_table_overlap	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_overlap(apr_table_t *a, const apr_table_t *b,$/;"	f
apr_table_overlay	tables\apr_tables.c	/^APR_DECLARE(apr_table_t *) apr_table_overlay(apr_pool_t *p,$/;"	f
apr_table_set	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_set(apr_table_t *t, const char *key,$/;"	f
apr_table_setn	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_setn(apr_table_t *t, const char *key,$/;"	f
apr_table_t	include\apr_tables.h	/^typedef struct apr_table_t apr_table_t;$/;"	t	typeref:struct:apr_table_t
apr_table_t	tables\apr_tables.c	/^struct apr_table_t {$/;"	s	file:
apr_table_t::a	tables\apr_tables.c	/^    apr_array_header_t a;$/;"	m	struct:apr_table_t	file:
apr_table_t::creator	tables\apr_tables.c	/^    void *creator;$/;"	m	struct:apr_table_t	file:
apr_table_t::index_first	tables\apr_tables.c	/^    int index_first[TABLE_HASH_SIZE];$/;"	m	struct:apr_table_t	file:
apr_table_t::index_initialized	tables\apr_tables.c	/^    apr_uint32_t index_initialized;$/;"	m	struct:apr_table_t	file:
apr_table_t::index_last	tables\apr_tables.c	/^    int index_last[TABLE_HASH_SIZE];$/;"	m	struct:apr_table_t	file:
apr_table_unset	tables\apr_tables.c	/^APR_DECLARE(void) apr_table_unset(apr_table_t *t, const char *key)$/;"	f
apr_table_vdo	tables\apr_tables.c	/^APR_DECLARE(int) apr_table_vdo(apr_table_do_callback_fn_t *comp,$/;"	f
apr_terminate	misc\netware\start.c	/^APR_DECLARE_NONSTD(void) apr_terminate(void)$/;"	f
apr_terminate	misc\unix\start.c	/^APR_DECLARE_NONSTD(void) apr_terminate(void)$/;"	f
apr_terminate	misc\win32\start.c	/^APR_DECLARE_NONSTD(void) apr_terminate(void)$/;"	f
apr_terminate2	misc\netware\start.c	/^APR_DECLARE(void) apr_terminate2(void)$/;"	f
apr_terminate2	misc\unix\start.c	/^APR_DECLARE(void) apr_terminate2(void)$/;"	f
apr_terminate2	misc\win32\start.c	/^APR_DECLARE(void) apr_terminate2(void)$/;"	f
apr_thread_begin	threadproc\os2\thread.c	/^static void apr_thread_begin(void *arg)$/;"	f	file:
apr_thread_cond_t	include\apr_thread_cond.h	/^typedef struct apr_thread_cond_t apr_thread_cond_t;$/;"	t	typeref:struct:apr_thread_cond_t
apr_thread_cond_t	include\arch\beos\apr_arch_thread_cond.h	/^struct apr_thread_cond_t {$/;"	s
apr_thread_cond_t	include\arch\netware\apr_arch_thread_cond.h	/^struct apr_thread_cond_t {$/;"	s
apr_thread_cond_t	include\arch\os2\apr_arch_thread_cond.h	/^struct apr_thread_cond_t {$/;"	s
apr_thread_cond_t	include\arch\unix\apr_arch_thread_cond.h	/^struct apr_thread_cond_t {$/;"	s
apr_thread_cond_t	include\arch\win32\apr_arch_thread_cond.h	/^struct apr_thread_cond_t {$/;"	s
apr_thread_cond_t::alist	include\arch\beos\apr_arch_thread_cond.h	/^    APR_RING_HEAD(active_list, waiter_t) alist;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::cond	include\arch\netware\apr_arch_thread_cond.h	/^    NXCond_t *cond;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::cond	include\arch\unix\apr_arch_thread_cond.h	/^    pthread_cond_t cond;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::condlock	include\arch\beos\apr_arch_thread_cond.h	/^    apr_thread_mutex_t *condlock;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::csection	include\arch\win32\apr_arch_thread_cond.h	/^    CRITICAL_SECTION csection;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::flist	include\arch\beos\apr_arch_thread_cond.h	/^    APR_RING_HEAD(free_list,   waiter_t) flist;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::generation	include\arch\win32\apr_arch_thread_cond.h	/^    unsigned long generation;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::lock	include\arch\beos\apr_arch_thread_cond.h	/^    sem_id lock;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::num_waiting	include\arch\win32\apr_arch_thread_cond.h	/^    unsigned long num_waiting;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::num_wake	include\arch\win32\apr_arch_thread_cond.h	/^    unsigned long num_wake;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::owner	include\arch\beos\apr_arch_thread_cond.h	/^    thread_id owner;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::pool	include\arch\beos\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::pool	include\arch\netware\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::pool	include\arch\os2\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::pool	include\arch\unix\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::pool	include\arch\win32\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
apr_thread_cond_t::semaphore	include\arch\win32\apr_arch_thread_cond.h	/^    HANDLE semaphore;$/;"	m	struct:apr_thread_cond_t
apr_thread_create	threadproc\netware\thread.c	/^apr_status_t apr_thread_create(apr_thread_t **new,$/;"	f
apr_thread_data_get	threadproc\netware\thread.c	/^apr_status_t apr_thread_data_get(void **data, const char *key,$/;"	f
apr_thread_data_set	threadproc\netware\thread.c	/^apr_status_t apr_thread_data_set(void *data, const char *key,$/;"	f
apr_thread_detach	threadproc\netware\thread.c	/^apr_status_t apr_thread_detach(apr_thread_t *thd)$/;"	f
apr_thread_exit	threadproc\netware\thread.c	/^apr_status_t apr_thread_exit(apr_thread_t *thd,$/;"	f
apr_thread_join	threadproc\netware\thread.c	/^apr_status_t apr_thread_join(apr_status_t *retval,$/;"	f
apr_thread_mutex_t	include\apr_thread_mutex.h	/^typedef struct apr_thread_mutex_t apr_thread_mutex_t;$/;"	t	typeref:struct:apr_thread_mutex_t
apr_thread_mutex_t	include\arch\beos\apr_arch_thread_mutex.h	/^struct apr_thread_mutex_t {$/;"	s
apr_thread_mutex_t	include\arch\netware\apr_arch_thread_mutex.h	/^struct apr_thread_mutex_t {$/;"	s
apr_thread_mutex_t	include\arch\os2\apr_arch_thread_mutex.h	/^struct apr_thread_mutex_t {$/;"	s
apr_thread_mutex_t	include\arch\unix\apr_arch_thread_mutex.h	/^struct apr_thread_mutex_t {$/;"	s
apr_thread_mutex_t	include\arch\win32\apr_arch_thread_mutex.h	/^struct apr_thread_mutex_t {$/;"	s
apr_thread_mutex_t::Lock	include\arch\beos\apr_arch_thread_mutex.h	/^    sem_id Lock;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::LockCount	include\arch\beos\apr_arch_thread_mutex.h	/^    int32  LockCount;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::hMutex	include\arch\os2\apr_arch_thread_mutex.h	/^    HMTX hMutex;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::handle	include\arch\win32\apr_arch_thread_mutex.h	/^    HANDLE            handle;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::mutex	include\arch\netware\apr_arch_thread_mutex.h	/^    NXMutex_t *mutex;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::mutex	include\arch\unix\apr_arch_thread_mutex.h	/^    pthread_mutex_t mutex;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::nested	include\arch\beos\apr_arch_thread_mutex.h	/^    int nested;  $/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::owner	include\arch\beos\apr_arch_thread_mutex.h	/^    apr_os_thread_t owner;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::owner_ref	include\arch\beos\apr_arch_thread_mutex.h	/^    int owner_ref;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::pool	include\arch\beos\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::pool	include\arch\netware\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::pool	include\arch\os2\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::pool	include\arch\unix\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::pool	include\arch\win32\apr_arch_thread_mutex.h	/^    apr_pool_t       *pool;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::section	include\arch\win32\apr_arch_thread_mutex.h	/^    CRITICAL_SECTION  section;$/;"	m	struct:apr_thread_mutex_t
apr_thread_mutex_t::type	include\arch\win32\apr_arch_thread_mutex.h	/^    thread_mutex_type type;$/;"	m	struct:apr_thread_mutex_t
apr_thread_once_t	include\apr_thread_proc.h	/^typedef struct apr_thread_once_t      apr_thread_once_t;$/;"	t	typeref:struct:apr_thread_once_t
apr_thread_once_t	include\arch\beos\apr_arch_threadproc.h	/^struct apr_thread_once_t {$/;"	s
apr_thread_once_t	include\arch\netware\apr_arch_threadproc.h	/^struct apr_thread_once_t {$/;"	s
apr_thread_once_t	include\arch\os2\apr_arch_threadproc.h	/^struct apr_thread_once_t {$/;"	s
apr_thread_once_t	include\arch\unix\apr_arch_threadproc.h	/^struct apr_thread_once_t {$/;"	s
apr_thread_once_t	include\arch\win32\apr_arch_threadproc.h	/^struct apr_thread_once_t {$/;"	s
apr_thread_once_t::hit	include\arch\beos\apr_arch_threadproc.h	/^    int hit;$/;"	m	struct:apr_thread_once_t
apr_thread_once_t::hit	include\arch\os2\apr_arch_threadproc.h	/^    char hit;$/;"	m	struct:apr_thread_once_t
apr_thread_once_t::once	include\arch\unix\apr_arch_threadproc.h	/^    pthread_once_t once;$/;"	m	struct:apr_thread_once_t
apr_thread_once_t::sem	include\arch\beos\apr_arch_threadproc.h	/^    sem_id sem;$/;"	m	struct:apr_thread_once_t
apr_thread_once_t::sem	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long sem;$/;"	m	struct:apr_thread_once_t
apr_thread_once_t::value	include\arch\netware\apr_arch_threadproc.h	/^    unsigned long value;$/;"	m	struct:apr_thread_once_t
apr_thread_once_t::value	include\arch\win32\apr_arch_threadproc.h	/^    long value;$/;"	m	struct:apr_thread_once_t
apr_thread_rwlock_rdlock_core	locks\win32\thread_rwlock.c	/^static apr_status_t apr_thread_rwlock_rdlock_core(apr_thread_rwlock_t *rwlock,$/;"	f	file:
apr_thread_rwlock_t	include\apr_thread_rwlock.h	/^typedef struct apr_thread_rwlock_t apr_thread_rwlock_t;$/;"	t	typeref:struct:apr_thread_rwlock_t
apr_thread_rwlock_t	include\arch\beos\apr_arch_thread_rwlock.h	/^struct apr_thread_rwlock_t {$/;"	s
apr_thread_rwlock_t	include\arch\netware\apr_arch_thread_rwlock.h	/^struct apr_thread_rwlock_t {$/;"	s
apr_thread_rwlock_t	include\arch\os2\apr_arch_thread_rwlock.h	/^struct apr_thread_rwlock_t {$/;"	s
apr_thread_rwlock_t	include\arch\unix\apr_arch_thread_rwlock.h	/^struct apr_thread_rwlock_t {$/;"	s
apr_thread_rwlock_t	include\arch\win32\apr_arch_thread_rwlock.h	/^struct apr_thread_rwlock_t {$/;"	s
apr_thread_rwlock_t::Lock	include\arch\beos\apr_arch_thread_rwlock.h	/^    sem_id Lock;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::LockCount	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  LockCount;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::Nested	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  Nested;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::Read	include\arch\beos\apr_arch_thread_rwlock.h	/^    sem_id Read;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::ReadCount	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  ReadCount;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::Write	include\arch\beos\apr_arch_thread_rwlock.h	/^    sem_id Write;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::WriteCount	include\arch\beos\apr_arch_thread_rwlock.h	/^    int32  WriteCount;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::pool	include\arch\beos\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::pool	include\arch\netware\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::pool	include\arch\os2\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::pool	include\arch\unix\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::pool	include\arch\win32\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::read_done	include\arch\os2\apr_arch_thread_rwlock.h	/^    HEV read_done;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::read_event	include\arch\win32\apr_arch_thread_rwlock.h	/^    HANDLE      read_event;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::readers	include\arch\os2\apr_arch_thread_rwlock.h	/^    int readers;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::readers	include\arch\win32\apr_arch_thread_rwlock.h	/^    LONG        readers;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::rwlock	include\arch\netware\apr_arch_thread_rwlock.h	/^    NXRwLock_t *rwlock;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::rwlock	include\arch\unix\apr_arch_thread_rwlock.h	/^    pthread_rwlock_t rwlock;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::write_lock	include\arch\os2\apr_arch_thread_rwlock.h	/^    HMTX write_lock;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::write_mutex	include\arch\win32\apr_arch_thread_rwlock.h	/^    HANDLE      write_mutex;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_t::writer	include\arch\beos\apr_arch_thread_rwlock.h	/^    thread_id writer;$/;"	m	struct:apr_thread_rwlock_t
apr_thread_rwlock_wrlock_core	locks\win32\thread_rwlock.c	/^apr_thread_rwlock_wrlock_core(apr_thread_rwlock_t *rwlock, DWORD milliseconds)$/;"	f	file:
apr_thread_start_t	include\apr_thread_proc.h	/^typedef void *(APR_THREAD_FUNC *apr_thread_start_t)(apr_thread_t*, void*);$/;"	t
apr_thread_t	include\apr_thread_proc.h	/^typedef struct apr_thread_t           apr_thread_t;$/;"	t	typeref:struct:apr_thread_t
apr_thread_t	include\arch\beos\apr_arch_threadproc.h	/^struct apr_thread_t {$/;"	s
apr_thread_t	include\arch\netware\apr_arch_threadproc.h	/^struct apr_thread_t {$/;"	s
apr_thread_t	include\arch\os2\apr_arch_threadproc.h	/^struct apr_thread_t {$/;"	s
apr_thread_t	include\arch\unix\apr_arch_threadproc.h	/^struct apr_thread_t {$/;"	s
apr_thread_t	include\arch\win32\apr_arch_threadproc.h	/^struct apr_thread_t {$/;"	s
apr_thread_t::attr	include\arch\os2\apr_arch_threadproc.h	/^    struct apr_threadattr_t *attr;$/;"	m	struct:apr_thread_t	typeref:struct:apr_thread_t::apr_threadattr_t
apr_thread_t::cancel	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t cancel;$/;"	m	struct:apr_thread_t
apr_thread_t::cancel	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t cancel;$/;"	m	struct:apr_thread_t
apr_thread_t::cancel_how	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t cancel_how;$/;"	m	struct:apr_thread_t
apr_thread_t::cancel_how	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t cancel_how;$/;"	m	struct:apr_thread_t
apr_thread_t::ctx	include\arch\netware\apr_arch_threadproc.h	/^    NXContext_t ctx;$/;"	m	struct:apr_thread_t
apr_thread_t::data	include\arch\beos\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
apr_thread_t::data	include\arch\netware\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
apr_thread_t::data	include\arch\os2\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
apr_thread_t::data	include\arch\unix\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
apr_thread_t::data	include\arch\win32\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
apr_thread_t::exitval	include\arch\beos\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
apr_thread_t::exitval	include\arch\netware\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
apr_thread_t::exitval	include\arch\os2\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
apr_thread_t::exitval	include\arch\unix\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
apr_thread_t::exitval	include\arch\win32\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
apr_thread_t::func	include\arch\beos\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
apr_thread_t::func	include\arch\netware\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
apr_thread_t::func	include\arch\os2\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
apr_thread_t::func	include\arch\unix\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
apr_thread_t::func	include\arch\win32\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
apr_thread_t::pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
apr_thread_t::pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
apr_thread_t::pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
apr_thread_t::pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
apr_thread_t::pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
apr_thread_t::td	include\arch\beos\apr_arch_threadproc.h	/^    thread_id td;$/;"	m	struct:apr_thread_t
apr_thread_t::td	include\arch\netware\apr_arch_threadproc.h	/^    NXThreadId_t td;$/;"	m	struct:apr_thread_t
apr_thread_t::td	include\arch\unix\apr_arch_threadproc.h	/^    pthread_t *td;$/;"	m	struct:apr_thread_t
apr_thread_t::td	include\arch\win32\apr_arch_threadproc.h	/^    HANDLE td;$/;"	m	struct:apr_thread_t
apr_thread_t::thread_name	include\arch\netware\apr_arch_threadproc.h	/^    char *thread_name;$/;"	m	struct:apr_thread_t
apr_thread_t::tid	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long tid;$/;"	m	struct:apr_thread_t
apr_thread_yield	threadproc\beos\thread.c	/^void apr_thread_yield()$/;"	f
apr_thread_yield	threadproc\netware\thread.c	/^void apr_thread_yield()$/;"	f
apr_thread_yield	threadproc\os2\thread.c	/^void apr_thread_yield()$/;"	f
apr_thread_yield	threadproc\unix\thread.c	/^APR_DECLARE(void) apr_thread_yield(void)$/;"	f
apr_thread_yield	threadproc\win32\thread.c	/^APR_DECLARE(void) apr_thread_yield()$/;"	f
apr_threadattr_create	threadproc\netware\thread.c	/^apr_status_t apr_threadattr_create(apr_threadattr_t **new,$/;"	f
apr_threadattr_detach_get	threadproc\netware\thread.c	/^apr_status_t apr_threadattr_detach_get(apr_threadattr_t *attr)$/;"	f
apr_threadattr_detach_set	threadproc\netware\thread.c	/^apr_status_t apr_threadattr_detach_set(apr_threadattr_t *attr,apr_int32_t on)$/;"	f
apr_threadattr_t	include\apr_thread_proc.h	/^typedef struct apr_threadattr_t       apr_threadattr_t;$/;"	t	typeref:struct:apr_threadattr_t
apr_threadattr_t	include\arch\beos\apr_arch_threadproc.h	/^struct apr_threadattr_t {$/;"	s
apr_threadattr_t	include\arch\netware\apr_arch_threadproc.h	/^struct apr_threadattr_t {$/;"	s
apr_threadattr_t	include\arch\os2\apr_arch_threadproc.h	/^struct apr_threadattr_t {$/;"	s
apr_threadattr_t	include\arch\unix\apr_arch_threadproc.h	/^struct apr_threadattr_t {$/;"	s
apr_threadattr_t	include\arch\win32\apr_arch_threadproc.h	/^struct apr_threadattr_t {$/;"	s
apr_threadattr_t::attr	include\arch\beos\apr_arch_threadproc.h	/^    int32 attr;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::attr	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long attr;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::attr	include\arch\unix\apr_arch_threadproc.h	/^    pthread_attr_t attr;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::detach	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t detach;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::detach	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t detach;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::detached	include\arch\beos\apr_arch_threadproc.h	/^    int detached;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::joinable	include\arch\beos\apr_arch_threadproc.h	/^    int joinable;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::stack_size	include\arch\netware\apr_arch_threadproc.h	/^    apr_size_t  stack_size;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::stacksize	include\arch\os2\apr_arch_threadproc.h	/^    apr_size_t stacksize;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::stacksize	include\arch\win32\apr_arch_threadproc.h	/^    apr_size_t stacksize;$/;"	m	struct:apr_threadattr_t
apr_threadattr_t::thread_name	include\arch\netware\apr_arch_threadproc.h	/^    char *thread_name;$/;"	m	struct:apr_threadattr_t
apr_threadkey_data_get	threadproc\netware\threadpriv.c	/^apr_status_t apr_threadkey_data_get(void **data, const char *key, apr_threadkey_t *threadkey)$/;"	f
apr_threadkey_data_set	threadproc\netware\threadpriv.c	/^apr_status_t apr_threadkey_data_set(void *data,$/;"	f
apr_threadkey_private_create	threadproc\netware\threadpriv.c	/^apr_status_t apr_threadkey_private_create(apr_threadkey_t **key, $/;"	f
apr_threadkey_private_delete	threadproc\netware\threadpriv.c	/^apr_status_t apr_threadkey_private_delete(apr_threadkey_t *key)$/;"	f
apr_threadkey_private_get	threadproc\netware\threadpriv.c	/^apr_status_t apr_threadkey_private_get(void **new, apr_threadkey_t *key)$/;"	f
apr_threadkey_private_set	threadproc\netware\threadpriv.c	/^apr_status_t apr_threadkey_private_set(void *priv, apr_threadkey_t *key)$/;"	f
apr_threadkey_t	include\apr_thread_proc.h	/^typedef struct apr_threadkey_t        apr_threadkey_t;$/;"	t	typeref:struct:apr_threadkey_t
apr_threadkey_t	include\arch\beos\apr_arch_threadproc.h	/^struct apr_threadkey_t {$/;"	s
apr_threadkey_t	include\arch\netware\apr_arch_threadproc.h	/^struct apr_threadkey_t {$/;"	s
apr_threadkey_t	include\arch\os2\apr_arch_threadproc.h	/^struct apr_threadkey_t {$/;"	s
apr_threadkey_t	include\arch\unix\apr_arch_threadproc.h	/^struct apr_threadkey_t {$/;"	s
apr_threadkey_t	include\arch\win32\apr_arch_threadproc.h	/^struct apr_threadkey_t {$/;"	s
apr_threadkey_t::key	include\arch\beos\apr_arch_threadproc.h	/^	int32  key;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::key	include\arch\netware\apr_arch_threadproc.h	/^    NXKey_t key;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::key	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long *key;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::key	include\arch\unix\apr_arch_threadproc.h	/^    pthread_key_t key;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::key	include\arch\win32\apr_arch_threadproc.h	/^    DWORD key;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
apr_threadkey_t::pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
apr_threadproc_init	threadproc\win32\proc.c	/^apr_status_t apr_threadproc_init(apr_pool_t *pool)$/;"	f
apr_time_as_msec	include\apr_time.h	73;"	d
apr_time_clock_hires	time\unix\time.c	/^APR_DECLARE(void) apr_time_clock_hires(apr_pool_t *p)$/;"	f
apr_time_clock_hires	time\win32\time.c	/^APR_DECLARE(void) apr_time_clock_hires(apr_pool_t *p)$/;"	f
apr_time_exp_t	include\apr_time.h	/^struct apr_time_exp_t {$/;"	s
apr_time_exp_t	include\apr_time.h	/^typedef struct apr_time_exp_t apr_time_exp_t;$/;"	t	typeref:struct:apr_time_exp_t
apr_time_exp_t::tm_gmtoff	include\apr_time.h	/^    apr_int32_t tm_gmtoff;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_hour	include\apr_time.h	/^    apr_int32_t tm_hour;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_isdst	include\apr_time.h	/^    apr_int32_t tm_isdst;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_mday	include\apr_time.h	/^    apr_int32_t tm_mday;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_min	include\apr_time.h	/^    apr_int32_t tm_min;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_mon	include\apr_time.h	/^    apr_int32_t tm_mon;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_sec	include\apr_time.h	/^    apr_int32_t tm_sec;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_usec	include\apr_time.h	/^    apr_int32_t tm_usec;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_wday	include\apr_time.h	/^    apr_int32_t tm_wday;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_yday	include\apr_time.h	/^    apr_int32_t tm_yday;$/;"	m	struct:apr_time_exp_t
apr_time_exp_t::tm_year	include\apr_time.h	/^    apr_int32_t tm_year;$/;"	m	struct:apr_time_exp_t
apr_time_from_msec	include\apr_time.h	76;"	d
apr_time_from_sec	include\apr_time.h	79;"	d
apr_time_make	include\apr_time.h	82;"	d
apr_time_msec	include\apr_time.h	70;"	d
apr_time_sec	include\apr_time.h	64;"	d
apr_time_t	include\apr_time.h	/^typedef apr_int64_t apr_time_t;$/;"	t
apr_time_usec	include\apr_time.h	67;"	d
apr_tolower	include\apr_lib.h	231;"	d
apr_toupper	include\apr_lib.h	233;"	d
apr_uid_compare	include\apr_user.h	113;"	d
apr_uid_t	include\apr_user.h	/^typedef PSID                      apr_uid_t;$/;"	t
apr_uid_t	include\apr_user.h	/^typedef uid_t                     apr_uid_t;$/;"	t
apr_uint16_t	include\apr.h	/^typedef  unsigned short    apr_uint16_t;$/;"	t
apr_uint32_t	include\apr.h	/^typedef  unsigned int      apr_uint32_t;$/;"	t
apr_uint64_t	include\apr.h	/^typedef  unsigned __int64  apr_uint64_t;$/;"	t
apr_uintptr_t	include\apr.h	/^typedef  apr_uint32_t            apr_uintptr_t;$/;"	t
apr_uintptr_t	include\apr.h	/^typedef  apr_uint64_t            apr_uintptr_t;$/;"	t
apr_unix_child_file_cleanup	file_io\unix\open.c	/^apr_status_t apr_unix_child_file_cleanup(void *thefile)$/;"	f
apr_unix_file_cleanup	file_io\unix\open.c	/^apr_status_t apr_unix_file_cleanup(void *thefile)$/;"	f
apr_unix_mode2perms	file_io\unix\fileacc.c	/^apr_fileperms_t apr_unix_mode2perms(mode_t mode)$/;"	f
apr_unix_perms2mode	file_io\unix\fileacc.c	/^mode_t apr_unix_perms2mode(apr_fileperms_t perms)$/;"	f
apr_unix_setup_time	time\unix\time.c	/^APR_DECLARE(void) apr_unix_setup_time(void)$/;"	f
apr_version	misc\unix\version.c	/^APR_DECLARE(void) apr_version(apr_version_t *pvsn)$/;"	f
apr_version_string	misc\unix\version.c	/^APR_DECLARE(const char *) apr_version_string(void)$/;"	f
apr_version_t	include\apr_version.h	/^} apr_version_t;$/;"	t	typeref:struct:__anon21
apr_vformatter	strings\apr_snprintf.c	/^APR_DECLARE(int) apr_vformatter(int (*flush_func)(apr_vformatter_buff_t *),$/;"	f
apr_vformatter_buff_t	include\apr_lib.h	/^struct apr_vformatter_buff_t {$/;"	s
apr_vformatter_buff_t	include\apr_lib.h	/^typedef struct apr_vformatter_buff_t apr_vformatter_buff_t;$/;"	t	typeref:struct:apr_vformatter_buff_t
apr_vformatter_buff_t::curpos	include\apr_lib.h	/^    char *curpos;$/;"	m	struct:apr_vformatter_buff_t
apr_vformatter_buff_t::endpos	include\apr_lib.h	/^    char *endpos;$/;"	m	struct:apr_vformatter_buff_t
apr_vsnprintf	strings\apr_snprintf.c	/^APR_DECLARE(int) apr_vsnprintf(char *buf, apr_size_t len, const char *format,$/;"	f
apr_wait_for_io_or_timeout	support\unix\waitio.c	/^apr_status_t apr_wait_for_io_or_timeout(apr_file_t *f, apr_socket_t *s,$/;"	f
apr_wait_how_e	include\apr_thread_proc.h	/^} apr_wait_how_e;$/;"	t	typeref:enum:__anon18
apr_wait_t	include\apr.h	/^typedef int apr_wait_t;$/;"	t
apr_wastrtoastr	misc\win32\internal.c	/^int apr_wastrtoastr(char const * const * *retarr, $/;"	f
apr_wchar_t	include\arch\win32\apr_arch_utf8.h	/^typedef apr_uint16_t apr_wchar_t;$/;"	t
arc4random	file_io\unix\mktemp.c	64;"	d	file:
arc4random	file_io\unix\mktemp.c	70;"	d	file:
area	include\apr_mmap.h	/^    area_id area;$/;"	m	struct:apr_mmap_t
argc	include\apr_getopt.h	/^    int argc;$/;"	m	struct:apr_getopt_t
arglist	build\aplibtool.c	/^    char *arglist[1024];$/;"	m	struct:__anon1	file:
arglist	build\jlibtool.c	/^    count_chars *arglist;$/;"	m	struct:__anon6	file:
argv	include\apr_getopt.h	/^    const char **argv;$/;"	m	struct:apr_getopt_t
arr	include\apr_tables.h	/^APR_DECLARE(void *) apr_array_pop(apr_array_header_t *arr);$/;"	v
arr	include\apr_tables.h	/^APR_DECLARE(void *) apr_array_push(apr_array_header_t *arr);$/;"	v
arr	include\apr_tables.h	/^APR_DECLARE(void) apr_array_clear(apr_array_header_t *arr);$/;"	v
array	include\arch\unix\apr_arch_proc_mutex.h	/^    unsigned short *array;$/;"	m	union:semun
array	tables\apr_hash.c	/^    apr_hash_entry_t   **array;$/;"	m	struct:apr_hash_t	file:
array_clear	test\testtable.c	/^static void array_clear(abts_case *tc, void *data)$/;"	f	file:
assigned	include\arch\beos\apr_arch_threadproc.h	/^	int  assigned;$/;"	m	struct:beos_key
atime	include\apr_file_info.h	/^    apr_time_t atime;$/;"	m	struct:apr_finfo_t
atime_t	include\arch\win32\apr_arch_atime.h	/^struct atime_t {$/;"	s
atime_t::cntxt	include\arch\win32\apr_arch_atime.h	/^    apr_pool_t *cntxt;$/;"	m	struct:atime_t
atime_t::currtime	include\arch\win32\apr_arch_atime.h	/^    apr_time_t currtime;$/;"	m	struct:atime_t
atime_t::explodedtime	include\arch\win32\apr_arch_atime.h	/^    SYSTEMTIME *explodedtime;$/;"	m	struct:atime_t
atomic_add	atomic\unix\s390.c	/^static APR_INLINE apr_uint32_t atomic_add(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f	file:
atomic_cleanup	atomic\unix\mutex.c	/^static apr_status_t atomic_cleanup(void *data)$/;"	f	file:
atomic_ops	test\testatomic.c	/^volatile apr_uint32_t atomic_ops = 0;$/;"	v
atomic_sub	atomic\unix\s390.c	/^static APR_INLINE apr_uint32_t atomic_sub(volatile apr_uint32_t *mem, apr_uint32_t val)$/;"	f	file:
attr	include\apr_thread_proc.h	/^APR_DECLARE(apr_status_t) apr_threadattr_detach_get(apr_threadattr_t *attr);$/;"	v
attr	include\arch\beos\apr_arch_threadproc.h	/^    int32 attr;$/;"	m	struct:apr_threadattr_t
attr	include\arch\os2\apr_arch_threadproc.h	/^    struct apr_threadattr_t *attr;$/;"	m	struct:apr_thread_t	typeref:struct:apr_thread_t::apr_threadattr_t
attr	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long attr;$/;"	m	struct:apr_threadattr_t
attr	include\arch\unix\apr_arch_threadproc.h	/^    pthread_attr_t attr;$/;"	m	struct:apr_threadattr_t
attr_cleanup	threadproc\win32\proc.c	/^static apr_status_t attr_cleanup(void *theattr)$/;"	f	file:
avail	shmem\beos\shm.c	/^    apr_size_t avail;$/;"	m	struct:apr_shm_t	file:
avg	test\sockperf.c	/^    apr_time_t avg;$/;"	m	struct:testResult	file:
avoid_zombies	threadproc\unix\signals.c	/^static void avoid_zombies(int signo)$/;"	f	file:
await_child	test\testprocmutex.c	/^static void await_child(abts_case *tc, apr_proc_t *proc)$/;"	f	file:
base	include\arch\unix\apr_arch_shm.h	/^    void *base;          \/* base real address *\/$/;"	m	struct:apr_shm_t
basename	build\jlibtool.c	/^    char *basename;$/;"	m	struct:__anon6	file:
beginp	memory\unix\apr_pools.c	/^    void         *beginp[64];$/;"	m	struct:debug_node_t	file:
ben	include\apr_portable.h	/^	int32  ben;$/;"	m	struct:apr_os_proc_mutex_t
ben_lock	include\arch\beos\apr_arch_threadproc.h	/^	int32  ben_lock;$/;"	m	struct:beos_key
beos_data	threadproc\beos\threadpriv.c	/^static struct beos_private_data *beos_data[BEOS_MAX_DATAKEYS];$/;"	v	typeref:struct:beos_private_data	file:
beos_key	include\arch\beos\apr_arch_threadproc.h	/^struct beos_key {$/;"	s
beos_key::assigned	include\arch\beos\apr_arch_threadproc.h	/^	int  assigned;$/;"	m	struct:beos_key
beos_key::ben_lock	include\arch\beos\apr_arch_threadproc.h	/^	int32  ben_lock;$/;"	m	struct:beos_key
beos_key::count	include\arch\beos\apr_arch_threadproc.h	/^	int  count;$/;"	m	struct:beos_key
beos_key::destructor	include\arch\beos\apr_arch_threadproc.h	/^	void (* destructor) (void *);$/;"	m	struct:beos_key
beos_key::lock	include\arch\beos\apr_arch_threadproc.h	/^	sem_id  lock;$/;"	m	struct:beos_key
beos_private_data	include\arch\beos\apr_arch_threadproc.h	/^struct beos_private_data {$/;"	s
beos_private_data::count	include\arch\beos\apr_arch_threadproc.h	/^	int count;$/;"	m	struct:beos_private_data
beos_private_data::data	include\arch\beos\apr_arch_threadproc.h	/^	const void ** data;$/;"	m	struct:beos_private_data
beos_private_data::td	include\arch\beos\apr_arch_threadproc.h	/^	volatile thread_id  td;$/;"	m	struct:beos_private_data
bind	include\arch\os2\apr_arch_os2calls.h	45;"	d
bitcount	random\unix\sha2.h	/^        apr_uint64_t    bitcount;$/;"	m	struct:_SHA256_CTX
bitcount	random\unix\sha2.h	/^        apr_uint64_t    bitcount[2];$/;"	m	struct:_SHA512_CTX
bits	test\testfileinfo.c	/^    apr_int32_t bits;$/;"	m	struct:view_fileinfo	file:
blocking	include\arch\netware\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	m	struct:apr_file_t	typeref:enum:apr_file_t::__anon22
blocking	include\arch\os2\apr_arch_file_io.h	/^    enum { BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	m	struct:apr_file_t	typeref:enum:apr_file_t::__anon23
blocking	include\arch\unix\apr_arch_file_io.h	/^    enum {BLK_UNKNOWN, BLK_OFF, BLK_ON } blocking;$/;"	m	struct:apr_file_t	typeref:enum:apr_file_t::__anon24
bof	include\arch\win32\apr_arch_file_io.h	/^    int bof;$/;"	m	struct:apr_dir_t
bool	build\aplibtool.c	/^typedef char bool;$/;"	t	file:
boolean_e	strings\apr_snprintf.c	/^} boolean_e;$/;"	t	typeref:enum:__anon33	file:
boundary_index	memory\unix\apr_pools.c	/^static unsigned int boundary_index;$/;"	v	file:
boundary_size	memory\unix\apr_pools.c	/^static unsigned int boundary_size;$/;"	v	file:
boxes	test\testshm.h	/^mbox *boxes;$/;"	v
broadcast_threads	test\testcond.c	/^static void broadcast_threads(abts_case *tc, void *data)$/;"	f	file:
buf	file_io\unix\readwrite.c	/^    char *buf;$/;"	m	struct:apr_file_printf_data	file:
buf	file_io\win32\readwrite.c	/^    char *buf;$/;"	m	struct:apr_file_printf_data	file:
buf	include\arch\unix\apr_arch_proc_mutex.h	/^    struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds
buf	include\arch\win32\apr_arch_networkio.h	/^    char FAR *  buf;     \/* the pointer to the buffer *\/$/;"	m	struct:_WSABUF
buff	test\testlock.c	/^static int buff[MAX_COUNTER];$/;"	v	file:
buffer	include\arch\netware\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
buffer	include\arch\os2\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
buffer	include\arch\unix\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
buffer	include\arch\win32\apr_arch_file_io.h	/^    char *buffer;$/;"	m	struct:apr_file_t
buffer	random\unix\sha2.h	/^        apr_byte_t      buffer[SHA256_BLOCK_LENGTH];$/;"	m	struct:_SHA256_CTX
buffer	random\unix\sha2.h	/^        apr_byte_t      buffer[SHA512_BLOCK_LENGTH];$/;"	m	struct:_SHA512_CTX
buffered	include\arch\netware\apr_arch_file_io.h	/^    int buffered;$/;"	m	struct:apr_file_t
buffered	include\arch\os2\apr_arch_file_io.h	/^    int buffered;$/;"	m	struct:apr_file_t
buffered	include\arch\unix\apr_arch_file_io.h	/^    int buffered;$/;"	m	struct:apr_file_t
buffered	include\arch\win32\apr_arch_file_io.h	/^    BOOLEAN buffered;          \/\/ Use buffered I\/O?$/;"	m	struct:apr_file_t
bufpos	include\arch\netware\apr_arch_file_io.h	/^    apr_size_t bufpos;    \/* Read\/Write position in buffer *\/$/;"	m	struct:apr_file_t
bufpos	include\arch\os2\apr_arch_file_io.h	/^    apr_size_t bufpos;         \/* Read\/Write position in buffer             *\/$/;"	m	struct:apr_file_t
bufpos	include\arch\unix\apr_arch_file_io.h	/^    apr_size_t bufpos;        \/* Read\/Write position in buffer *\/$/;"	m	struct:apr_file_t
bufpos	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t bufpos;         \/\/ Read\/Write position in buffer$/;"	m	struct:apr_file_t
bufsize	include\arch\netware\apr_arch_file_io.h	/^    apr_size_t bufsize;   \/* The buffer size *\/$/;"	m	struct:apr_file_t
bufsize	include\arch\os2\apr_arch_file_io.h	/^    apr_size_t bufsize;        \/* Read\/Write position in buffer             *\/$/;"	m	struct:apr_file_t
bufsize	include\arch\unix\apr_arch_file_io.h	/^    apr_size_t bufsize;       \/* The size of the buffer *\/$/;"	m	struct:apr_file_t
bufsize	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t bufsize;        \/\/ The size of the buffer$/;"	m	struct:apr_file_t
busyloop_add32	test\testatomic.c	/^static void busyloop_add32(tbox_t *tbox)$/;"	f	file:
busyloop_cas32	test\testatomic.c	/^static void busyloop_cas32(tbox_t *tbox)$/;"	f	file:
busyloop_dec32	test\testatomic.c	/^static void busyloop_dec32(tbox_t *tbox)$/;"	f	file:
busyloop_inc32	test\testatomic.c	/^static void busyloop_inc32(tbox_t *tbox)$/;"	f	file:
busyloop_read32	test\testatomic.c	/^static APR_INLINE void busyloop_read32(tbox_t *tbox)$/;"	f	file:
busyloop_set32	test\testatomic.c	/^static void busyloop_set32(tbox_t *tbox)$/;"	f	file:
busyloop_sub32	test\testatomic.c	/^static void busyloop_sub32(tbox_t *tbox)$/;"	f	file:
busyloop_xchg32	test\testatomic.c	/^static void busyloop_xchg32(tbox_t *tbox)$/;"	f	file:
bytes	random\unix\apr_random.c	/^    unsigned int bytes;$/;"	m	struct:apr_random_pool_t	file:
c	test\sockperf.c	/^    char c;$/;"	m	struct:testSet	file:
c_is_fnchar	file_io\os2\filesys.c	/^const char c_is_fnchar[256] =$/;"	v
call_port_getn	poll\unix\port.c	/^static apr_status_t call_port_getn(int port, port_event_t list[], $/;"	f	file:
call_resolver	network_io\unix\sockaddr.c	/^static apr_status_t call_resolver(apr_sockaddr_t **sa,$/;"	f	file:
calloc_bytes	test\testpools.c	/^static void calloc_bytes(abts_case *tc, void *data)$/;"	f	file:
cancel	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t cancel;$/;"	m	struct:apr_thread_t
cancel	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t cancel;$/;"	m	struct:apr_thread_t
cancel_how	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t cancel_how;$/;"	m	struct:apr_thread_t
cancel_how	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t cancel_how;$/;"	m	struct:apr_thread_t
casedName	include\arch\netware\apr_arch_file_io.h	/^    char *casedName;$/;"	m	struct:apr_stat_entry_t
caterr	dso\aix\dso.c	/^static void caterr(char *s)$/;"	f	file:
cb_cleanup	poll\unix\epoll.c	/^static apr_status_t cb_cleanup(void *p_)$/;"	f	file:
cb_cleanup	poll\unix\kqueue.c	/^static apr_status_t cb_cleanup(void *b_)$/;"	f	file:
cb_cleanup	poll\unix\port.c	/^static apr_status_t cb_cleanup(void *p_)$/;"	f	file:
cdecl	include\arch\netware\apr_arch_pre_nw.h	34;"	d
cdtors	dso\aix\dso.c	/^    CdtorPtr cdtors;		\/* optional C++ constructors *\/$/;"	m	struct:Module	file:
cerr	misc\unix\getopt.c	/^static apr_status_t cerr(apr_getopt_t *os, const char *err, int ch,$/;"	f	file:
check_library_exists	build\jlibtool.c	/^char *check_library_exists(command_t *cmd, const char *arg, int pathlen,$/;"	f
check_locks	test\testthread.c	/^static void check_locks(abts_case *tc, void *data)$/;"	f	file:
check_object_exists	build\jlibtool.c	/^char *check_object_exists(command_t *cmd, const char *arg, int arglen)$/;"	f
check_sockets	test\testpoll.c	/^static void check_sockets(const apr_pollfd_t *pollarray, $/;"	f	file:
check_thread_once	test\testthread.c	/^static void check_thread_once(abts_case *tc, void *data)$/;"	f	file:
checker_cleanup	test\testpools.c	/^static apr_status_t checker_cleanup(void *data)$/;"	f	file:
checker_data	test\testpools.c	/^static char *checker_data = "Hello, world.";$/;"	v	file:
child	memory\unix\apr_pools.c	/^    apr_pool_t           *child;$/;"	m	struct:apr_pool_t	file:
child_cleanup_fn	memory\unix\apr_pools.c	/^    apr_status_t (*child_cleanup_fn)(void *data);$/;"	m	struct:cleanup_t	file:
child_err	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
child_err	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
child_err	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
child_err	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
child_err	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *child_err;$/;"	m	struct:apr_procattr_t
child_in	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
child_in	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
child_in	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
child_in	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
child_in	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *child_in;$/;"	m	struct:apr_procattr_t
child_init	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*child_init)(apr_proc_mutex_t **, apr_pool_t *, const char *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
child_out	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
child_out	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
child_out	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
child_out	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
child_out	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *child_out;$/;"	m	struct:apr_procattr_t
child_pool	test\testpools.c	/^static void child_pool(abts_case *tc, void *data)$/;"	f	file:
clean_path	build\gen-build.py	/^def clean_path(path):$/;"	f
cleanup	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*cleanup)(apr_pollset_t *);$/;"	m	struct:apr_pollset_provider_t
cleanup	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*cleanup)(void *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
cleanup_called	test\testud.c	/^static int cleanup_called = 0;$/;"	v	file:
cleanup_pool_for_exec	memory\unix\apr_pools.c	/^static void cleanup_pool_for_exec(apr_pool_t *p)$/;"	f	file:
cleanup_t	memory\unix\apr_pools.c	/^struct cleanup_t {$/;"	s	file:
cleanup_t	memory\unix\apr_pools.c	/^typedef struct cleanup_t cleanup_t;$/;"	t	typeref:struct:cleanup_t	file:
cleanup_t::child_cleanup_fn	memory\unix\apr_pools.c	/^    apr_status_t (*child_cleanup_fn)(void *data);$/;"	m	struct:cleanup_t	file:
cleanup_t::data	memory\unix\apr_pools.c	/^    const void *data;$/;"	m	struct:cleanup_t	file:
cleanup_t::next	memory\unix\apr_pools.c	/^    struct cleanup_t *next;$/;"	m	struct:cleanup_t	typeref:struct:cleanup_t::cleanup_t	file:
cleanup_t::plain_cleanup_fn	memory\unix\apr_pools.c	/^    apr_status_t (*plain_cleanup_fn)(void *data);$/;"	m	struct:cleanup_t	file:
cleanup_tmp_dir	build\aplibtool.c	/^void cleanup_tmp_dir(char *dirname)$/;"	f
cleanup_tmp_dir	build\jlibtool.c	/^void cleanup_tmp_dir(const char *dirname)$/;"	f
cleanup_tmp_dirs	build\aplibtool.c	/^void cleanup_tmp_dirs(cmd_data_t *cmd_data)$/;"	f
cleanup_tmp_dirs	build\jlibtool.c	/^void cleanup_tmp_dirs(command_t *cmd_data)$/;"	f
cleanups	memory\unix\apr_pools.c	/^    cleanup_t            *cleanups;$/;"	m	struct:apr_pool_t	file:
clear_all_signalled	test\testpoll.c	/^static void clear_all_signalled(abts_case *tc, void *data)$/;"	f	file:
clear_count_chars	build\jlibtool.c	/^void clear_count_chars(count_chars *cc)$/;"	f
clear_last_pollset	test\testpoll.c	/^static void clear_last_pollset(abts_case *tc, void *data)$/;"	f	file:
clear_middle_pollset	test\testpoll.c	/^static void clear_middle_pollset(abts_case *tc, void *data)$/;"	f	file:
client	test\sendfile.c	/^static int client(client_socket_mode_t socket_mode, char *host)$/;"	f	file:
client_data	include\apr_poll.h	/^    void *client_data;          \/**< allows app to associate context *\/$/;"	m	struct:apr_pollfd_t
client_socket_mode_t	test\sendfile.c	/^typedef enum {BLK, NONBLK, TIMEOUT} client_socket_mode_t;$/;"	t	typeref:enum:__anon34	file:
clock_restore	time\win32\time.c	/^static apr_status_t clock_restore(void *unsetres)$/;"	f	file:
close	network_io\unix\sockets.c	25;"	d	file:
close	network_io\unix\sockets.c	26;"	d	file:
closeConnection	test\sockperf.c	/^static void closeConnection(apr_socket_t *sock)$/;"	f	file:
close_all_sockets	test\testpoll.c	/^static void close_all_sockets(abts_case *tc, void *data)$/;"	f	file:
close_pipe	test\testpipe.c	/^static void close_pipe(abts_case *tc, void *data)$/;"	f	file:
close_socket	test\testsockopt.c	/^static void close_socket(abts_case *tc, void *data)$/;"	f	file:
closesocket	include\arch\win32\apr_dbg_win32_handles.h	198;"	d
cmd_data_t	build\aplibtool.c	/^} cmd_data_t;$/;"	t	typeref:struct:__anon1	file:
cmdtype	include\arch\beos\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
cmdtype	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
cmdtype	include\arch\os2\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
cmdtype	include\arch\unix\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
cmdtype	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t cmdtype;$/;"	m	struct:apr_procattr_t
cntxt	include\apr_mmap.h	/^    apr_pool_t *cntxt;$/;"	m	struct:apr_mmap_t
cntxt	include\arch\win32\apr_arch_atime.h	/^    apr_pool_t *cntxt;$/;"	m	struct:atime_t
code	misc\unix\errorcodes.c	/^    apr_status_t code;$/;"	m	struct:__anon32	file:
collapse_iovec	network_io\win32\sendrecv.c	/^static apr_status_t collapse_iovec(char **off, apr_size_t *len, $/;"	f	file:
command_t	build\jlibtool.c	/^} command_t;$/;"	t	typeref:struct:__anon6	file:
comp_string	test\testhash.c	/^static int comp_string(const void *str1, const void *str2)$/;"	f	file:
compare_left	strings\apr_strnatcmp.c	/^compare_left(char const *a, char const *b)$/;"	f	file:
compare_right	strings\apr_strnatcmp.c	/^compare_right(char const *a, char const *b)$/;"	f	file:
compiler	build\jlibtool.c	/^    const char *compiler;$/;"	m	struct:__anon6	file:
cond	include\apr_thread_cond.h	/^APR_DECLARE(apr_status_t) apr_thread_cond_broadcast(apr_thread_cond_t *cond);$/;"	v
cond	include\apr_thread_cond.h	/^APR_DECLARE(apr_status_t) apr_thread_cond_destroy(apr_thread_cond_t *cond);$/;"	v
cond	include\apr_thread_cond.h	/^APR_DECLARE(apr_status_t) apr_thread_cond_signal(apr_thread_cond_t *cond);$/;"	v
cond	include\arch\netware\apr_arch_thread_cond.h	/^    NXCond_t *cond;$/;"	m	struct:apr_thread_cond_t
cond	include\arch\unix\apr_arch_thread_cond.h	/^    pthread_cond_t cond;$/;"	m	struct:apr_thread_cond_t
cond	test\testcond.c	/^    apr_thread_cond_t *cond;$/;"	m	struct:toolbox_t	file:
cond	test\testlock.c	/^    apr_thread_cond_t  *cond;$/;"	m	struct:__anon37	file:
condlock	include\arch\beos\apr_arch_thread_cond.h	/^    apr_thread_mutex_t *condlock;$/;"	m	struct:apr_thread_cond_t
connect	include\arch\os2\apr_arch_os2calls.h	46;"	d
connected	include\arch\unix\apr_arch_networkio.h	/^    int connected;$/;"	m	struct:apr_socket_t
cont	include\apr_getopt.h	/^    apr_pool_t *cont;$/;"	m	struct:apr_getopt_t
cont	include\arch\os2\apr_arch_dso.h	/^    apr_pool_t  *cont;       \/* Context for returning error strings *\/$/;"	m	struct:apr_dso_handle_t
cont	include\arch\win32\apr_arch_dso.h	/^    apr_pool_t  *cont;$/;"	m	struct:apr_dso_handle_t
control	test\testthread.c	/^static apr_thread_once_t *control = NULL;$/;"	v	file:
conv_10	strings\apr_snprintf.c	/^static char *conv_10(register apr_int32_t num, register int is_unsigned,$/;"	f	file:
conv_10_quad	strings\apr_snprintf.c	/^static char *conv_10_quad(apr_int64_t num, register int is_unsigned,$/;"	f	file:
conv_apr_sockaddr	strings\apr_snprintf.c	/^static char *conv_apr_sockaddr(apr_sockaddr_t *sa, char *buf_end, apr_size_t *len)$/;"	f	file:
conv_fp	strings\apr_snprintf.c	/^static char *conv_fp(register char format, register double num,$/;"	f	file:
conv_in_addr	strings\apr_snprintf.c	/^static char *conv_in_addr(struct in_addr *ia, char *buf_end, apr_size_t *len)$/;"	f	file:
conv_os_thread_t	strings\apr_snprintf.c	/^static char *conv_os_thread_t(apr_os_thread_t *tid, char *buf_end, apr_size_t *len)$/;"	f	file:
conv_os_thread_t_hex	strings\apr_snprintf.c	/^static char *conv_os_thread_t_hex(apr_os_thread_t *tid, char *buf_end, apr_size_t *len)$/;"	f	file:
conv_p2	strings\apr_snprintf.c	/^static char *conv_p2(register apr_uint32_t num, register int nbits,$/;"	f	file:
conv_p2_quad	strings\apr_snprintf.c	/^static char *conv_p2_quad(apr_uint64_t num, register int nbits,$/;"	f	file:
convert_prot	file_io\win32\filestat.c	/^static apr_fileperms_t convert_prot(ACCESS_MASK acc, prot_scope_e scope)$/;"	f	file:
copy_array_hdr_core	tables\apr_tables.c	/^static APR_INLINE void copy_array_hdr_core(apr_array_header_t *res,$/;"	f	file:
copy_helper	test\testfilecopy.c	/^static void copy_helper(abts_case *tc, const char *from, const char * to,$/;"	f	file:
copy_over_existing	test\testfilecopy.c	/^static void copy_over_existing(abts_case *tc, void *data)$/;"	f	file:
copy_short_file	test\testfilecopy.c	/^static void copy_short_file(abts_case *tc, void *data)$/;"	f	file:
copyset	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollfd_t **copyset;$/;"	m	struct:apr_pollcb_t
corkable	test\testsockopt.c	/^static void corkable(abts_case *tc, void *data)$/;"	f	file:
count	include\arch\beos\apr_arch_threadproc.h	/^	int  count;$/;"	m	struct:beos_key
count	include\arch\beos\apr_arch_threadproc.h	/^	int count;$/;"	m	struct:beos_private_data
count	tables\apr_hash.c	/^    unsigned int         count, max;$/;"	m	struct:apr_hash_t	file:
count	test\testpoll.c	/^    int count;$/;"	m	struct:pollcb_baton_t	file:
count_chars	build\jlibtool.c	/^} count_chars;$/;"	t	typeref:struct:__anon2	file:
count_reps	test\mod_test.c	/^int count_reps(int reps)$/;"	f
counter	test\testmutexscope.c	/^static volatile int counter;$/;"	v	file:
create	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*create)(apr_pollcb_t *, apr_uint32_t, apr_pool_t *, apr_uint32_t);$/;"	m	struct:apr_pollcb_provider_t
create	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*create)(apr_pollset_t *, apr_uint32_t, apr_pool_t *, apr_uint32_t);$/;"	m	struct:apr_pollset_provider_t
create	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*create)(apr_proc_mutex_t *, const char *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
create_all_sockets	test\testpoll.c	/^static void create_all_sockets(abts_case *tc, void *data)$/;"	f	file:
create_filename	test\testmmap.c	/^static void create_filename(abts_case *tc, void *data)$/;"	f	file:
create_pipe	test\testpipe.c	/^static void create_pipe(abts_case *tc, void *data)$/;"	f	file:
create_socket	test\testsockopt.c	/^static void create_socket(abts_case *tc, void *data)$/;"	f	file:
create_socket_pipe	file_io\win32\pipe.c	/^static apr_status_t create_socket_pipe(SOCKET *rd, SOCKET *wr)$/;"	f	file:
create_testfile	test\sendfile.c	/^static void create_testfile(apr_pool_t *p, const char *fname)$/;"	f	file:
create_threads	test\testthread.c	/^static void create_threads(abts_case *tc, void *data)$/;"	f	file:
create_wakeup_pipe	poll\unix\pollset.c	/^static apr_status_t create_wakeup_pipe(apr_pollset_t *pollset)$/;"	f	file:
creation_flags	memory\unix\apr_pools.c	/^    apr_uint32_t          creation_flags;$/;"	m	struct:apr_pool_t	file:
creator	tables\apr_tables.c	/^    void *creator;$/;"	m	struct:apr_table_t	file:
crossproc	include\apr_portable.h	/^    int crossproc;$/;"	m	struct:apr_os_proc_mutex_t
crypt_crypt	random\unix\apr_random.c	54;"	d	file:
crypt_setkey	random\unix\apr_random.c	53;"	d	file:
csection	include\arch\win32\apr_arch_thread_cond.h	/^    CRITICAL_SECTION csection;$/;"	m	struct:apr_thread_cond_t
csize	include\apr_file_info.h	/^    apr_off_t csize;$/;"	m	struct:apr_finfo_t
cstat	file_io\netware\filestat.c	/^int cstat (NXPathCtx_t ctx, char *path, struct stat *buf, unsigned long requestmap, apr_pool_t *p)$/;"	f
ctime	include\apr_file_info.h	/^    apr_time_t ctime;$/;"	m	struct:apr_finfo_t
ctx	include\arch\netware\apr_arch_threadproc.h	/^    NXContext_t ctx;$/;"	m	struct:apr_thread_t
curpos	include\apr_lib.h	/^    char *curpos;$/;"	m	struct:apr_vformatter_buff_t
curr_char	test\abts.c	/^static int curr_char;$/;"	v	file:
curr_locked	include\arch\unix\apr_arch_proc_mutex.h	/^    int curr_locked;$/;"	m	struct:apr_proc_mutex_t
currdir	include\arch\beos\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
currdir	include\arch\netware\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
currdir	include\arch\os2\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
currdir	include\arch\unix\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
currdir	include\arch\win32\apr_arch_threadproc.h	/^    char *currdir;$/;"	m	struct:apr_procattr_t
current_free_index	memory\unix\apr_pools.c	/^    apr_uint32_t        current_free_index;$/;"	m	struct:apr_allocator_t	file:
currtime	include\arch\win32\apr_arch_atime.h	/^    apr_time_t currtime;$/;"	m	struct:atime_t
darwin_dynamic_link_function	build\jlibtool.c	/^const char *darwin_dynamic_link_function(const char *version_info)$/;"	f
data	include\apr_random.h	/^    void *data;$/;"	m	struct:apr_crypto_hash_t
data	include\arch\beos\apr_arch_threadproc.h	/^	const void ** data;$/;"	m	struct:beos_private_data
data	include\arch\beos\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
data	include\arch\netware\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
data	include\arch\os2\apr_arch_networkio.h	/^    void *data;$/;"	m	struct:sock_userdata_t
data	include\arch\os2\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
data	include\arch\unix\apr_arch_misc.h	/^    void *data;$/;"	m	struct:apr_other_child_rec_t
data	include\arch\unix\apr_arch_networkio.h	/^    void *data;$/;"	m	struct:sock_userdata_t
data	include\arch\unix\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
data	include\arch\win32\apr_arch_misc.h	/^    void *data;$/;"	m	struct:apr_other_child_rec_t
data	include\arch\win32\apr_arch_networkio.h	/^    void *data;$/;"	m	struct:sock_userdata_t
data	include\arch\win32\apr_arch_threadproc.h	/^    void *data;$/;"	m	struct:apr_thread_t
data	memory\unix\apr_pools.c	/^    const void *data;$/;"	m	struct:cleanup_t	file:
data	test\testcond.c	/^    void *data;$/;"	m	struct:toolbox_t	file:
dataRead	include\arch\netware\apr_arch_file_io.h	/^    apr_off_t dataRead;   \/* amount of valid data read into buffer *\/$/;"	m	struct:apr_file_t
dataRead	include\arch\os2\apr_arch_file_io.h	/^    unsigned long dataRead;    \/* amount of valid data read into buffer     *\/$/;"	m	struct:apr_file_t
dataRead	include\arch\unix\apr_arch_file_io.h	/^    unsigned long dataRead;   \/* amount of valid data read into buffer *\/$/;"	m	struct:apr_file_t
dataRead	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t dataRead;       \/\/ amount of valid data read into buffer$/;"	m	struct:apr_file_t
debug_node_t	memory\unix\apr_pools.c	/^struct debug_node_t {$/;"	s	file:
debug_node_t	memory\unix\apr_pools.c	/^typedef struct debug_node_t debug_node_t;$/;"	t	typeref:struct:debug_node_t	file:
debug_node_t::beginp	memory\unix\apr_pools.c	/^    void         *beginp[64];$/;"	m	struct:debug_node_t	file:
debug_node_t::endp	memory\unix\apr_pools.c	/^    void         *endp[64];$/;"	m	struct:debug_node_t	file:
debug_node_t::index	memory\unix\apr_pools.c	/^    apr_uint32_t  index;$/;"	m	struct:debug_node_t	file:
debug_node_t::next	memory\unix\apr_pools.c	/^    debug_node_t *next;$/;"	m	struct:debug_node_t	file:
delete_key	test\testhash.c	/^static void delete_key(abts_case *tc, void *data)$/;"	f	file:
dep_rpaths	build\jlibtool.c	/^    count_chars *dep_rpaths;$/;"	m	struct:__anon6	file:
dependencies	build\jlibtool.c	/^    count_chars *dependencies;$/;"	m	struct:__anon4	file:
desc	include\apr_poll.h	/^    apr_descriptor desc;        \/**< @see apr_descriptor *\/$/;"	m	struct:apr_pollfd_t
desc_type	include\apr_poll.h	/^    apr_datatype_e desc_type;   \/**< descriptor type *\/$/;"	m	struct:apr_pollfd_t
description	include\apr_getopt.h	/^    const char *description;$/;"	m	struct:apr_getopt_option_t
description	test\testfileinfo.c	/^    char *description;$/;"	m	struct:view_fileinfo	file:
destructor	include\arch\beos\apr_arch_threadproc.h	/^	void (* destructor) (void *);$/;"	m	struct:beos_key
detach	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t detach;$/;"	m	struct:apr_threadattr_t
detach	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t detach;$/;"	m	struct:apr_threadattr_t
detached	include\arch\beos\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
detached	include\arch\beos\apr_arch_threadproc.h	/^    int detached;$/;"	m	struct:apr_threadattr_t
detached	include\arch\netware\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
detached	include\arch\os2\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
detached	include\arch\unix\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
detached	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t detached;$/;"	m	struct:apr_procattr_t
device	include\apr_file_info.h	/^    apr_dev_t device;$/;"	m	struct:apr_finfo_t
dir_cleanup	file_io\os2\dir.c	/^static apr_status_t dir_cleanup(void *thedir)$/;"	f	file:
dir_cleanup	file_io\unix\dir.c	/^static apr_status_t dir_cleanup(void *thedir)$/;"	f	file:
dir_cleanup	file_io\win32\dir.c	/^static apr_status_t dir_cleanup(void *thedir)$/;"	f	file:
dir_make_parent	file_io\win32\dir.c	/^static apr_status_t dir_make_parent(char *path,$/;"	f	file:
direction	include\arch\netware\apr_arch_file_io.h	/^    int direction;            \/* buffer being used for 0 = read, 1 = write *\/$/;"	m	struct:apr_file_t
direction	include\arch\os2\apr_arch_file_io.h	/^    int direction;             \/* buffer being used for 0 = read, 1 = write *\/$/;"	m	struct:apr_file_t
direction	include\arch\unix\apr_arch_file_io.h	/^    int direction;            \/* buffer being used for 0 = read, 1 = write *\/$/;"	m	struct:apr_file_t
direction	include\arch\win32\apr_arch_file_io.h	/^    int direction;             \/\/ buffer being used for 0 = read, 1 = write$/;"	m	struct:apr_file_t
dirhand	include\arch\win32\apr_arch_file_io.h	/^    HANDLE dirhand;$/;"	m	struct:apr_dir_t
dirname	include\arch\netware\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
dirname	include\arch\os2\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
dirname	include\arch\unix\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
dirname	include\arch\win32\apr_arch_file_io.h	/^    char *dirname;$/;"	m	struct:apr_dir_t
dirstruct	include\arch\netware\apr_arch_file_io.h	/^    DIR *dirstruct;$/;"	m	struct:apr_dir_t
dirstruct	include\arch\unix\apr_arch_file_io.h	/^    DIR *dirstruct;$/;"	m	struct:apr_dir_t
disconnected	include\arch\win32\apr_arch_networkio.h	/^    apr_int32_t         disconnected;$/;"	m	struct:apr_socket_t
displaynw	test\internal\testucs.c	/^void displaynw(struct testval *f, struct testval *l)$/;"	f
dl_info	dso\aix\dso.c	/^struct dl_info {$/;"	s	file:
dl_info::fini	dso\aix\dso.c	/^    void (*fini) (void);$/;"	m	struct:dl_info	file:
dl_info::init	dso\aix\dso.c	/^    void (*init) (void);$/;"	m	struct:dl_info	file:
dlclose	dso\aix\dso.c	/^int dlclose(void *handle)$/;"	f
dlerror	dso\aix\dso.c	/^const char *dlerror(void)$/;"	f
dlopen	dso\aix\dso.c	/^void *dlopen(const char *path, int mode)$/;"	f
dlsym	dso\aix\dso.c	/^void *dlsym(void *handle, const char *symbol)$/;"	f
do_mcast	network_io\unix\multicast.c	/^static apr_status_t do_mcast(int type, apr_socket_t *sock,$/;"	f	file:
do_mcast_opt	network_io\unix\multicast.c	/^static apr_status_t do_mcast_opt(int type, apr_socket_t *sock,$/;"	f	file:
do_output	build\make_exports.awk	/^function do_output() {$/;"	f
do_table_push	tables\apr_tables.c	/^static apr_table_entry_t *do_table_push(const char *func, apr_table_t *t)$/;"	f	file:
do_wait	locks\beos\thread_cond.c	/^static apr_status_t do_wait(apr_thread_cond_t *cond, apr_thread_mutex_t *mutex,$/;"	f	file:
double_quotes	threadproc\os2\proc.c	/^static char *double_quotes(apr_pool_t *pool, const char *str)$/;"	f	file:
dry_run	build\jlibtool.c	/^    int dry_run;$/;"	m	struct:__anon5	file:
dso_cleanup	dso\aix\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dso_cleanup	dso\beos\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dso_cleanup	dso\netware\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dso_cleanup	dso\os2\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dso_cleanup	dso\os390\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dso_cleanup	dso\unix\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dso_cleanup	dso\win32\dso.c	/^static apr_status_t dso_cleanup(void *thedso)$/;"	f	file:
dspheader	build\cvtdsp.pl	/^sub dspheader {$/;"	s
dsponemodel	build\cvtdsp.pl	/^sub dsponemodel {$/;"	s
dummy_worker	threadproc\beos\thread.c	/^static void *dummy_worker(void *opaque)$/;"	f	file:
dummy_worker	threadproc\netware\thread.c	/^static void *dummy_worker(void *opaque)$/;"	f	file:
dummy_worker	threadproc\unix\thread.c	/^static void *dummy_worker(void *opaque)$/;"	f	file:
dummy_worker	threadproc\win32\thread.c	/^static void *dummy_worker(void *opaque)$/;"	f	file:
dump_hash	test\testhash.c	/^static void dump_hash(apr_pool_t *p, apr_hash_t *h, char str[][MAX_LTH]) $/;"	f	file:
dwFileAttributes	include\arch\win32\apr_arch_file_io.h	/^    DWORD dwFileAttributes;$/;"	m	struct:apr_file_t
dynamic_binding	test\testcond.c	/^static void dynamic_binding(abts_case *tc, void *data)$/;"	f	file:
dynamic_link_version_func	build\jlibtool.c	70;"	d	file:
eachThread	test\testmutexscope.c	/^static void * APR_THREAD_FUNC eachThread(apr_thread_t *id, void *p)$/;"	f	file:
eightGB	test\testlfs.c	/^static apr_off_t eightGB = APR_INT64_C(2) << 32;$/;"	v	file:
elt_size	include\apr_tables.h	/^    int elt_size;$/;"	m	struct:apr_array_header_t
elts	include\apr_tables.h	/^    char *elts;$/;"	m	struct:apr_array_header_t
end_suite	test\abts.c	/^static void end_suite(abts_suite *suite)$/;"	f	file:
endp	include\apr_allocator.h	/^    char          *endp;            \/**< pointer to end of free memory *\/$/;"	m	struct:apr_memnode_t
endp	memory\unix\apr_pools.c	/^    void         *endp[64];$/;"	m	struct:debug_node_t	file:
endpos	include\apr_lib.h	/^    char *endpos;$/;"	m	struct:apr_vformatter_buff_t
ensure_fake_uptodate	build\jlibtool.c	/^int ensure_fake_uptodate(command_t *cmd_data)$/;"	f
enter_scope	build\make_exports.awk	/^function enter_scope(type) {$/;"	f
entry	dso\aix\dso.c	/^    void *entry;		\/* entry point from load *\/$/;"	m	struct:Module	file:
entry	include\arch\netware\apr_arch_file_io.h	/^    struct dirent *entry;$/;"	m	struct:apr_dir_t	typeref:struct:apr_dir_t::dirent
entry	include\arch\os2\apr_arch_file_io.h	/^    FILEFINDBUF3 entry;$/;"	m	struct:apr_dir_t
entry	include\arch\unix\apr_arch_file_io.h	/^    struct dirent *entry;$/;"	m	struct:apr_dir_t	typeref:struct:apr_dir_t::dirent
entry	include\arch\unix\apr_arch_file_io.h	/^    struct dirent64 *entry;$/;"	m	struct:apr_dir_t	typeref:struct:apr_dir_t::dirent64
entry	include\arch\win32\apr_arch_file_io.h	/^            WIN32_FIND_DATAA *entry;$/;"	m	struct:apr_dir_t::__anon26::__anon28
entry	include\arch\win32\apr_arch_file_io.h	/^            WIN32_FIND_DATAW *entry;$/;"	m	struct:apr_dir_t::__anon26::__anon27
eof_hit	include\arch\netware\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
eof_hit	include\arch\os2\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
eof_hit	include\arch\unix\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
eof_hit	include\arch\win32\apr_arch_file_io.h	/^    int eof_hit;$/;"	m	struct:apr_file_t
epoll	include\arch\unix\apr_arch_poll_private.h	/^    struct epoll_event *epoll;$/;"	m	union:__anon25	typeref:struct:__anon25::epoll_event
epoll_fd	poll\unix\epoll.c	/^    int epoll_fd;$/;"	m	struct:apr_pollset_private_t	file:
err	include\apr_thread_proc.h	/^    apr_file_t *err;$/;"	m	struct:apr_proc_t
err	threadproc\beos\apr_proc_stub.c	/^	int err;$/;"	m	struct:pipefd	file:
err	threadproc\beos\proc.c	/^	int err;$/;"	m	struct:send_pipe	file:
errarg	include\apr_getopt.h	/^    void *errarg;$/;"	m	struct:apr_getopt_t
errbuf	dso\aix\dso.c	/^static char errbuf[BUFSIZ];$/;"	v	file:
errchk	include\arch\unix\apr_arch_threadproc.h	/^    apr_int32_t errchk;$/;"	m	struct:apr_procattr_t
errchk	include\arch\win32\apr_arch_threadproc.h	/^    apr_int32_t errchk;$/;"	m	struct:apr_procattr_t
errfn	include\apr_getopt.h	/^    apr_getopt_err_fn_t *errfn;$/;"	m	struct:apr_getopt_t
errfn	include\arch\unix\apr_arch_threadproc.h	/^    apr_child_errfn_t *errfn;$/;"	m	struct:apr_procattr_t
errfn	include\arch\win32\apr_arch_threadproc.h	/^    apr_child_errfn_t *errfn;$/;"	m	struct:apr_procattr_t
errno	include\arch\win32\apr_private.h	/^APR_DECLARE_DATA int errno;$/;"	v
error_fmt	test\testfmt.c	/^static void error_fmt(abts_case *tc, void *data)$/;"	f	file:
errormap	file_io\os2\maperrorcode.c	/^static int errormap[][2] = {$/;"	v	file:
errormsg	include\arch\aix\apr_arch_dso.h	/^    const char *errormsg;$/;"	m	struct:apr_dso_handle_t
errormsg	include\arch\beos\apr_arch_dso.h	/^    const char   *errormsg;  \/* if the load fails, we have an error$/;"	m	struct:apr_dso_handle_t
errormsg	include\arch\netware\apr_arch_dso.h	/^    const char  *errormsg;$/;"	m	struct:apr_dso_handle_t
errormsg	include\arch\unix\apr_arch_dso.h	/^    const char    *errormsg;$/;"	m	struct:apr_dso_handle_t
errvalid	dso\aix\dso.c	/^static int errvalid;$/;"	v	file:
events	include\arch\win32\apr_arch_misc.h	/^    SHORT   events;$/;"	m	struct:pollfd
exceptset	poll\unix\select.c	/^    fd_set readset, writeset, exceptset;$/;"	m	struct:apr_pollset_private_t	file:
exclude	test\abts.c	/^static int exclude = 0;$/;"	v	file:
execute_command	build\aplibtool.c	/^int execute_command(cmd_data_t *cmd_data)$/;"	f
exit_ret_val	test\testatomic.c	/^apr_status_t exit_ret_val = 123; \/* just some made up number to check on later *\/$/;"	v
exit_ret_val	test\testthread.c	/^static apr_status_t exit_ret_val = 123;$/;"	v	file:
exiting	test\testcond.c	/^static volatile apr_uint32_t exiting;$/;"	v	file:
exitval	include\arch\beos\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
exitval	include\arch\netware\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
exitval	include\arch\os2\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
exitval	include\arch\unix\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
exitval	include\arch\win32\apr_arch_threadproc.h	/^    apr_status_t exitval;$/;"	m	struct:apr_thread_t
expand_array	tables\apr_hash.c	/^static void expand_array(apr_hash_t *ht)$/;"	f	file:
expand_path	build\jlibtool.c	/^const char* expand_path(const char *relpath)$/;"	f
expire	include\arch\netware\apr_arch_file_io.h	/^    apr_time_t expire;$/;"	m	struct:apr_stat_entry_t
explode_static_lib	build\aplibtool.c	/^bool explode_static_lib(char *lib, cmd_data_t *cmd_data)$/;"	f
explode_static_lib	build\jlibtool.c	/^int explode_static_lib(command_t *cmd_data, const char *lib)$/;"	f
explode_time	time\unix\time.c	/^static void explode_time(apr_time_exp_t *xt, apr_time_t t,$/;"	f	file:
explodedtime	include\arch\win32\apr_arch_atime.h	/^    SYSTEMTIME *explodedtime;$/;"	m	struct:atime_t
export_all	build\aplibtool.c	/^bool export_all = false;$/;"	v
export_all	build\jlibtool.c	/^    int export_all;$/;"	m	struct:__anon5	file:
export_dynamic	build\jlibtool.c	/^    int export_dynamic;$/;"	m	struct:__anon5	file:
exports	dso\aix\dso.c	/^    ExportPtr exports;		\/* the array of exports *\/$/;"	m	struct:Module	file:
external_spawn	build\jlibtool.c	/^int external_spawn(command_t *cmd, const char *file, const char **argv)$/;"	f
extract_deps	build\gen-build.py	/^def extract_deps(fname, legal_deps):$/;"	f
f	build\jlibtool.c	/^static FILE *f=NULL;$/;"	v	file:
f	include\apr_file_io.h	/^APR_DECLARE(apr_int32_t) apr_file_flags_get(apr_file_t *f);$/;"	v
f	include\apr_poll.h	/^    apr_file_t *f;              \/**< file *\/$/;"	m	union:__anon15
fail_flags	test\testfnmatch.c	/^    int         fail_flags;$/;"	m	struct:pattern_s	file:
fail_userinfo	test\testuser.c	/^static void fail_userinfo(abts_case *tc, void *data)$/;"	f	file:
failed	test\abts.h	/^    int failed;$/;"	m	struct:abts_case
failed	test\abts.h	/^    int failed;$/;"	m	struct:sub_suite
failed_module	include\arch\os2\apr_arch_dso.h	/^    char          *failed_module;$/;"	m	struct:apr_dso_handle_t
failing_errno	include\arch\os390\apr_arch_dso.h	/^    int failing_errno;      \/* Don't save the buffer returned by$/;"	m	struct:apr_dso_handle_t
fake_output_name	build\jlibtool.c	/^    char *fake_output_name;$/;"	m	struct:__anon6	file:
false	build\aplibtool.c	25;"	d	file:
family	include\apr_network_io.h	/^    apr_int32_t family;$/;"	m	struct:apr_sockaddr_t
family	include\apr_portable.h	/^    int family;             \/**< always required (APR_INET, APR_INET6, etc.) *\/$/;"	m	struct:apr_os_sock_info_t
family	network_io\unix\sockaddr.c	/^    int family;$/;"	m	struct:apr_ipsubnet_t	file:
far	include\arch\netware\apr_arch_pre_nw.h	30;"	d
fd	include\arch\unix\apr_arch_poll_private.h	/^    int fd;$/;"	m	struct:apr_pollcb_t
fd	include\arch\win32\apr_arch_misc.h	/^    SOCKET  fd;$/;"	m	struct:pollfd
file	file_io\os2\open.c	/^APR_POOL_IMPLEMENT_ACCESSOR(file);$/;"	v
file	file_io\win32\open.c	/^APR_POOL_IMPLEMENT_ACCESSOR(file);$/;"	v
file	include\apr_file_io.h	/^APR_DECLARE(apr_status_t) apr_file_close(apr_file_t *file);$/;"	v
file	include\apr_file_io.h	/^APR_DECLARE_INHERIT_SET(file);$/;"	v
file	include\apr_file_io.h	/^APR_DECLARE_INHERIT_UNSET(file);$/;"	v
file	include\apr_file_io.h	/^APR_POOL_DECLARE_ACCESSOR(file);$/;"	v
file1	test\testmmap.c	/^static char *file1;$/;"	v	file:
filePtr	include\arch\netware\apr_arch_file_io.h	/^    apr_off_t filePtr;    \/* position in file of handle *\/$/;"	m	struct:apr_file_t
filePtr	include\arch\os2\apr_arch_file_io.h	/^    unsigned long filePtr;     \/* position in file of handle                *\/$/;"	m	struct:apr_file_t
filePtr	include\arch\unix\apr_arch_file_io.h	/^    apr_off_t filePtr;        \/* position in file of handle *\/$/;"	m	struct:apr_file_t
filePtr	include\arch\win32\apr_arch_file_io.h	/^    apr_off_t filePtr;         \/\/ position in file of handle$/;"	m	struct:apr_file_t
file_cleanup	file_io\unix\open.c	/^static apr_status_t file_cleanup(apr_file_t *file, int is_child)$/;"	f	file:
file_cleanup	file_io\win32\open.c	/^apr_status_t file_cleanup(void *thefile)$/;"	f
file_contents_equal	test\testfile.c	/^static void file_contents_equal(abts_case *tc,$/;"	f	file:
file_dup	file_io\os2\filedup.c	/^static apr_status_t file_dup(apr_file_t **new_file, apr_file_t *old_file, apr_pool_t *p)$/;"	f	file:
file_dup	file_io\unix\filedup.c	/^static apr_status_t file_dup(apr_file_t **new_file, $/;"	f	file:
file_line	memory\unix\apr_pools.c	/^    const char           *file_line;$/;"	m	struct:apr_pool_t	file:
file_lock	include\arch\netware\apr_arch_file_io.h	77;"	d
file_lock	include\arch\netware\apr_arch_file_io.h	86;"	d
file_lock	include\arch\unix\apr_arch_file_io.h	121;"	d
file_lock	include\arch\unix\apr_arch_file_io.h	130;"	d
file_printf_flush	file_io\unix\readwrite.c	/^static int file_printf_flush(apr_vformatter_buff_t *buff)$/;"	f	file:
file_printf_flush	file_io\win32\readwrite.c	/^static int file_printf_flush(apr_vformatter_buff_t *buff)$/;"	f	file:
file_read_buffered	file_io\unix\readwrite.c	/^static apr_status_t file_read_buffered(apr_file_t *thefile, void *buf,$/;"	f	file:
file_stderr	memory\unix\apr_pools.c	/^static apr_file_t *file_stderr = NULL;$/;"	v	file:
file_unlock	include\arch\netware\apr_arch_file_io.h	81;"	d
file_unlock	include\arch\netware\apr_arch_file_io.h	87;"	d
file_unlock	include\arch\unix\apr_arch_file_io.h	125;"	d
file_unlock	include\arch\unix\apr_arch_file_io.h	131;"	d
filedes	include\arch\netware\apr_arch_file_io.h	/^    int filedes;$/;"	m	struct:apr_file_t
filedes	include\arch\os2\apr_arch_file_io.h	/^    HFILE filedes;$/;"	m	struct:apr_file_t
filedes	include\arch\unix\apr_arch_file_io.h	/^    int filedes;$/;"	m	struct:apr_file_t
filedes	include\arch\win32\apr_arch_file_io.h	159;"	d
filehand	include\apr_file_info.h	/^    struct apr_file_t *filehand;$/;"	m	struct:apr_finfo_t	typeref:struct:apr_finfo_t::apr_file_t
filehand	include\arch\win32\apr_arch_file_io.h	/^    HANDLE filehand;$/;"	m	struct:apr_file_t
filename	include\arch\unix\apr_arch_shm.h	/^    const char *filename;      \/* NULL if anonymous *\/$/;"	m	struct:apr_shm_t
filename	shmem\win32\shm.c	/^    const char *filename;$/;"	m	struct:apr_shm_t	file:
filepath_compare_drive	file_io\netware\filesys.c	/^apr_status_t filepath_compare_drive(const char *path1, const char *path2, apr_pool_t *p)$/;"	f
filepath_drive_get	file_io\os2\filesys.c	/^apr_status_t filepath_drive_get(char **rootpath, char drive, $/;"	f
filepath_drive_get	file_io\win32\filesys.c	/^apr_status_t filepath_drive_get(char **rootpath, char drive, $/;"	f
filepath_has_drive	file_io\netware\filesys.c	/^apr_status_t filepath_has_drive(const char *rootpath, int only, apr_pool_t *p)$/;"	f
filepath_root_case	file_io\netware\filesys.c	/^apr_status_t filepath_root_case(char **rootpath, char *root, apr_pool_t *p)$/;"	f
filepath_root_case	file_io\os2\filesys.c	/^apr_status_t filepath_root_case(char **rootpath, char *root, apr_pool_t *p)$/;"	f
filepath_root_case	file_io\win32\filesys.c	/^apr_status_t filepath_root_case(char **rootpath, char *root, apr_pool_t *p)$/;"	f
filepath_root_test	file_io\os2\filesys.c	/^apr_status_t filepath_root_test(char *path, apr_pool_t *p)$/;"	f
filepath_root_test	file_io\win32\filesys.c	/^apr_status_t filepath_root_test(char *path, apr_pool_t *p)$/;"	f
filetype	include\apr_file_info.h	/^    apr_filetype_e filetype;$/;"	m	struct:apr_finfo_t
filetype_from_dirent_type	file_io\unix\dir.c	/^static apr_filetype_e filetype_from_dirent_type(int type)$/;"	f	file:
filetype_from_mode	file_io\netware\filestat.c	/^static apr_filetype_e filetype_from_mode(mode_t mode)$/;"	f	file:
filetype_from_mode	file_io\unix\filestat.c	/^static apr_filetype_e filetype_from_mode(mode_t mode)$/;"	f	file:
fill_mip_v4	network_io\unix\multicast.c	/^static void fill_mip_v4(struct ip_mreq *mip, apr_sockaddr_t *mcast,$/;"	f	file:
fill_mip_v6	network_io\unix\multicast.c	/^static void fill_mip_v6(struct ipv6_mreq *mip, const apr_sockaddr_t *mcast,$/;"	f	file:
fill_out_finfo	file_io\netware\filestat.c	/^static void fill_out_finfo(apr_finfo_t *finfo, struct stat *info,$/;"	f	file:
fill_out_finfo	file_io\unix\filestat.c	/^static void fill_out_finfo(apr_finfo_t *finfo, struct_stat *info,$/;"	f	file:
fillin_fileinfo	file_io\win32\filestat.c	/^int fillin_fileinfo(apr_finfo_t *finfo, $/;"	f
findMain	dso\aix\dso.c	/^static void *findMain(void)$/;"	f	file:
find_addresses	network_io\unix\sockaddr.c	/^static apr_status_t find_addresses(apr_sockaddr_t **sa, $/;"	f	file:
find_entry	tables\apr_hash.c	/^static apr_hash_entry_t **find_entry(apr_hash_t *ht,$/;"	f	file:
find_if_index	network_io\unix\multicast.c	/^static unsigned int find_if_index(const apr_sockaddr_t *iface)$/;"	f	file:
find_test_name	test\abts.c	/^static int find_test_name(const char *testname) {$/;"	f	file:
finfo	include\arch\win32\apr_arch_file_io.h	/^    apr_finfo_t *finfo;$/;"	m	struct:apr_file_t
finfo_equal	test\testfileinfo.c	/^static void finfo_equal(abts_case *tc, apr_finfo_t *f1, apr_finfo_t *f2)$/;"	f	file:
fini	dso\aix\dso.c	/^    void (*fini) (void);$/;"	m	struct:dl_info	file:
finish	include\apr_random.h	/^    apr_crypto_hash_finish_t *finish;$/;"	m	struct:apr_crypto_hash_t
first_avail	include\apr_allocator.h	/^    char          *first_avail;     \/**< pointer to first free memory *\/$/;"	m	struct:apr_memnode_t
fix_subnet	network_io\unix\sockaddr.c	/^static void fix_subnet(apr_ipsubnet_t *ipsub)$/;"	f	file:
fixcwd	build\fixwin32mak.pl	/^sub fixcwd { $/;"	s
fixed_name	locks\os2\proc_mutex.c	/^static char *fixed_name(const char *fname, apr_pool_t *pool)$/;"	f	file:
flags	include\arch\netware\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
flags	include\arch\os2\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
flags	include\arch\unix\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
flags	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t flags;$/;"	m	struct:apr_pollset_t
flags	include\arch\unix\apr_arch_proc_mutex.h	/^    unsigned int flags;$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
flags	include\arch\win32\apr_arch_file_io.h	/^    apr_int32_t flags;$/;"	m	struct:apr_file_t
flags	poll\unix\select.c	/^    apr_uint32_t flags;$/;"	m	struct:apr_pollset_private_t	file:
flatten_count_chars	build\jlibtool.c	/^const char *flatten_count_chars(count_chars *cc, int space)$/;"	f
flist	include\arch\beos\apr_arch_thread_cond.h	/^    APR_RING_HEAD(free_list,   waiter_t) flist;$/;"	m	struct:apr_thread_cond_t
fname	include\apr_file_info.h	/^    const char *fname;$/;"	m	struct:apr_finfo_t
fname	include\arch\netware\apr_arch_file_io.h	/^    char *fname;$/;"	m	struct:apr_file_t
fname	include\arch\os2\apr_arch_file_io.h	/^    char * fname;$/;"	m	struct:apr_file_t
fname	include\arch\unix\apr_arch_file_io.h	/^    char *fname;$/;"	m	struct:apr_file_t
fname	include\arch\unix\apr_arch_proc_mutex.h	/^    char *fname;$/;"	m	struct:apr_proc_mutex_t
fname	include\arch\win32\apr_arch_file_io.h	/^    char *fname;$/;"	m	struct:apr_file_t
fname	include\arch\win32\apr_arch_proc_mutex.h	/^    const char *fname;$/;"	m	struct:apr_proc_mutex_t
fnmatch_ch	strings\apr_fnmatch.c	/^static APR_INLINE int fnmatch_ch(const char **pattern, const char **string, int flags)$/;"	f	file:
format_arg	test\testargs.c	/^static void format_arg(char *str, char option, const char *arg)$/;"	f	file:
fptr	file_io\unix\readwrite.c	/^    apr_file_t *fptr;$/;"	m	struct:apr_file_printf_data	file:
fptr	file_io\win32\readwrite.c	/^    apr_file_t *fptr;$/;"	m	struct:apr_file_printf_data	file:
fptr	include\apr_file_io.h	/^APR_DECLARE(apr_status_t) apr_file_eof(apr_file_t *fptr);$/;"	v
free	memory\unix\apr_pools.c	/^    apr_memnode_t      *free[MAX_INDEX];$/;"	m	struct:apr_allocator_t	file:
free	memory\unix\apr_pools.c	/^    apr_memnode_t   *free;$/;"	m	struct:psprintf_data	file:
free	tables\apr_hash.c	/^    apr_hash_entry_t    *free;  \/* List of recycled entries *\/$/;"	m	struct:apr_hash_t	file:
free_cleanups	memory\unix\apr_pools.c	/^    cleanup_t            *free_cleanups;$/;"	m	struct:apr_pool_t	file:
free_index	include\apr_allocator.h	/^    apr_uint32_t   free_index;      \/**< how much free *\/$/;"	m	struct:apr_memnode_t
free_localheap	file_io\win32\filestat.c	/^static apr_status_t free_localheap(void *heap) {$/;"	f	file:
free_proc_chain	memory\unix\apr_pools.c	/^static void free_proc_chain(struct process_chain *procs)$/;"	f	file:
free_world	file_io\win32\filestat.c	/^static void free_world(void)$/;"	f	file:
frommakefiles	build\cvtdsp.pl	/^sub frommakefiles {$/;"	s
fstat	include\arch\unix\apr_arch_file_io.h	137;"	d
ftruncate	include\arch\netware\apr_arch_file_io.h	92;"	d
ftruncate	include\arch\unix\apr_arch_file_io.h	139;"	d
func	include\arch\beos\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
func	include\arch\netware\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
func	include\arch\os2\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
func	include\arch\unix\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
func	include\arch\win32\apr_arch_threadproc.h	/^    apr_thread_start_t func;$/;"	m	struct:apr_thread_t
func	test\abts_tests.h	/^    abts_suite *(*func)(abts_suite *suite);$/;"	m	struct:testlist
func	test\testatomic.c	/^    void (*func)(tbox_t *box);$/;"	m	struct:tbox_t	file:
func	test\testcond.c	/^    void (*func)(toolbox_t *box);$/;"	m	struct:toolbox_fnptr_t	file:
func	test\testcond.c	/^    void (*func)(toolbox_t *box);$/;"	m	struct:toolbox_t	file:
func_extract_an_archive	build\ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	build\ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	build\ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	build\ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	build\ltmain.sh	/^func_win32_libid ()$/;"	f
g	include\apr_random.h	/^APR_DECLARE(void) apr_random_barrier(apr_random_t *g);$/;"	v
gLibHandle	misc\netware\libprews.c	/^void         *gLibHandle = (void *) NULL;$/;"	v
gLibId	misc\netware\libprews.c	/^int          gLibId = -1;$/;"	v
gLibLock	misc\netware\libprews.c	/^NXMutex_t    *gLibLock = (NXMutex_t *) NULL;$/;"	v
gPool	include\arch\netware\apr_private.h	/^    void*   gPool;$/;"	m	struct:app_data
g_for_insecure	random\unix\apr_random.c	/^    unsigned int g_for_insecure;$/;"	m	struct:apr_random_t	file:
g_for_secure	random\unix\apr_random.c	/^    unsigned int g_for_secure;$/;"	m	struct:apr_random_t	file:
gaErrorList	misc\unix\errorcodes.c	/^} gaErrorList[] = {$/;"	v	typeref:struct:__anon32	file:
gcc_ctor	dso\aix\dso.c	/^    GccCDtorPtr gcc_ctor;	\/* g++ constructors  --jwe *\/$/;"	m	struct:Module	file:
gcc_dtor	dso\aix\dso.c	/^    GccCDtorPtr gcc_dtor;	\/* g++ destructors  --jwe *\/$/;"	m	struct:Module	file:
gen_install_name	build\jlibtool.c	/^char *gen_install_name(const char *name, int genlib)$/;"	f
gen_library_name	build\jlibtool.c	/^char *gen_library_name(const char *name, int genlib)$/;"	f
generate_def_file	build\aplibtool.c	/^void generate_def_file(cmd_data_t *cmd_data)$/;"	f
generate_def_file	build\jlibtool.c	/^void generate_def_file(command_t *cmd_data)$/;"	f
generation	include\arch\win32\apr_arch_thread_cond.h	/^    unsigned long generation;$/;"	m	struct:apr_thread_cond_t
generation	random\unix\apr_random.c	/^    unsigned int generation;$/;"	m	struct:apr_random_t	file:
generic_inaddr_any	network_io\unix\sockets.c	/^static char generic_inaddr_any[16] = {0}; \/* big enough for IPv4 or IPv6 *\/$/;"	v	file:
generic_inaddr_any	network_io\win32\sockets.c	/^static char generic_inaddr_any[16] = {0}; \/* big enough for IPv4 or IPv6 *\/$/;"	v	file:
getGlobalPool	misc\netware\libprews.c	/^void* getGlobalPool()$/;"	f
get_epoll_event	poll\unix\epoll.c	/^static apr_int16_t get_epoll_event(apr_int16_t event)$/;"	f	file:
get_epoll_revent	poll\unix\epoll.c	/^static apr_int16_t get_epoll_revent(apr_int16_t event)$/;"	f	file:
get_event	poll\unix\poll.c	/^static apr_int16_t get_event(apr_int16_t event)$/;"	f	file:
get_event	poll\unix\port.c	/^static apr_int16_t get_event(apr_int16_t event)$/;"	f	file:
get_files	build\gen-build.py	/^def get_files(patterns):$/;"	f
get_kqueue_revent	poll\unix\kqueue.c	/^static apr_int16_t get_kqueue_revent(apr_int16_t event, apr_int16_t flags)$/;"	f	file:
get_local_addr	network_io\unix\sockaddr.c	/^static apr_status_t get_local_addr(apr_socket_t *sock)$/;"	f	file:
get_local_timezone	time\win32\time.c	/^static DWORD get_local_timezone(TIME_ZONE_INFORMATION **tzresult)$/;"	f	file:
get_nonexistkey	test\testud.c	/^static void get_nonexistkey(abts_case *tc, void *data)$/;"	f	file:
get_offset	time\unix\time.c	/^static apr_int32_t get_offset(struct tm *tm)$/;"	f	file:
get_password	passwd\apr_getpass.c	/^static char *get_password(const char *prompt)$/;"	f	file:
get_remote_addr	network_io\unix\sockaddr.c	/^static apr_status_t get_remote_addr(apr_socket_t *sock)$/;"	f	file:
get_revent	poll\unix\poll.c	/^static apr_int16_t get_revent(apr_int16_t event)$/;"	f	file:
get_revent	poll\unix\port.c	/^static apr_int16_t get_revent(apr_int16_t event)$/;"	f	file:
get_sid_string	user\win32\userinfo.c	/^static void get_sid_string(char *buf, apr_size_t blen, apr_uid_t id)$/;"	f	file:
get_userdata	test\testud.c	/^static void get_userdata(abts_case *tc, void *data)$/;"	f	file:
getopt	build\gen-build.py	/^import getopt$/;"	i
getpass_r	include\arch\netware\apr_private.h	85;"	d
getpeername	include\arch\os2\apr_arch_os2calls.h	47;"	d
getpwnam_safe	user\netware\userinfo.c	/^static apr_status_t getpwnam_safe(const char *username,$/;"	f	file:
getpwnam_safe	user\unix\userinfo.c	/^static apr_status_t getpwnam_safe(const char *username,$/;"	f	file:
getservbyname	network_io\unix\sockaddr.c	/^static void *getservbyname(const char *name, const char *proto)$/;"	f	file:
getsockname	include\arch\os2\apr_arch_os2calls.h	48;"	d
getsockopt	include\arch\os2\apr_arch_os2calls.h	49;"	d
gettemp	file_io\unix\mktemp.c	/^static int gettemp(char *path, apr_file_t **doopen, apr_int32_t flags, apr_pool_t *p)$/;"	f	file:
gid	include\arch\unix\apr_arch_threadproc.h	/^    apr_gid_t   gid;$/;"	m	struct:apr_procattr_t
gid_t	include\apr.h	/^typedef  int         gid_t;$/;"	t
glassToWall	test\echod.c	/^static apr_status_t glassToWall(apr_int16_t port, apr_pool_t *parent)$/;"	f	file:
glob	build\gen-build.py	/^import glob$/;"	i
global_allocator	memory\unix\apr_pools.c	/^static apr_allocator_t *global_allocator = NULL;$/;"	v	file:
global_mutex	include\apr_global_mutex.h	/^APR_POOL_DECLARE_ACCESSOR(global_mutex);$/;"	v
global_mutex	test\testmutexscope.c	/^static apr_global_mutex_t *global_mutex;$/;"	v	file:
global_mutex_cleanup	locks\unix\global_mutex.c	/^static apr_status_t global_mutex_cleanup(void *data)$/;"	f	file:
global_pool	memory\unix\apr_pools.c	/^static apr_pool_t  *global_pool = NULL;$/;"	v	file:
got_a_new_node	memory\unix\apr_pools.c	/^    apr_byte_t       got_a_new_node;$/;"	m	struct:psprintf_data	file:
group	include\apr_file_info.h	/^    apr_gid_t group;$/;"	m	struct:apr_finfo_t
groupname	test\testuser.c	/^static void groupname(abts_case *tc, void *data)$/;"	f	file:
gs_aHooksToSort	include\arch\netware\apr_private.h	/^    void*   gs_aHooksToSort;$/;"	m	struct:app_data
gs_event_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_event_rtag;$/;"	m	struct:app_data
gs_ldap_xref_lock	include\arch\netware\apr_private.h	/^    void*   gs_ldap_xref_lock;$/;"	m	struct:app_data
gs_lookup_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_lookup_rtag;$/;"	m	struct:app_data
gs_nlmhandle	include\arch\netware\apr_private.h	/^    void*   gs_nlmhandle;$/;"	m	struct:app_data
gs_pcp_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_pcp_rtag;$/;"	m	struct:app_data
gs_phOptionalFunctions	include\arch\netware\apr_private.h	/^    void*   gs_phOptionalFunctions;$/;"	m	struct:app_data
gs_phOptionalHooks	include\arch\netware\apr_private.h	/^    void*   gs_phOptionalHooks;$/;"	m	struct:app_data
gs_socket_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_socket_rtag;$/;"	m	struct:app_data
gs_startup_rtag	include\arch\netware\apr_private.h	/^    rtag_t  gs_startup_rtag;$/;"	m	struct:app_data
gs_xref_head	include\arch\netware\apr_private.h	/^    void*   gs_xref_head;$/;"	m	struct:app_data
guess_protection_bits	file_io\win32\filestat.c	/^static apr_status_t guess_protection_bits(apr_finfo_t *finfo,$/;"	f	file:
hMap	shmem\win32\shm.c	/^    HANDLE      hMap;$/;"	m	struct:apr_shm_t	file:
hMutex	include\arch\os2\apr_arch_proc_mutex.h	/^    HMTX hMutex;$/;"	m	struct:apr_proc_mutex_t
hMutex	include\arch\os2\apr_arch_thread_mutex.h	/^    HMTX hMutex;$/;"	m	struct:apr_thread_mutex_t
hSO32DLL	network_io\os2\os2calls.c	/^static HMODULE hSO32DLL;$/;"	v	file:
handle	include\apr_dso.h	/^APR_DECLARE(apr_status_t) apr_dso_unload(apr_dso_handle_t *handle);$/;"	v
handle	include\arch\aix\apr_arch_dso.h	/^    void          *handle;$/;"	m	struct:apr_dso_handle_t
handle	include\arch\beos\apr_arch_dso.h	/^    image_id      handle;    \/* Handle to the DSO loaded *\/$/;"	m	struct:apr_dso_handle_t
handle	include\arch\netware\apr_arch_dso.h	/^    void        *handle;$/;"	m	struct:apr_dso_handle_t
handle	include\arch\os2\apr_arch_dso.h	/^    HMODULE       handle;     \/* Handle to the DSO loaded            *\/$/;"	m	struct:apr_dso_handle_t
handle	include\arch\os2\apr_arch_file_io.h	/^    ULONG handle;$/;"	m	struct:apr_dir_t
handle	include\arch\os390\apr_arch_dso.h	/^    dllhandle  *handle;     \/* Handle to the DSO loaded            *\/$/;"	m	struct:apr_dso_handle_t
handle	include\arch\unix\apr_arch_dso.h	/^    void          *handle;$/;"	m	struct:apr_dso_handle_t
handle	include\arch\win32\apr_arch_dso.h	/^    void          *handle;$/;"	m	struct:apr_dso_handle_t
handle	include\arch\win32\apr_arch_proc_mutex.h	/^    HANDLE handle;$/;"	m	struct:apr_proc_mutex_t
handle	include\arch\win32\apr_arch_thread_mutex.h	/^    HANDLE            handle;$/;"	m	struct:apr_thread_mutex_t
handle_type	file_io\os2\filestat.c	/^static apr_status_t handle_type(apr_filetype_e *ftype, HFILE file)$/;"	f	file:
has_arg	include\apr_getopt.h	/^    int has_arg;$/;"	m	struct:apr_getopt_option_t
has_space	threadproc\win32\proc.c	/^static const char* has_space(const char *str)$/;"	f	file:
hash	include\apr_hash.h	/^APR_POOL_DECLARE_ACCESSOR(hash);$/;"	v
hash	random\unix\apr_random.c	51;"	d	file:
hash	tables\apr_hash.c	/^    unsigned int      hash;$/;"	m	struct:apr_hash_entry_t	file:
hash_add	random\unix\apr_random.c	48;"	d	file:
hash_clear	test\testhash.c	/^static void hash_clear(abts_case *tc, void *data)$/;"	f	file:
hash_count_0	test\testhash.c	/^static void hash_count_0(abts_case *tc, void *data)$/;"	f	file:
hash_count_1	test\testhash.c	/^static void hash_count_1(abts_case *tc, void *data)$/;"	f	file:
hash_count_5	test\testhash.c	/^static void hash_count_5(abts_case *tc, void *data)$/;"	f	file:
hash_custom	test\testhash.c	/^static unsigned int hash_custom( const char *key, apr_ssize_t *klen)$/;"	f	file:
hash_finish	random\unix\apr_random.c	49;"	d	file:
hash_func	tables\apr_hash.c	/^    apr_hashfunc_t       hash_func;$/;"	m	struct:apr_hash_t	file:
hash_init	random\unix\apr_random.c	47;"	d	file:
hash_make	test\testhash.c	/^static void hash_make(abts_case *tc, void *data)$/;"	f	file:
hash_mutex	atomic\unix\mutex.c	/^static apr_thread_mutex_t **hash_mutex;$/;"	v	file:
hash_reset	test\testhash.c	/^static void hash_reset(abts_case *tc, void *data)$/;"	f	file:
hash_set	test\testhash.c	/^static void hash_set(abts_case *tc, void *data)$/;"	f	file:
hash_traverse	test\testhash.c	/^static void hash_traverse(abts_case *tc, void *data)$/;"	f	file:
have_env_del	test\testenv.c	/^static int have_env_del;$/;"	v	file:
have_env_get	test\testenv.c	/^static int have_env_get;$/;"	v	file:
have_env_set	test\testenv.c	/^static int have_env_set;$/;"	v	file:
head	test\abts.h	/^    sub_suite *head;$/;"	m	struct:abts_suite
headers	include\apr_network_io.h	/^    struct iovec* headers;$/;"	m	struct:apr_hdtr_t	typeref:struct:apr_hdtr_t::iovec
hexdump	test\testrand.c	/^static void hexdump(const unsigned char *b, int n)$/;"	f	file:
hi	include\apr_hash.h	/^APR_DECLARE(apr_hash_index_t *) apr_hash_next(apr_hash_index_t *hi);$/;"	v
hit	include\arch\beos\apr_arch_threadproc.h	/^    int hit;$/;"	m	struct:apr_thread_once_t
hit	include\arch\os2\apr_arch_threadproc.h	/^    char hit;$/;"	m	struct:apr_thread_once_t
hostname	include\apr_network_io.h	/^    char *hostname;$/;"	m	struct:apr_sockaddr_t
hproc	include\apr_thread_proc.h	/^    HANDLE hproc;$/;"	m	struct:apr_proc_t
ht	include\apr_hash.h	/^APR_DECLARE(unsigned int) apr_hash_count(apr_hash_t *ht);$/;"	v
ht	include\apr_hash.h	/^APR_DECLARE(void) apr_hash_clear(apr_hash_t *ht);$/;"	v
ht	tables\apr_hash.c	/^    apr_hash_t         *ht;$/;"	m	struct:apr_hash_index_t	file:
i	test\testlock.c	/^static int i = 0, x = 0;$/;"	v	file:
i	test\testlockperf.c	/^int i = 0, x = 0;$/;"	v
impl	poll\unix\epoll.c	/^static apr_pollset_provider_t impl = {$/;"	v	file:
impl	poll\unix\kqueue.c	/^static apr_pollset_provider_t impl = {$/;"	v	file:
impl	poll\unix\poll.c	/^static apr_pollset_provider_t impl = {$/;"	v	file:
impl	poll\unix\port.c	/^static apr_pollset_provider_t impl = {$/;"	v	file:
impl	poll\unix\select.c	/^static apr_pollset_provider_t impl = {$/;"	v	file:
impl_cb	poll\unix\epoll.c	/^static apr_pollcb_provider_t impl_cb = {$/;"	v	file:
impl_cb	poll\unix\kqueue.c	/^static apr_pollcb_provider_t impl_cb = {$/;"	v	file:
impl_cb	poll\unix\poll.c	/^static apr_pollcb_provider_t impl_cb = {$/;"	v	file:
impl_cb	poll\unix\port.c	/^static apr_pollcb_provider_t impl_cb = {$/;"	v	file:
impl_pollcb_add	poll\unix\epoll.c	/^static apr_status_t impl_pollcb_add(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_add	poll\unix\kqueue.c	/^static apr_status_t impl_pollcb_add(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_add	poll\unix\poll.c	/^static apr_status_t impl_pollcb_add(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_add	poll\unix\port.c	/^static apr_status_t impl_pollcb_add(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_create	poll\unix\epoll.c	/^static apr_status_t impl_pollcb_create(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_create	poll\unix\kqueue.c	/^static apr_status_t impl_pollcb_create(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_create	poll\unix\poll.c	/^static apr_status_t impl_pollcb_create(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_create	poll\unix\port.c	/^static apr_status_t impl_pollcb_create(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_poll	poll\unix\epoll.c	/^static apr_status_t impl_pollcb_poll(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_poll	poll\unix\kqueue.c	/^static apr_status_t impl_pollcb_poll(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_poll	poll\unix\poll.c	/^static apr_status_t impl_pollcb_poll(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_poll	poll\unix\port.c	/^static apr_status_t impl_pollcb_poll(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_remove	poll\unix\epoll.c	/^static apr_status_t impl_pollcb_remove(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_remove	poll\unix\kqueue.c	/^static apr_status_t impl_pollcb_remove(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_remove	poll\unix\poll.c	/^static apr_status_t impl_pollcb_remove(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollcb_remove	poll\unix\port.c	/^static apr_status_t impl_pollcb_remove(apr_pollcb_t *pollcb,$/;"	f	file:
impl_pollset_add	poll\unix\epoll.c	/^static apr_status_t impl_pollset_add(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_add	poll\unix\kqueue.c	/^static apr_status_t impl_pollset_add(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_add	poll\unix\poll.c	/^static apr_status_t impl_pollset_add(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_add	poll\unix\port.c	/^static apr_status_t impl_pollset_add(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_add	poll\unix\select.c	/^static apr_status_t impl_pollset_add(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_cleanup	poll\unix\epoll.c	/^static apr_status_t impl_pollset_cleanup(apr_pollset_t *pollset)$/;"	f	file:
impl_pollset_cleanup	poll\unix\kqueue.c	/^static apr_status_t impl_pollset_cleanup(apr_pollset_t *pollset)$/;"	f	file:
impl_pollset_cleanup	poll\unix\port.c	/^static apr_status_t impl_pollset_cleanup(apr_pollset_t *pollset)$/;"	f	file:
impl_pollset_create	poll\unix\epoll.c	/^static apr_status_t impl_pollset_create(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_create	poll\unix\kqueue.c	/^static apr_status_t impl_pollset_create(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_create	poll\unix\poll.c	/^static apr_status_t impl_pollset_create(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_create	poll\unix\port.c	/^static apr_status_t impl_pollset_create(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_create	poll\unix\select.c	/^static apr_status_t impl_pollset_create(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_poll	poll\unix\epoll.c	/^static apr_status_t impl_pollset_poll(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_poll	poll\unix\kqueue.c	/^static apr_status_t impl_pollset_poll(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_poll	poll\unix\poll.c	/^static apr_status_t impl_pollset_poll(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_poll	poll\unix\port.c	/^static apr_status_t impl_pollset_poll(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_poll	poll\unix\select.c	/^static apr_status_t impl_pollset_poll(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_remove	poll\unix\epoll.c	/^static apr_status_t impl_pollset_remove(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_remove	poll\unix\kqueue.c	/^static apr_status_t impl_pollset_remove(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_remove	poll\unix\poll.c	/^static apr_status_t impl_pollset_remove(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_remove	poll\unix\port.c	/^static apr_status_t impl_pollset_remove(apr_pollset_t *pollset,$/;"	f	file:
impl_pollset_remove	poll\unix\select.c	/^static apr_status_t impl_pollset_remove(apr_pollset_t * pollset,$/;"	f	file:
in	include\apr_thread_proc.h	/^    apr_file_t *in;$/;"	m	struct:apr_proc_t
in	threadproc\beos\apr_proc_stub.c	/^	int in;$/;"	m	struct:pipefd	file:
in	threadproc\beos\proc.c	/^	int in;$/;"	m	struct:send_pipe	file:
in6_addr	include\apr.h	614;"	d
in_addr	include\apr_network_io.h	/^struct in_addr {$/;"	s
in_addr::s_addr	include\apr_network_io.h	/^    apr_uint32_t  s_addr; \/**< storage to hold the IP# *\/$/;"	m	struct:in_addr
increment	test\testprocmutex.c	/^static int increment(int n)$/;"	f	file:
ind	include\apr_getopt.h	/^    int ind;$/;"	m	struct:apr_getopt_t
index	include\apr_allocator.h	/^    apr_uint32_t   index;           \/**< size *\/$/;"	m	struct:apr_memnode_t
index	memory\unix\apr_pools.c	/^    apr_uint32_t  index;$/;"	m	struct:debug_node_t	file:
index	tables\apr_hash.c	/^    unsigned int        index;$/;"	m	struct:apr_hash_index_t	file:
index_first	tables\apr_tables.c	/^    int index_first[TABLE_HASH_SIZE];$/;"	m	struct:apr_table_t	file:
index_initialized	tables\apr_tables.c	/^    apr_uint32_t index_initialized;$/;"	m	struct:apr_table_t	file:
index_last	tables\apr_tables.c	/^    int index_last[TABLE_HASH_SIZE];$/;"	m	struct:apr_table_t	file:
inet_ntop4	network_io\unix\inet_ntop.c	/^inet_ntop4(const unsigned char *src, char *dst, apr_size_t size)$/;"	f	file:
inet_ntop6	network_io\unix\inet_ntop.c	/^inet_ntop6(const unsigned char *src, char *dst, apr_size_t size)$/;"	f	file:
inet_pton4	network_io\unix\inet_pton.c	/^inet_pton4(const char *src, unsigned char *dst)$/;"	f	file:
inet_pton6	network_io\unix\inet_pton.c	/^inet_pton6(const char *src, unsigned char *dst)$/;"	f	file:
info	dso\aix\dso.c	/^    struct dl_info *info;	\/* optional init\/terminate functions *\/$/;"	m	struct:Module	typeref:struct:Module::dl_info	file:
info	include\arch\netware\apr_arch_file_io.h	/^    struct stat info;$/;"	m	struct:apr_stat_entry_t	typeref:struct:apr_stat_entry_t::stat
inherit	include\arch\os2\apr_arch_networkio.h	/^    apr_int32_t inherit;$/;"	m	struct:apr_socket_t
inherit	include\arch\unix\apr_arch_networkio.h	/^    apr_int32_t inherit;$/;"	m	struct:apr_socket_t
inherit	include\arch\win32\apr_arch_networkio.h	/^    apr_int32_t         inherit;$/;"	m	struct:apr_socket_t
init	dso\aix\dso.c	/^    void (*init) (void);	\/* call static constructors *\/$/;"	m	struct:__anon8	file:
init	dso\aix\dso.c	/^    void (*init) (void);$/;"	m	struct:dl_info	file:
init	include\apr_random.h	/^    apr_crypto_hash_init_t *init;$/;"	m	struct:apr_crypto_hash_t
init_count_chars	build\jlibtool.c	/^void init_count_chars(count_chars *cc)$/;"	f
init_func	test\testthread.c	/^static void init_func(void)$/;"	f	file:
initialize	test\testutil.c	/^void initialize(void) {$/;"	f
initialized	include\arch\netware\apr_private.h	/^    int     initialized;$/;"	m	struct:app_data
initialized	misc\unix\start.c	/^static int initialized = 0;$/;"	v	file:
initialized	misc\win32\start.c	/^static int initialized = 0;$/;"	v	file:
inode	include\apr_file_info.h	/^    apr_ino_t inode;$/;"	m	struct:apr_finfo_t
insecure_started	random\unix\apr_random.c	/^    unsigned int insecure_started:1;$/;"	m	struct:apr_random_t	file:
insert_count_chars	build\jlibtool.c	/^void insert_count_chars(count_chars *cc, const char *newval, int position)$/;"	f
install	build\jlibtool.c	/^    const char *install;$/;"	m	struct:__anon3	file:
install	build\jlibtool.c	/^    count_chars *install;$/;"	m	struct:__anon4	file:
install_path	build\jlibtool.c	/^    const char *install_path;$/;"	m	struct:__anon6	file:
int64_t_fmt	test\testfmt.c	/^static void int64_t_fmt(abts_case *tc, void *data)$/;"	f	file:
inter_meth	include\arch\unix\apr_arch_proc_mutex.h	/^    const apr_proc_mutex_unix_lock_methods_t *inter_meth;$/;"	m	struct:apr_proc_mutex_t
interleave	include\apr_getopt.h	/^    int interleave;$/;"	m	struct:apr_getopt_t
interproc	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_file_t *interproc;$/;"	m	struct:apr_proc_mutex_t
intraproc	include\apr_portable.h	/^    pthread_mutex_t *intraproc;$/;"	m	struct:apr_os_proc_mutex_t
invoked	include\apr_thread_proc.h	/^    char *invoked;$/;"	m	struct:apr_proc_t
ioctl	include\arch\os2\apr_arch_os2calls.h	50;"	d
iov_base	include\apr_want.h	/^    void *iov_base;$/;"	m	struct:iovec
iov_len	include\apr_want.h	/^    size_t iov_len;$/;"	m	struct:iovec
iovec	include\apr_want.h	/^struct iovec$/;"	s
iovec::iov_base	include\apr_want.h	/^    void *iov_base;$/;"	m	struct:iovec
iovec::iov_len	include\apr_want.h	/^    size_t iov_len;$/;"	m	struct:iovec
ipaddr_len	include\apr_network_io.h	/^    int ipaddr_len;$/;"	m	struct:apr_sockaddr_t
ipaddr_ptr	include\apr_network_io.h	/^    void *ipaddr_ptr;$/;"	m	struct:apr_sockaddr_t
is_dev	include\apr_version.h	/^    int is_dev;     \/**< is development (1 or 0) *\/$/;"	m	struct:__anon21
is_pipe	include\arch\netware\apr_arch_file_io.h	/^    int is_pipe;$/;"	m	struct:apr_file_t
is_pipe	include\arch\unix\apr_arch_file_io.h	/^    int is_pipe;$/;"	m	struct:apr_file_t
isopen	include\arch\os2\apr_arch_file_io.h	/^    int isopen;$/;"	m	struct:apr_file_t
iterator	tables\apr_hash.c	/^    apr_hash_index_t     iterator;  \/* For apr_hash_first(NULL, ...) *\/$/;"	m	struct:apr_hash_t	file:
iters	test\sockperf.c	/^    int iters;$/;"	m	struct:testResult	file:
iters	test\sockperf.c	/^    int iters;$/;"	m	struct:testSet	file:
jlibtool_basename	build\jlibtool.c	/^const char *jlibtool_basename(const char *fullpath)$/;"	f
join_threads	test\testthread.c	/^static void join_threads(abts_case *tc, void *data)$/;"	f	file:
joinable	include\arch\beos\apr_arch_threadproc.h	/^    int joinable;$/;"	m	struct:apr_threadattr_t
joined	memory\unix\apr_pools.c	/^    apr_pool_t           *joined; \/* the caller has guaranteed that this pool$/;"	m	struct:apr_pool_t	file:
justsleep	test\testpoll.c	/^static void justsleep(abts_case *tc, void *data)$/;"	f	file:
ke	include\arch\unix\apr_arch_poll_private.h	/^    struct kevent *ke;$/;"	m	union:__anon25	typeref:struct:__anon25::kevent
ke_set	poll\unix\kqueue.c	/^    struct kevent *ke_set;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::kevent	file:
kevent	poll\unix\kqueue.c	/^    struct kevent kevent;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::kevent	file:
key	include\apr_tables.h	/^    char *key;          \/* maybe NULL in future;$/;"	m	struct:apr_table_entry_t
key	include\apr_thread_proc.h	/^APR_DECLARE(apr_status_t) apr_threadkey_private_delete(apr_threadkey_t *key);$/;"	v
key	include\arch\beos\apr_arch_threadproc.h	/^	int32  key;$/;"	m	struct:apr_threadkey_t
key	include\arch\netware\apr_arch_threadproc.h	/^    NXKey_t key;$/;"	m	struct:apr_threadkey_t
key	include\arch\os2\apr_arch_networkio.h	/^    const char *key;$/;"	m	struct:sock_userdata_t
key	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long *key;$/;"	m	struct:apr_threadkey_t
key	include\arch\unix\apr_arch_networkio.h	/^    const char *key;$/;"	m	struct:sock_userdata_t
key	include\arch\unix\apr_arch_threadproc.h	/^    pthread_key_t key;$/;"	m	struct:apr_threadkey_t
key	include\arch\win32\apr_arch_networkio.h	/^    const char *key;$/;"	m	struct:sock_userdata_t
key	include\arch\win32\apr_arch_threadproc.h	/^    DWORD key;$/;"	m	struct:apr_threadkey_t
key	tables\apr_hash.c	/^    const void       *key;$/;"	m	struct:apr_hash_entry_t	file:
key_checksum	include\apr_tables.h	/^    apr_uint32_t key_checksum;$/;"	m	struct:apr_table_entry_t
key_hash	random\unix\apr_random.c	/^    apr_crypto_hash_t *key_hash;$/;"	m	struct:apr_random_t	file:
key_space	test\testhash.c	/^static void key_space(abts_case *tc, void *data)$/;"	f	file:
key_table	threadproc\beos\threadpriv.c	/^static struct beos_key key_table[BEOS_MAX_DATAKEYS];$/;"	v	typeref:struct:beos_key	file:
kill_how	memory\unix\apr_pools.c	/^    apr_kill_conditions_e kill_how;$/;"	m	struct:process_chain	file:
klen	tables\apr_hash.c	/^    apr_ssize_t       klen;$/;"	m	struct:apr_hash_entry_t	file:
kqueue_fd	poll\unix\kqueue.c	/^    int kqueue_fd;$/;"	m	struct:apr_pollset_private_t	file:
lateDllHandle	misc\win32\misc.c	/^static HMODULE lateDllHandle[DLL_defined] = {$/;"	v	file:
lateDllName	misc\win32\misc.c	/^static const char* const lateDllName[DLL_defined] = {$/;"	v	file:
launch_child	test\testglobalmutex.c	/^static void launch_child(abts_case *tc, apr_lockmech_e mech,$/;"	f	file:
launch_child	test\testsock.c	/^static void launch_child(abts_case *tc, apr_proc_t *proc, const char *arg1, apr_pool_t *p)$/;"	f	file:
launch_reader	test\testflock.c	/^static int launch_reader(abts_case *tc)$/;"	f	file:
leave_scope	build\make_exports.awk	/^function leave_scope() {$/;"	f
len	include\arch\win32\apr_arch_networkio.h	/^    u_long      len;     \/* the length of the buffer *\/$/;"	m	struct:_WSABUF
length	shmem\win32\shm.c	/^    apr_size_t  length;$/;"	m	struct:apr_shm_t	file:
length	shmem\win32\shm.c	/^    apr_size_t length;$/;"	m	struct:memblock_t	file:
less0	test\teststrnatcmp.c	/^static void less0(abts_case *tc, void *data)$/;"	f	file:
less_ignore_case	test\teststrnatcmp.c	/^static void less_ignore_case(abts_case *tc, void *data)$/;"	f	file:
lib_type	build\jlibtool.c	/^enum lib_type {$/;"	g	file:
libname	test\testdso.c	/^static char *libname;$/;"	v	file:
library_name	build\jlibtool.c	/^} library_name;$/;"	t	typeref:struct:__anon3	file:
library_opts	build\jlibtool.c	/^} library_opts;$/;"	t	typeref:struct:__anon4	file:
limit_cpu	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_cpu;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
limit_mem	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_mem;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
limit_nofile	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_nofile;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
limit_nproc	include\arch\unix\apr_arch_threadproc.h	/^    struct rlimit *limit_nproc;$/;"	m	struct:apr_procattr_t	typeref:struct:apr_procattr_t::rlimit
limit_proc	threadproc\netware\proc.c	/^static apr_status_t limit_proc(apr_procattr_t *attr)$/;"	f	file:
limit_proc	threadproc\unix\proc.c	/^static apr_status_t limit_proc(apr_procattr_t *attr)$/;"	f	file:
link	include\apr_mmap.h	/^    APR_RING_ENTRY(apr_mmap_t) link;$/;"	m	struct:apr_mmap_t
link	include\arch\beos\apr_arch_thread_cond.h	/^    APR_RING_ENTRY(waiter_t) link;$/;"	m	struct:waiter_t
link	include\arch\unix\apr_arch_poll_private.h	/^    APR_RING_ENTRY(pfd_elem_t) link;$/;"	m	struct:pfd_elem_t
link_existing	test\testfile.c	/^static void link_existing(abts_case *tc, void *data)$/;"	f	file:
link_fixup	build\jlibtool.c	/^void link_fixup(command_t *c)$/;"	f
link_nonexisting	test\testfile.c	/^static void link_nonexisting(abts_case *tc, void *data)$/;"	f	file:
list_insert	memory\unix\apr_pools.c	643;"	d	file:
list_merge_multi	test\testpath.c	/^static void list_merge_multi(abts_case *tc, void *data)$/;"	f	file:
list_merge_single	test\testpath.c	/^static void list_merge_single(abts_case *tc, void *data)$/;"	f	file:
list_remove	memory\unix\apr_pools.c	651;"	d	file:
list_split_multi	test\testpath.c	/^static void list_split_multi(abts_case *tc, void *data)$/;"	f	file:
list_split_single	test\testpath.c	/^static void list_split_single(abts_case *tc, void *data)$/;"	f	file:
list_tests	test\abts.c	/^static int list_tests = 0;$/;"	v	file:
listen	include\arch\os2\apr_arch_os2calls.h	51;"	d
load_error	include\arch\os2\apr_arch_dso.h	/^    apr_status_t   load_error;$/;"	m	struct:apr_dso_handle_t
load_error	include\arch\win32\apr_arch_dso.h	/^    apr_status_t   load_error;$/;"	m	struct:apr_dso_handle_t
load_install_path	build\jlibtool.c	/^char * load_install_path(const char *arg)$/;"	f
load_noinstall_path	build\jlibtool.c	/^char * load_noinstall_path(const char *arg, int pathlen)$/;"	f
local	include\apr_portable.h	/^    struct sockaddr *local; \/**< NULL if not yet bound *\/$/;"	m	struct:apr_os_sock_info_t	typeref:struct:apr_os_sock_info_t::sockaddr
local_addr	include\arch\os2\apr_arch_networkio.h	/^    apr_sockaddr_t *local_addr;$/;"	m	struct:apr_socket_t
local_addr	include\arch\unix\apr_arch_networkio.h	/^    apr_sockaddr_t *local_addr;$/;"	m	struct:apr_socket_t
local_addr	include\arch\win32\apr_arch_networkio.h	/^    apr_sockaddr_t     *local_addr;$/;"	m	struct:apr_socket_t
local_interface_unknown	include\arch\os2\apr_arch_networkio.h	/^    int local_interface_unknown;$/;"	m	struct:apr_socket_t
local_interface_unknown	include\arch\unix\apr_arch_networkio.h	/^    int local_interface_unknown;$/;"	m	struct:apr_socket_t
local_interface_unknown	include\arch\win32\apr_arch_networkio.h	/^    int                 local_interface_unknown;$/;"	m	struct:apr_socket_t
local_port_unknown	include\arch\os2\apr_arch_networkio.h	/^    int local_port_unknown;$/;"	m	struct:apr_socket_t
local_port_unknown	include\arch\unix\apr_arch_networkio.h	/^    int local_port_unknown;$/;"	m	struct:apr_socket_t
local_port_unknown	include\arch\win32\apr_arch_networkio.h	/^    int                 local_port_unknown;$/;"	m	struct:apr_socket_t
lock	include\arch\beos\apr_arch_thread_cond.h	/^    sem_id lock;$/;"	m	struct:apr_thread_cond_t
lock	include\arch\beos\apr_arch_threadproc.h	/^	sem_id  lock;$/;"	m	struct:beos_key
lock	threadproc\beos\threadpriv.c	/^static sem_id lock;$/;"	v	file:
lock_and_signal	test\testcond.c	/^static void lock_and_signal(toolbox_t *box)$/;"	f	file:
lock_and_wait	test\testcond.c	/^static void lock_and_wait(toolbox_t *box)$/;"	f	file:
lock_count	include\arch\os2\apr_arch_proc_mutex.h	/^    int lock_count;$/;"	m	struct:apr_proc_mutex_t
lock_destroy	test\testmutexscope.c	/^static void lock_destroy(test_mode_e test_mode)$/;"	f	file:
lock_grab	test\testmutexscope.c	/^static void lock_grab(test_mode_e test_mode)$/;"	f	file:
lock_init	test\testmutexscope.c	/^static void lock_init(apr_lockmech_e mech, test_mode_e test_mode)$/;"	f	file:
lock_release	test\testmutexscope.c	/^static void lock_release(test_mode_e test_mode)$/;"	f	file:
looks_like_ip	network_io\unix\sockaddr.c	/^static int looks_like_ip(const char *ipstr)$/;"	f	file:
loop	test\testatomic.c	/^    apr_uint32_t loop;$/;"	m	struct:tbox_t	file:
lost_signal	test\testcond.c	/^static void lost_signal(abts_case *tc, void *data)$/;"	f	file:
lseek	include\arch\netware\apr_arch_file_io.h	91;"	d
lseek	include\arch\unix\apr_arch_file_io.h	138;"	d
lstat	include\arch\unix\apr_arch_file_io.h	136;"	d
m	include\apr_shm.h	/^APR_DECLARE(apr_size_t) apr_shm_size_get(const apr_shm_t *m);$/;"	v
m	include\apr_shm.h	/^APR_DECLARE(apr_status_t) apr_shm_destroy(apr_shm_t *m);$/;"	v
m	include\apr_shm.h	/^APR_DECLARE(apr_status_t) apr_shm_detach(apr_shm_t *m);$/;"	v
m	include\apr_shm.h	/^APR_DECLARE(void *) apr_shm_baseaddr_get(const apr_shm_t *m);$/;"	v
mCompile	build\aplibtool.c	/^enum mode_t { mCompile, mLink, mInstall };$/;"	e	enum:mode_t	file:
mCompile	build\jlibtool.c	/^    mCompile,$/;"	e	enum:tool_mode_t	file:
mInstall	build\aplibtool.c	/^enum mode_t { mCompile, mLink, mInstall };$/;"	e	enum:mode_t	file:
mInstall	build\jlibtool.c	/^    mInstall,$/;"	e	enum:tool_mode_t	file:
mLink	build\aplibtool.c	/^enum mode_t { mCompile, mLink, mInstall };$/;"	e	enum:mode_t	file:
mLink	build\jlibtool.c	/^    mLink,$/;"	e	enum:tool_mode_t	file:
mUnknown	build\jlibtool.c	/^    mUnknown,$/;"	e	enum:tool_mode_t	file:
madefile	test\testlfs.c	/^static int madefile = 0;$/;"	v	file:
main	build\aplibtool.c	/^int main(int argc, char *argv[])$/;"	f
main	build\gen-build.py	/^def main():$/;"	f
main	build\jlibtool.c	/^int main(int argc, char *argv[])$/;"	f
main	test\abts.c	/^int main(int argc, const char *const argv[]) {$/;"	f
main	test\echod.c	/^int main(int argc, char **argv)$/;"	f
main	test\globalmutexchild.c	/^int main(int argc, const char * const argv[])$/;"	f
main	test\internal\testregex.c	/^int main( int argc, char** argv) {$/;"	f
main	test\internal\testucs.c	/^int main(int argc, char **argv)$/;"	f
main	test\occhild.c	/^int main(void)$/;"	f
main	test\proc_child.c	/^int main(void)$/;"	f
main	test\readchild.c	/^int main(int argc, char *argv[])$/;"	f
main	test\sendfile.c	/^int main(int argc, char *argv[])$/;"	f
main	test\sendfile.c	/^int main(void)$/;"	f
main	test\sockchild.c	/^int main(int argc, char *argv[])$/;"	f
main	test\sockperf.c	/^int main(int argc, char **argv)$/;"	f
main	test\testapp.c	/^int main(int argc, const char * const * argv, const char * const *env)$/;"	f
main	test\testlockperf.c	/^int main(int argc, const char * const *argv)$/;"	f
main	test\testlockperf.c	/^int main(void)$/;"	f
main	test\testmutexscope.c	/^int main(void)$/;"	f
main	test\testshmconsumer.c	/^int main(void)$/;"	f
main	test\testshmproducer.c	/^int main(void)$/;"	f
main	test\tryread.c	/^int main(int argc, const char * const *argv)$/;"	f
main	threadproc\beos\apr_proc_stub.c	/^int main(int argc, char *argv[]) {$/;"	f
maintenance	include\arch\unix\apr_arch_misc.h	/^    void (*maintenance) (int, void *, int);$/;"	m	struct:apr_other_child_rec_t
maintenance	include\arch\win32\apr_arch_misc.h	/^    void (*maintenance) (int, void *, int);$/;"	m	struct:apr_other_child_rec_t
major	include\apr_version.h	/^    int major;      \/**< major number *\/$/;"	m	struct:__anon21
make_array_core	tables\apr_tables.c	/^static void make_array_core(apr_array_header_t *res, apr_pool_t *p,$/;"	f	file:
make_child	test\testprocmutex.c	/^static void make_child(abts_case *tc, int trylock, apr_proc_t **proc, apr_pool_t *p)$/;"	f	file:
make_pollset	poll\os2\pollset.c	/^static void make_pollset(apr_pollset_t *pollset)$/;"	f	file:
make_socket	test\testpoll.c	/^static void make_socket(apr_socket_t **sock, apr_sockaddr_t **sa, $/;"	f	file:
make_sparse_file	file_io\win32\open.c	/^static apr_status_t make_sparse_file(apr_file_t *file)$/;"	f	file:
make_waiter	locks\beos\thread_cond.c	/^static struct waiter_t *make_waiter(apr_pool_t *pool)$/;"	f	file:
malformed	test\internal\testucs.c	/^struct testval malformed[] = [$/;"	v	typeref:struct:testval
malloc	include\arch\netware\apr_private.h	181;"	d
malloc	include\arch\netware\apr_private.h	182;"	d
mask	network_io\unix\sockaddr.c	/^    apr_uint32_t mask[1];$/;"	m	struct:apr_ipsubnet_t	file:
mask	network_io\unix\sockaddr.c	/^    apr_uint32_t mask[4];$/;"	m	struct:apr_ipsubnet_t	file:
max	tables\apr_hash.c	/^    unsigned int         count, max;$/;"	m	struct:apr_hash_t	file:
max_free_index	memory\unix\apr_pools.c	/^    apr_uint32_t        max_free_index;$/;"	m	struct:apr_allocator_t	file:
max_index	memory\unix\apr_pools.c	/^    apr_uint32_t        max_index;$/;"	m	struct:apr_allocator_t	file:
maxfd	poll\unix\select.c	/^    int maxfd;$/;"	m	struct:apr_pollset_private_t	file:
mbox	test\testshm.h	/^typedef struct mbox {$/;"	s
mbox	test\testshm.h	/^} mbox;$/;"	t	typeref:struct:mbox
mbox::msg	test\testshm.h	/^    char msg[1024]; $/;"	m	struct:mbox
mbox::msgavail	test\testshm.h	/^    int msgavail; $/;"	m	struct:mbox
mem	include\apr_atomic.h	/^APR_DECLARE(apr_uint32_t) apr_atomic_inc32(volatile apr_uint32_t *mem);$/;"	v
mem	include\apr_atomic.h	/^APR_DECLARE(apr_uint32_t) apr_atomic_read32(volatile apr_uint32_t *mem);$/;"	v
mem	include\apr_atomic.h	/^APR_DECLARE(int) apr_atomic_dec32(volatile apr_uint32_t *mem);$/;"	v
mem	memory\unix\apr_pools.c	/^    char      *mem;$/;"	m	struct:psprintf_data	file:
mem	test\testatomic.c	/^    apr_uint32_t *mem;$/;"	m	struct:tbox_t	file:
memblk	shmem\win32\shm.c	/^    memblock_t *memblk;$/;"	m	struct:apr_shm_t	file:
memblock	shmem\beos\shm.c	/^    void *memblock;$/;"	m	struct:apr_shm_t	file:
memblock	shmem\os2\shm.c	/^    void *memblock;$/;"	m	struct:apr_shm_t	file:
memblock_t	shmem\win32\shm.c	/^typedef struct memblock_t {$/;"	s	file:
memblock_t	shmem\win32\shm.c	/^} memblock_t;$/;"	t	typeref:struct:memblock_t	file:
memblock_t::length	shmem\win32\shm.c	/^    apr_size_t length;$/;"	m	struct:memblock_t	file:
memblock_t::size	shmem\win32\shm.c	/^    apr_size_t size;$/;"	m	struct:memblock_t	file:
memchr	strings\apr_strings.c	/^void *memchr(const void *s, int c, size_t n)$/;"	f
memmove	include\apr_general.h	156;"	d
merge_aboveroot	test\testnames.c	/^static void merge_aboveroot(abts_case *tc, void *data)$/;"	f	file:
merge_belowroot	test\testnames.c	/^static void merge_belowroot(abts_case *tc, void *data)$/;"	f	file:
merge_dotdot	test\testnames.c	/^static void merge_dotdot(abts_case *tc, void *data)$/;"	f	file:
merge_dotdot_dotdot_dotdot	test\testnames.c	/^static void merge_dotdot_dotdot_dotdot(abts_case *tc, void *data)$/;"	f	file:
merge_lowercasedrive	test\testnames.c	/^static void merge_lowercasedrive(abts_case *tc, void *data)$/;"	f	file:
merge_noflag	test\testnames.c	/^static void merge_noflag(abts_case *tc, void *data)$/;"	f	file:
merge_notabs	test\testnames.c	/^static void merge_notabs(abts_case *tc, void *data)$/;"	f	file:
merge_notabsfail	test\testnames.c	/^static void merge_notabsfail(abts_case *tc, void *data)$/;"	f	file:
merge_notrel	test\testnames.c	/^static void merge_notrel(abts_case *tc, void *data)$/;"	f	file:
merge_notrelfail	test\testnames.c	/^static void merge_notrelfail(abts_case *tc, void *data)$/;"	f	file:
merge_secure	test\testnames.c	/^static void merge_secure(abts_case *tc, void *data)$/;"	f	file:
meth	include\arch\unix\apr_arch_proc_mutex.h	/^    const apr_proc_mutex_unix_lock_methods_t *meth;$/;"	m	struct:apr_proc_mutex_t
mhandle	include\apr_mmap.h	/^    HANDLE mhandle;$/;"	m	struct:apr_mmap_t
min	random\unix\apr_random.c	30;"	d	file:
min	random\unix\apr_random.c	32;"	d	file:
minor	include\apr_version.h	/^    int minor;      \/**< minor number *\/$/;"	m	struct:__anon21
mix_pid	random\unix\apr_random.c	/^static void mix_pid(apr_random_t *g,unsigned char *H,pid_t pid)$/;"	f	file:
mixer	random\unix\apr_random.c	/^static void mixer(apr_random_t *g,pid_t pid)$/;"	f	file:
mm	include\apr_mmap.h	/^    void *mm;$/;"	m	struct:apr_mmap_t
mm	include\apr_mmap.h	/^APR_DECLARE(apr_status_t) apr_mmap_delete(apr_mmap_t *mm);$/;"	v
mmap	mmap\unix\mmap.c	88;"	d	file:
mmap_cleanup	mmap\unix\mmap.c	/^static apr_status_t mmap_cleanup(void *themmap)$/;"	f	file:
mmap_cleanup	mmap\win32\mmap.c	/^static apr_status_t mmap_cleanup(void *themmap)$/;"	f	file:
modList	dso\aix\dso.c	/^static ModulePtr modList;$/;"	v	file:
mode	build\aplibtool.c	/^    enum mode_t mode;$/;"	m	struct:__anon1	typeref:enum:__anon1::mode_t	file:
mode	build\jlibtool.c	/^    enum tool_mode_t mode;$/;"	m	struct:__anon6	typeref:enum:__anon6::tool_mode_t	file:
mode_t	build\aplibtool.c	/^enum mode_t { mCompile, mLink, mInstall };$/;"	g	file:
modname	test\testdso.c	/^static char *modname;$/;"	v	file:
module_name	build\jlibtool.c	/^    library_name module_name;$/;"	m	struct:__anon6	file:
more0	test\teststrnatcmp.c	/^static void more0(abts_case *tc, void *data)$/;"	f	file:
more_finfo	file_io\win32\filestat.c	/^apr_status_t more_finfo(apr_finfo_t *finfo, const void *ufile, $/;"	f
more_ignore_case	test\teststrnatcmp.c	/^static void more_ignore_case(abts_case *tc, void *data)$/;"	f	file:
more_int64_fmts	test\testfmt.c	/^static void more_int64_fmts(abts_case *tc, void *data)$/;"	f	file:
msecs	test\sockperf.c	/^    apr_time_t msecs[MAX_ITERS];$/;"	m	struct:testResult	file:
msg	misc\unix\errorcodes.c	/^    const char *msg;$/;"	m	struct:__anon32	file:
msg	test\testshm.h	/^    char msg[1024]; $/;"	m	struct:mbox
msgavail	test\testshm.h	/^    int msgavail; $/;"	m	struct:mbox
msgput	test\testshm.c	/^static void msgput(int boxnum, char *msg)$/;"	f	file:
msgput	test\testshmproducer.c	/^static void msgput(int boxnum, char *msg)$/;"	f	file:
msgwait	test\testshm.c	/^static int msgwait(int sleep_sec, int first_box, int last_box)$/;"	f	file:
msgwait	test\testshmconsumer.c	/^static int msgwait(int sleep_sec, int first_box, int last_box)$/;"	f	file:
mtime	include\apr_file_info.h	/^    apr_time_t mtime;$/;"	m	struct:apr_finfo_t
multi_event_pollset	test\testpoll.c	/^static void multi_event_pollset(abts_case *tc, void *data)$/;"	f	file:
mutex	include\apr_global_mutex.h	/^APR_DECLARE(apr_status_t) apr_global_mutex_destroy(apr_global_mutex_t *mutex);$/;"	v
mutex	include\apr_global_mutex.h	/^APR_DECLARE(apr_status_t) apr_global_mutex_lock(apr_global_mutex_t *mutex);$/;"	v
mutex	include\apr_global_mutex.h	/^APR_DECLARE(apr_status_t) apr_global_mutex_trylock(apr_global_mutex_t *mutex);$/;"	v
mutex	include\apr_global_mutex.h	/^APR_DECLARE(apr_status_t) apr_global_mutex_unlock(apr_global_mutex_t *mutex);$/;"	v
mutex	include\apr_global_mutex.h	/^APR_DECLARE(const char *) apr_global_mutex_lockfile(apr_global_mutex_t *mutex);$/;"	v
mutex	include\apr_global_mutex.h	/^APR_DECLARE(const char *) apr_global_mutex_name(apr_global_mutex_t *mutex);$/;"	v
mutex	include\apr_proc_mutex.h	/^APR_DECLARE(apr_status_t) apr_proc_mutex_destroy(apr_proc_mutex_t *mutex);$/;"	v
mutex	include\apr_proc_mutex.h	/^APR_DECLARE(apr_status_t) apr_proc_mutex_lock(apr_proc_mutex_t *mutex);$/;"	v
mutex	include\apr_proc_mutex.h	/^APR_DECLARE(apr_status_t) apr_proc_mutex_trylock(apr_proc_mutex_t *mutex);$/;"	v
mutex	include\apr_proc_mutex.h	/^APR_DECLARE(apr_status_t) apr_proc_mutex_unlock(apr_proc_mutex_t *mutex);$/;"	v
mutex	include\apr_proc_mutex.h	/^APR_DECLARE(const char *) apr_proc_mutex_lockfile(apr_proc_mutex_t *mutex);$/;"	v
mutex	include\apr_proc_mutex.h	/^APR_DECLARE(const char *) apr_proc_mutex_name(apr_proc_mutex_t *mutex);$/;"	v
mutex	include\apr_thread_mutex.h	/^APR_DECLARE(apr_status_t) apr_thread_mutex_destroy(apr_thread_mutex_t *mutex);$/;"	v
mutex	include\apr_thread_mutex.h	/^APR_DECLARE(apr_status_t) apr_thread_mutex_lock(apr_thread_mutex_t *mutex);$/;"	v
mutex	include\apr_thread_mutex.h	/^APR_DECLARE(apr_status_t) apr_thread_mutex_trylock(apr_thread_mutex_t *mutex);$/;"	v
mutex	include\apr_thread_mutex.h	/^APR_DECLARE(apr_status_t) apr_thread_mutex_unlock(apr_thread_mutex_t *mutex);$/;"	v
mutex	include\arch\netware\apr_arch_global_mutex.h	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:apr_global_mutex_t
mutex	include\arch\netware\apr_arch_proc_mutex.h	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:apr_proc_mutex_t
mutex	include\arch\netware\apr_arch_thread_mutex.h	/^    NXMutex_t *mutex;$/;"	m	struct:apr_thread_mutex_t
mutex	include\arch\os2\apr_arch_file_io.h	/^    apr_thread_mutex_t *mutex; \/* mutex semaphore, must be owned to access$/;"	m	struct:apr_file_t
mutex	include\arch\unix\apr_arch_thread_mutex.h	/^    pthread_mutex_t mutex;$/;"	m	struct:apr_thread_mutex_t
mutex	include\arch\win32\apr_arch_file_io.h	/^    apr_thread_mutex_t *mutex; \/\/ mutex semaphore, must be owned to access the above fields$/;"	m	struct:apr_file_t
mutex	memory\unix\apr_pools.c	/^    apr_thread_mutex_t   *mutex;$/;"	m	struct:apr_pool_t	file:
mutex	memory\unix\apr_pools.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:apr_allocator_t	file:
mutex	test\testcond.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:toolbox_t	file:
mutex	test\testlock.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:__anon36	file:
mutex	test\testlock.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:__anon37	file:
mutex_counter	test\testlockperf.c	/^static long mutex_counter;$/;"	v	file:
mutex_fcntl_methods	locks\unix\proc_mutex.c	/^static const apr_proc_mutex_unix_lock_methods_t mutex_fcntl_methods =$/;"	v	file:
mutex_flock_methods	locks\unix\proc_mutex.c	/^static const apr_proc_mutex_unix_lock_methods_t mutex_flock_methods =$/;"	v	file:
mutex_hash	atomic\unix\mutex.c	/^static APR_INLINE apr_thread_mutex_t *mutex_hash(volatile apr_uint32_t *mem)$/;"	f	file:
mutex_locks	test\testatomic.c	/^volatile apr_uint32_t mutex_locks = 0;$/;"	v
mutex_posixsem_methods	locks\unix\proc_mutex.c	/^static const apr_proc_mutex_unix_lock_methods_t mutex_posixsem_methods =$/;"	v	file:
mutex_proc_pthread_methods	locks\unix\proc_mutex.c	/^static const apr_proc_mutex_unix_lock_methods_t mutex_proc_pthread_methods =$/;"	v	file:
mutex_sysv_methods	locks\unix\proc_mutex.c	/^static const apr_proc_mutex_unix_lock_methods_t mutex_sysv_methods =$/;"	v	file:
mutexname	test\testglobalmutex.c	/^static const char *mutexname(apr_lockmech_e mech)$/;"	f	file:
mv	include\apr_mmap.h	/^    void *mv;$/;"	m	struct:apr_mmap_t
n	include\arch\win32\apr_arch_file_io.h	/^        } n;$/;"	m	union:apr_dir_t::__anon26	typeref:struct:apr_dir_t::__anon26::__anon28
n	test\internal\testucs.c	/^    unsigned char n[8];$/;"	m	struct:testval	file:
nExports	dso\aix\dso.c	/^    int nExports;		\/* the number of exports found *\/$/;"	m	struct:Module	file:
nalloc	include\apr_tables.h	/^    int nalloc;$/;"	m	struct:apr_array_header_t
nalloc	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nalloc;$/;"	m	struct:apr_pollcb_t
nalloc	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nalloc;$/;"	m	struct:apr_pollset_t
nalloc	poll\os2\pollset.c	/^    apr_uint32_t nalloc;$/;"	m	struct:apr_pollset_t	file:
name	dso\aix\dso.c	/^    char *name;			\/* module name for refcounting *\/$/;"	m	struct:Module	file:
name	dso\aix\dso.c	/^    char *name;			\/* the symbols's name *\/$/;"	m	struct:__anon7	file:
name	include\apr_file_info.h	/^    const char *name;$/;"	m	struct:apr_finfo_t
name	include\apr_getopt.h	/^    const char *name;$/;"	m	struct:apr_getopt_option_t
name	include\arch\unix\apr_arch_poll_private.h	/^    const char *name;$/;"	m	struct:apr_pollcb_provider_t
name	include\arch\unix\apr_arch_poll_private.h	/^    const char *name;$/;"	m	struct:apr_pollset_provider_t
name	include\arch\unix\apr_arch_proc_mutex.h	/^    const char *name;$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
name	include\arch\win32\apr_arch_file_io.h	/^    char *name;$/;"	m	struct:apr_dir_t
name	test\abts.h	/^    const char *name;$/;"	m	struct:sub_suite
nameof	build\aplibtool.c	/^char *nameof(char *fullpath)$/;"	f
nameof	build\jlibtool.c	/^const char *nameof(const char *fullpath)$/;"	f
natcmp	test\teststrnatcmp.c	/^static void natcmp(abts_case *tc, void *data)$/;"	f	file:
native_strerror	misc\unix\errorcodes.c	/^static char *native_strerror(apr_status_t statcode, char *buf,$/;"	f	file:
nelts	include\apr_tables.h	/^    int nelts;$/;"	m	struct:apr_array_header_t
nelts	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nelts;$/;"	m	struct:apr_pollcb_t
nelts	include\arch\unix\apr_arch_poll_private.h	/^    apr_uint32_t nelts;$/;"	m	struct:apr_pollset_t
nelts	poll\os2\pollset.c	/^    apr_uint32_t nelts;$/;"	m	struct:apr_pollset_t	file:
nested	include\arch\beos\apr_arch_thread_mutex.h	/^    int nested;  $/;"	m	struct:apr_thread_mutex_t
nested_lock_and_unlock	test\testcond.c	/^static void nested_lock_and_unlock(toolbox_t *box)$/;"	f	file:
nested_lock_and_wait	test\testcond.c	/^static void nested_lock_and_wait(toolbox_t *box)$/;"	f	file:
nested_wait	test\testcond.c	/^static void nested_wait(abts_case *tc, void *data)$/;"	f	file:
netware_pool_proc_cleanup	memory\unix\apr_pools.c	/^void netware_pool_proc_cleanup ()$/;"	f
newpool	include\apr_pools.h	/^APR_DECLARE(apr_status_t) apr_pool_create_core(apr_pool_t **newpool);$/;"	v
newpool	include\apr_pools.h	/^APR_DECLARE(apr_status_t) apr_pool_create_unmanaged(apr_pool_t **newpool);$/;"	v
newproc	test\testproc.c	/^static apr_proc_t newproc;$/;"	v	file:
next	dso\aix\dso.c	/^    struct Module *next;$/;"	m	struct:Module	typeref:struct:Module::Module	file:
next	include\apr_allocator.h	/^    apr_memnode_t *next;            \/**< next memnode *\/$/;"	m	struct:apr_memnode_t
next	include\apr_network_io.h	/^    apr_sockaddr_t *next;$/;"	m	struct:apr_sockaddr_t
next	include\arch\netware\apr_arch_dso.h	/^    sym_list *next;$/;"	m	struct:sym_list
next	include\arch\os2\apr_arch_networkio.h	/^    sock_userdata_t *next;$/;"	m	struct:sock_userdata_t
next	include\arch\unix\apr_arch_misc.h	/^    struct apr_other_child_rec_t *next;$/;"	m	struct:apr_other_child_rec_t	typeref:struct:apr_other_child_rec_t::apr_other_child_rec_t
next	include\arch\unix\apr_arch_networkio.h	/^    sock_userdata_t *next;$/;"	m	struct:sock_userdata_t
next	include\arch\win32\apr_arch_misc.h	/^    struct apr_other_child_rec_t *next;$/;"	m	struct:apr_other_child_rec_t	typeref:struct:apr_other_child_rec_t::apr_other_child_rec_t
next	include\arch\win32\apr_arch_networkio.h	/^    sock_userdata_t *next;$/;"	m	struct:sock_userdata_t
next	memory\unix\apr_pools.c	/^    debug_node_t *next;$/;"	m	struct:debug_node_t	file:
next	memory\unix\apr_pools.c	/^    struct cleanup_t *next;$/;"	m	struct:cleanup_t	typeref:struct:cleanup_t::cleanup_t	file:
next	memory\unix\apr_pools.c	/^    struct process_chain *next;$/;"	m	struct:process_chain	typeref:struct:process_chain::process_chain	file:
next	random\unix\apr_random.c	/^    apr_random_t *next;$/;"	m	struct:apr_random_t	file:
next	tables\apr_hash.c	/^    apr_hash_entry_t   *this, *next;$/;"	m	struct:apr_hash_index_t	file:
next	tables\apr_hash.c	/^    apr_hash_entry_t *next;$/;"	m	struct:apr_hash_entry_t	file:
next	test\abts.h	/^    struct sub_suite *next;$/;"	m	struct:sub_suite	typeref:struct:sub_suite::sub_suite
next_pool	random\unix\apr_random.c	/^    unsigned int next_pool;$/;"	m	struct:apr_random_t	file:
nl	test\internal\testucs.c	/^    int nl;$/;"	m	struct:testval	file:
nlink	include\apr_file_info.h	/^    apr_int32_t nlink;$/;"	m	struct:apr_finfo_t
no_file	threadproc\beos\proc.c	/^static apr_file_t no_file = { NULL, -1, };$/;"	v	file:
no_file	threadproc\netware\proc.c	/^static apr_file_t no_file = { NULL, -1, };$/;"	v	file:
no_file	threadproc\os2\proc.c	/^static apr_file_t no_file = { NULL, -1, };$/;"	v	file:
no_file	threadproc\unix\proc.c	/^static apr_file_t no_file = { NULL, -1, };$/;"	v	file:
no_file	threadproc\win32\proc.c	/^static apr_file_t no_file = { NULL, INVALID_HANDLE_VALUE, };$/;"	v	file:
no_hdtr	network_io\unix\sendrecv.c	/^static apr_hdtr_t no_hdtr;$/;"	v	file:
no_install	build\jlibtool.c	/^    int no_install;$/;"	m	struct:__anon5	file:
no_options	test\testargs.c	/^static void no_options(abts_case *tc, void *data)$/;"	f	file:
no_options_found	test\testargs.c	/^static void no_options_found(abts_case *tc, void *data)$/;"	f	file:
node	memory\unix\apr_pools.c	/^    apr_memnode_t   *node;$/;"	m	struct:psprintf_data	file:
node_free_space	memory\unix\apr_pools.c	657;"	d	file:
nodes	memory\unix\apr_pools.c	/^    debug_node_t         *nodes;$/;"	m	struct:apr_pool_t	file:
nomessage	test\testpoll.c	/^static void nomessage(abts_case *tc, void *data)$/;"	f	file:
nomessage_pollset	test\testpoll.c	/^static void nomessage_pollset(abts_case *tc, void *data)$/;"	f	file:
nonblock	include\arch\os2\apr_arch_networkio.h	/^    int nonblock;$/;"	m	struct:apr_socket_t
normal	build\jlibtool.c	/^    const char *normal;$/;"	m	struct:__anon3	file:
normal	build\jlibtool.c	/^    count_chars *normal;$/;"	m	struct:__anon4	file:
not_impl	test\abts.h	/^    int not_impl;$/;"	m	struct:sub_suite
not_implemented	test\testmmap.c	/^static void not_implemented(abts_case *tc, void *data)$/;"	f	file:
not_run	test\abts.h	/^    int not_run;$/;"	m	struct:sub_suite
now	test\testtime.c	/^static apr_time_t now = APR_INT64_C(1032030336186711);$/;"	v	file:
npools	random\unix\apr_random.c	/^    unsigned int npools;$/;"	m	struct:apr_random_t	file:
nput	test\testlock.c	/^    int                nput;$/;"	m	struct:__anon36	file:
nready	test\testlock.c	/^    int                nready;$/;"	m	struct:__anon37	file:
nready	test\testlock.c	/^} nready;$/;"	v	typeref:struct:__anon37
null_string	strings\apr_snprintf.c	/^static const char null_string[] = "(null)";$/;"	v	file:
num	build\jlibtool.c	/^    int num; $/;"	m	struct:__anon2	file:
num_args	build\aplibtool.c	/^    int num_args;$/;"	m	struct:__anon1	file:
num_except	poll\os2\pollset.c	/^    int num_except;$/;"	m	struct:apr_pollset_t	file:
num_obj_files	build\aplibtool.c	/^    int num_obj_files;$/;"	m	struct:__anon1	file:
num_read	poll\os2\pollset.c	/^    int num_read;$/;"	m	struct:apr_pollset_t	file:
num_test	test\abts.h	/^    int num_test;$/;"	m	struct:sub_suite
num_tmp_dirs	build\aplibtool.c	/^    int num_tmp_dirs;$/;"	m	struct:__anon1	file:
num_total	poll\os2\pollset.c	/^    int num_total;$/;"	m	struct:apr_pollset_t	file:
num_waiting	include\arch\win32\apr_arch_thread_cond.h	/^    unsigned long num_waiting;$/;"	m	struct:apr_thread_cond_t
num_wake	include\arch\win32\apr_arch_thread_cond.h	/^    unsigned long num_wake;$/;"	m	struct:apr_thread_cond_t
num_write	poll\os2\pollset.c	/^    int num_write;$/;"	m	struct:apr_pollset_t	file:
numheaders	include\apr_network_io.h	/^    int numheaders;$/;"	m	struct:apr_hdtr_t
numtrailers	include\apr_network_io.h	/^    int numtrailers;$/;"	m	struct:apr_hdtr_t
nval	test\testlock.c	/^    int                nval;$/;"	m	struct:__anon36	file:
obj_files	build\aplibtool.c	/^    char *obj_files[1024];$/;"	m	struct:__anon1	file:
obj_files	build\jlibtool.c	/^    count_chars *obj_files;$/;"	m	struct:__anon6	file:
oc_not_impl	test\testoc.c	/^static void oc_not_impl(abts_case *tc, void *data)$/;"	f	file:
ocmaint	test\testoc.c	/^static void ocmaint(int reason, void *data, int status)$/;"	f	file:
off_t_fmt	test\testfmt.c	/^static void off_t_fmt(abts_case *tc, void *data)$/;"	f	file:
on_query_ring	include\arch\unix\apr_arch_poll_private.h	/^   int on_query_ring;$/;"	m	struct:pfd_elem_t
once	include\arch\unix\apr_arch_threadproc.h	/^    pthread_once_t once;$/;"	m	struct:apr_thread_once_t
oneMB	test\testlfs.c	/^static apr_off_t oneMB = APR_INT64_C(2) << 19;$/;"	v	file:
onemake	build\cvtdsp.pl	/^sub onemake {$/;"	s
opt	include\apr_getopt.h	/^    int opt;$/;"	m	struct:apr_getopt_t
optch	include\apr_getopt.h	/^    int optch;$/;"	m	struct:apr_getopt_option_t
optional_option	test\testargs.c	/^static void optional_option(abts_case *tc, void *data)$/;"	f	file:
optional_option_notgiven	test\testargs.c	/^static void optional_option_notgiven(abts_case *tc, void *data)$/;"	f	file:
options	build\jlibtool.c	/^    options_t options;$/;"	m	struct:__anon6	file:
options	include\arch\os2\apr_arch_networkio.h	/^    apr_int32_t options;$/;"	m	struct:apr_socket_t
options	include\arch\unix\apr_arch_networkio.h	/^    apr_int32_t options;$/;"	m	struct:apr_socket_t
options	include\arch\win32\apr_arch_networkio.h	/^    apr_int32_t         options;$/;"	m	struct:apr_socket_t
options_t	build\jlibtool.c	/^} options_t;$/;"	t	typeref:struct:__anon5	file:
os	build\gen-build.py	/^import os$/;"	i
os2_fn_link	network_io\os2\os2calls.c	/^static int os2_fn_link()$/;"	f	file:
os2_socket_init	network_io\os2\os2calls.c	/^static int os2_socket_init(int domain, int type, int protocol)$/;"	f	file:
os_sock	include\apr_portable.h	/^    apr_os_sock_t *os_sock; \/**< always required *\/$/;"	m	struct:apr_os_sock_info_t
otDynamicLibrary	build\aplibtool.c	/^enum output_type_t { otGeneral, otObject, otProgram, otStaticLibrary, otDynamicLibrary };$/;"	e	enum:output_type_t	file:
otDynamicLibraryOnly	build\jlibtool.c	/^    otDynamicLibraryOnly,$/;"	e	enum:output_t	file:
otGeneral	build\aplibtool.c	/^enum output_type_t { otGeneral, otObject, otProgram, otStaticLibrary, otDynamicLibrary };$/;"	e	enum:output_type_t	file:
otGeneral	build\jlibtool.c	/^    otGeneral,$/;"	e	enum:output_t	file:
otLibrary	build\jlibtool.c	/^    otLibrary,$/;"	e	enum:output_t	file:
otModule	build\jlibtool.c	/^    otModule,$/;"	e	enum:output_t	file:
otObject	build\aplibtool.c	/^enum output_type_t { otGeneral, otObject, otProgram, otStaticLibrary, otDynamicLibrary };$/;"	e	enum:output_type_t	file:
otObject	build\jlibtool.c	/^    otObject,$/;"	e	enum:output_t	file:
otProgram	build\aplibtool.c	/^enum output_type_t { otGeneral, otObject, otProgram, otStaticLibrary, otDynamicLibrary };$/;"	e	enum:output_type_t	file:
otProgram	build\jlibtool.c	/^    otProgram,$/;"	e	enum:output_t	file:
otStaticLibrary	build\aplibtool.c	/^enum output_type_t { otGeneral, otObject, otProgram, otStaticLibrary, otDynamicLibrary };$/;"	e	enum:output_type_t	file:
otStaticLibraryOnly	build\jlibtool.c	/^    otStaticLibraryOnly,$/;"	e	enum:output_t	file:
other_child_cleanup	misc\unix\otherchild.c	/^static apr_status_t other_child_cleanup(void *data)$/;"	f	file:
other_children	misc\unix\otherchild.c	/^static apr_other_child_rec_t *other_children = NULL;$/;"	v	file:
out	include\apr_thread_proc.h	/^    apr_file_t *out;$/;"	m	struct:apr_proc_t
out	threadproc\beos\apr_proc_stub.c	/^	int out;$/;"	m	struct:pipefd	file:
out	threadproc\beos\proc.c	/^	int out;$/;"	m	struct:send_pipe	file:
output	build\jlibtool.c	/^    enum output_t output;$/;"	m	struct:__anon6	typeref:enum:__anon6::output_t	file:
output_name	build\aplibtool.c	/^    char *output_name;$/;"	m	struct:__anon1	file:
output_name	build\jlibtool.c	/^    char *output_name;$/;"	m	struct:__anon6	file:
output_t	build\jlibtool.c	/^enum output_t {$/;"	g	file:
output_type	build\aplibtool.c	/^    enum output_type_t output_type;$/;"	m	struct:__anon1	typeref:enum:__anon1::output_type_t	file:
output_type_t	build\aplibtool.c	/^enum output_type_t { otGeneral, otObject, otProgram, otStaticLibrary, otDynamicLibrary };$/;"	g	file:
overflow_strfsize	test\teststr.c	/^static void overflow_strfsize(abts_case *tc, void *data)$/;"	f	file:
overlapped	include\arch\win32\apr_arch_networkio.h	/^    OVERLAPPED         *overlapped;$/;"	m	struct:apr_socket_t
overlay_2unique	test\testhash.c	/^static void overlay_2unique(abts_case *tc, void *data)$/;"	f	file:
overlay_empty	test\testhash.c	/^static void overlay_empty(abts_case *tc, void *data)$/;"	f	file:
overlay_same	test\testhash.c	/^static void overlay_same(abts_case *tc, void *data)$/;"	f	file:
owner	include\arch\beos\apr_arch_thread_cond.h	/^    thread_id owner;$/;"	m	struct:apr_thread_cond_t
owner	include\arch\beos\apr_arch_thread_mutex.h	/^    apr_os_thread_t owner;$/;"	m	struct:apr_thread_mutex_t
owner	include\arch\os2\apr_arch_proc_mutex.h	/^    TID owner;$/;"	m	struct:apr_proc_mutex_t
owner	memory\unix\apr_pools.c	/^    apr_os_thread_t       owner;$/;"	m	struct:apr_pool_t	file:
owner	memory\unix\apr_pools.c	/^    apr_pool_t         *owner;$/;"	m	struct:apr_allocator_t	file:
owner_proc	memory\unix\apr_pools.c	/^    apr_os_proc_t         owner_proc;$/;"	m	struct:apr_pool_t	file:
owner_ref	include\arch\beos\apr_arch_thread_mutex.h	/^    int owner_ref;$/;"	m	struct:apr_thread_mutex_t
p	include\apr_atomic.h	/^APR_DECLARE(apr_status_t) apr_atomic_init(apr_pool_t *p);$/;"	v
p	include\apr_poll.h	/^    apr_pool_t *p;              \/**< associated pool *\/$/;"	m	struct:apr_pollfd_t
p	include\apr_pools.h	/^APR_DECLARE(void) apr_pool_clear(apr_pool_t *p);$/;"	v
p	include\apr_pools.h	/^APR_DECLARE(void) apr_pool_destroy(apr_pool_t *p);$/;"	v
p	include\apr_random.h	/^APR_DECLARE(apr_crypto_hash_t *) apr_crypto_sha256_new(apr_pool_t *p);$/;"	v
p	include\apr_random.h	/^APR_DECLARE(apr_random_t *) apr_random_standard_new(apr_pool_t *p);$/;"	v
p	include\apr_time.h	/^APR_DECLARE(void) apr_time_clock_hires(apr_pool_t *p);$/;"	v
p	include\arch\unix\apr_arch_misc.h	/^    apr_pool_t *p;$/;"	m	struct:apr_other_child_rec_t
p	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollset_private_t *p;$/;"	m	struct:apr_pollset_t
p	include\arch\win32\apr_arch_misc.h	/^    apr_pool_t *p;$/;"	m	struct:apr_other_child_rec_t
p	test\testmutexscope.c	/^static apr_pool_t *p;$/;"	v	file:
p	test\testutil.c	/^apr_pool_t *p;$/;"	v
pOverlapped	include\arch\win32\apr_arch_file_io.h	/^    OVERLAPPED *pOverlapped;$/;"	m	struct:apr_file_t
padchar	file_io\unix\mktemp.c	/^static const unsigned char padchar[] =$/;"	v	file:
parent	memory\unix\apr_pools.c	/^    apr_pool_t           *parent;$/;"	m	struct:apr_pool_t	file:
parent_err	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
parent_err	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
parent_err	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
parent_err	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
parent_err	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *parent_err;$/;"	m	struct:apr_procattr_t
parent_in	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
parent_in	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
parent_in	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
parent_in	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
parent_in	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *parent_in;$/;"	m	struct:apr_procattr_t
parent_out	include\arch\beos\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
parent_out	include\arch\netware\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
parent_out	include\arch\os2\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
parent_out	include\arch\unix\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
parent_out	include\arch\win32\apr_arch_threadproc.h	/^    apr_file_t *parent_out;$/;"	m	struct:apr_procattr_t
parent_pool	test\testpools.c	/^static void parent_pool(abts_case *tc, void *data)$/;"	f	file:
parse_args	build\aplibtool.c	/^void parse_args(int argc, char *argv[], cmd_data_t *cmd_data)$/;"	f
parse_args	build\jlibtool.c	/^void parse_args(int argc, char *argv[], command_t *cmd_data)$/;"	f
parse_input_file_name	build\aplibtool.c	/^bool parse_input_file_name(char *arg, cmd_data_t *cmd_data)$/;"	f
parse_input_file_name	build\jlibtool.c	/^int parse_input_file_name(char *arg, command_t *cmd_data)$/;"	f
parse_ip	network_io\unix\sockaddr.c	/^static apr_status_t parse_ip(apr_ipsubnet_t *ipsub, const char *ipstr, int network_allowed)$/;"	f	file:
parse_long_opt	build\aplibtool.c	/^bool parse_long_opt(char *arg, cmd_data_t *cmd_data)$/;"	f
parse_long_opt	build\jlibtool.c	/^int parse_long_opt(char *arg, command_t *cmd_data)$/;"	f
parse_network	network_io\unix\sockaddr.c	/^static apr_status_t parse_network(apr_ipsubnet_t *ipsub, const char *network)$/;"	f	file:
parse_output_file_name	build\aplibtool.c	/^bool parse_output_file_name(char *arg, cmd_data_t *cmd_data)$/;"	f
parse_output_file_name	build\jlibtool.c	/^int parse_output_file_name(char *arg, command_t *cmd_data)$/;"	f
parse_short_opt	build\aplibtool.c	/^int parse_short_opt(char *arg, cmd_data_t *cmd_data)$/;"	f
parse_short_opt	build\jlibtool.c	/^int parse_short_opt(char *arg, command_t *cmd_data)$/;"	f
parts_in	test\testpath.c	/^static const char *parts_in[] = { P1, P2, P3, PX, P4, P5 };$/;"	v	file:
parts_in_count	test\testpath.c	/^static const int  parts_in_count = sizeof(parts_in)\/sizeof(*parts_in);$/;"	v	file:
parts_out	test\testpath.c	/^static const char *parts_out[] = { P1, P2, P3, P4, P5 };$/;"	v	file:
parts_out_count	test\testpath.c	/^static const int  parts_out_count = sizeof(parts_out)\/sizeof(*parts_out);$/;"	v	file:
patch	include\apr_version.h	/^    int patch;      \/**< patch number *\/$/;"	m	struct:__anon21
path	include\arch\netware\apr_arch_dso.h	/^    char        *path;$/;"	m	struct:apr_dso_handle_t
pathCtx	include\arch\netware\apr_arch_file_io.h	/^    NXPathCtx_t pathCtx;$/;"	m	struct:apr_stat_entry_t
path_canonicalize	file_io\os2\dir_make_recurse.c	/^static const char *path_canonicalize(const char *path, apr_pool_t *pool)$/;"	f	file:
path_canonicalize	file_io\unix\dir.c	/^static const char *path_canonicalize (const char *path, apr_pool_t *pool)$/;"	f	file:
path_in	test\testpath.c	/^static const char *path_in = P1 PSEP P2 PSEP P3 PSEP PX PSEP P4 PSEP P5;$/;"	v	file:
path_out	test\testpath.c	/^static const char *path_out = P1 PSEP P2 PSEP P3 PSEP P4 PSEP P5;$/;"	v	file:
path_remove_last_component	file_io\os2\dir_make_recurse.c	/^static char *path_remove_last_component(const char *path, apr_pool_t *pool)$/;"	f	file:
path_remove_last_component	file_io\unix\dir.c	/^static char *path_remove_last_component (const char *path, apr_pool_t *pool)$/;"	f	file:
pattern	test\testfnmatch.c	/^    const char *pattern;$/;"	m	struct:pattern_s	file:
pattern_s	test\testfnmatch.c	/^static struct pattern_s {$/;"	s	file:
pattern_s::fail_flags	test\testfnmatch.c	/^    int         fail_flags;$/;"	m	struct:pattern_s	file:
pattern_s::pattern	test\testfnmatch.c	/^    const char *pattern;$/;"	m	struct:pattern_s	file:
pattern_s::require_flags	test\testfnmatch.c	/^    int         require_flags;$/;"	m	struct:pattern_s	file:
pattern_s::string	test\testfnmatch.c	/^    const char *string;$/;"	m	struct:pattern_s	file:
patterns	test\testfnmatch.c	/^} patterns[] = {$/;"	v	typeref:struct:pattern_s	file:
pchild	test\testpools.c	/^static apr_pool_t *pchild = NULL;$/;"	v	file:
permute	misc\unix\getopt.c	/^static void permute(apr_getopt_t *os)$/;"	f	file:
pfd	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollfd_t pfd;$/;"	m	struct:pfd_elem_t
pfd_elem_t	include\arch\unix\apr_arch_poll_private.h	/^struct pfd_elem_t {$/;"	s
pfd_elem_t	include\arch\unix\apr_arch_poll_private.h	/^typedef struct pfd_elem_t pfd_elem_t;$/;"	t	typeref:struct:pfd_elem_t
pfd_elem_t::link	include\arch\unix\apr_arch_poll_private.h	/^    APR_RING_ENTRY(pfd_elem_t) link;$/;"	m	struct:pfd_elem_t
pfd_elem_t::on_query_ring	include\arch\unix\apr_arch_poll_private.h	/^   int on_query_ring;$/;"	m	struct:pfd_elem_t
pfd_elem_t::pfd	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollfd_t pfd;$/;"	m	struct:pfd_elem_t
pic_AVOID	build\jlibtool.c	/^    pic_AVOID,$/;"	e	enum:pic_mode_e	file:
pic_PREFER	build\jlibtool.c	/^    pic_PREFER,$/;"	e	enum:pic_mode_e	file:
pic_UNKNOWN	build\jlibtool.c	/^    pic_UNKNOWN,$/;"	e	enum:pic_mode_e	file:
pic_mode	build\jlibtool.c	/^    enum pic_mode_e pic_mode;$/;"	m	struct:__anon5	typeref:enum:__anon5::pic_mode_e	file:
pic_mode_e	build\jlibtool.c	/^enum pic_mode_e {$/;"	g	file:
pid	include\apr_thread_proc.h	/^    pid_t pid;$/;"	m	struct:apr_proc_t
pid_t	include\apr.h	/^typedef  int         pid_t;$/;"	t
pid_t_fmt	test\testfmt.c	/^static void pid_t_fmt(abts_case *tc, void *data)$/;"	f	file:
ping	test\testcond.c	/^static void ping(toolbox_t *box)$/;"	f	file:
ping_pong	test\testcond.c	/^static void ping_pong(abts_case *tc, void *data)$/;"	f	file:
pipe	include\arch\os2\apr_arch_file_io.h	/^    int pipe;$/;"	m	struct:apr_file_t
pipe	include\arch\win32\apr_arch_file_io.h	/^    BOOLEAN pipe;              \/* Is this a pipe of a file? *\/$/;"	m	struct:apr_file_t
pipeSem	include\arch\os2\apr_arch_file_io.h	/^    HEV pipeSem;$/;"	m	struct:apr_file_t
pipe_consumer	test\testcond.c	/^static void pipe_consumer(toolbox_t *box)$/;"	f	file:
pipe_count	test\testcond.c	/^static volatile apr_uint64_t pipe_count;$/;"	v	file:
pipe_producer	test\testcond.c	/^static void pipe_producer(toolbox_t *box)$/;"	f	file:
pipe_producer_consumer	test\testcond.c	/^static void pipe_producer_consumer(abts_case *tc, void *data)$/;"	f	file:
pipe_write	test\testcond.c	/^static void pipe_write(toolbox_t *box, char ch)$/;"	f	file:
pipeblock	file_io\netware\pipe.c	/^static apr_status_t pipeblock(apr_file_t *thepipe)$/;"	f	file:
pipeblock	file_io\unix\pipe.c	/^static apr_status_t pipeblock(apr_file_t *thepipe)$/;"	f	file:
pipefd	threadproc\beos\apr_proc_stub.c	/^struct pipefd {$/;"	s	file:
pipefd::err	threadproc\beos\apr_proc_stub.c	/^	int err;$/;"	m	struct:pipefd	file:
pipefd::in	threadproc\beos\apr_proc_stub.c	/^	int in;$/;"	m	struct:pipefd	file:
pipefd::out	threadproc\beos\apr_proc_stub.c	/^	int out;$/;"	m	struct:pipefd	file:
pipenonblock	file_io\netware\pipe.c	/^static apr_status_t pipenonblock(apr_file_t *thepipe)$/;"	f	file:
pipenonblock	file_io\unix\pipe.c	/^static apr_status_t pipenonblock(apr_file_t *thepipe)$/;"	f	file:
place	include\apr_getopt.h	/^    char const* place;$/;"	m	struct:apr_getopt_t
plain_cleanup_fn	memory\unix\apr_pools.c	/^    apr_status_t (*plain_cleanup_fn)(void *data);$/;"	m	struct:cleanup_t	file:
pmain	test\testpools.c	/^static apr_pool_t *pmain = NULL;$/;"	v	file:
poffset	include\apr_mmap.h	/^    apr_off_t  poffset;$/;"	m	struct:apr_mmap_t
poll	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*poll)(apr_pollcb_t *, apr_interval_time_t, apr_pollcb_cb_t, void *);$/;"	m	struct:apr_pollcb_provider_t
poll	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*poll)(apr_pollset_t *, apr_interval_time_t, apr_int32_t *, const apr_pollfd_t **);$/;"	m	struct:apr_pollset_provider_t
pollarray	test\testpoll.c	/^static apr_pollfd_t *pollarray;$/;"	v	file:
pollarray_large	test\testpoll.c	/^static apr_pollfd_t *pollarray_large;$/;"	v	file:
pollcb	test\testpoll.c	/^static apr_pollcb_t *pollcb;$/;"	v	file:
pollcb_baton_t	test\testpoll.c	/^typedef struct pollcb_baton_t {$/;"	s	file:
pollcb_baton_t	test\testpoll.c	/^} pollcb_baton_t;$/;"	t	typeref:struct:pollcb_baton_t	file:
pollcb_baton_t::count	test\testpoll.c	/^    int count;$/;"	m	struct:pollcb_baton_t	file:
pollcb_baton_t::tc	test\testpoll.c	/^    abts_case *tc;$/;"	m	struct:pollcb_baton_t	file:
pollcb_default	test\testpoll.c	/^static void pollcb_default(abts_case *tc, void *data)$/;"	f	file:
pollcb_provider	poll\unix\pollcb.c	/^static apr_pollcb_provider_t *pollcb_provider(apr_pollset_method_e method)$/;"	f	file:
pollfd	include\arch\win32\apr_arch_misc.h	/^typedef struct pollfd {$/;"	s
pollfd::events	include\arch\win32\apr_arch_misc.h	/^    SHORT   events;$/;"	m	struct:pollfd
pollfd::fd	include\arch\win32\apr_arch_misc.h	/^    SOCKET  fd;$/;"	m	struct:pollfd
pollfd::revents	include\arch\win32\apr_arch_misc.h	/^    SHORT   revents;$/;"	m	struct:pollfd
pollset	include\apr_poll.h	/^APR_DECLARE(apr_status_t) apr_pollset_destroy(apr_pollset_t *pollset);$/;"	v
pollset	include\apr_poll.h	/^APR_DECLARE(apr_status_t) apr_pollset_wakeup(apr_pollset_t *pollset);$/;"	v
pollset	include\apr_poll.h	/^APR_DECLARE(const char *) apr_pollset_method_name(apr_pollset_t *pollset);$/;"	v
pollset	include\arch\netware\apr_arch_file_io.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_file_t
pollset	include\arch\os2\apr_arch_networkio.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_socket_t
pollset	include\arch\unix\apr_arch_file_io.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_file_t
pollset	include\arch\unix\apr_arch_networkio.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_socket_t
pollset	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollcb_pset pollset;$/;"	m	struct:apr_pollcb_t
pollset	include\arch\win32\apr_arch_file_io.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_file_t
pollset	include\arch\win32\apr_arch_networkio.h	/^    apr_pollset_t *pollset;$/;"	m	struct:apr_socket_t
pollset	poll\os2\pollset.c	/^    int *pollset;$/;"	m	struct:apr_pollset_t	file:
pollset	poll\unix\epoll.c	/^    struct epoll_event *pollset;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::epoll_event	file:
pollset	poll\unix\poll.c	/^    struct pollfd *pollset;$/;"	m	struct:apr_pollset_private_t	typeref:struct:apr_pollset_private_t::pollfd	file:
pollset	test\testpoll.c	/^static apr_pollset_t *pollset;$/;"	v	file:
pollset_cleanup	poll\unix\pollset.c	/^static apr_status_t pollset_cleanup(void *p)$/;"	f	file:
pollset_default	test\testpoll.c	/^static void pollset_default(abts_case *tc, void *data)$/;"	f	file:
pollset_default_method	poll\unix\pollcb.c	/^static apr_pollset_method_e pollset_default_method = POLLSET_DEFAULT_METHOD;$/;"	v	file:
pollset_default_method	poll\unix\pollset.c	/^static apr_pollset_method_e pollset_default_method = POLLSET_DEFAULT_METHOD;$/;"	v	file:
pollset_lock_rings	include\arch\unix\apr_arch_poll_private.h	84;"	d
pollset_lock_rings	include\arch\unix\apr_arch_poll_private.h	91;"	d
pollset_provider	poll\unix\pollset.c	/^static apr_pollset_provider_t *pollset_provider(apr_pollset_method_e method)$/;"	f	file:
pollset_remove	test\testpoll.c	/^static void pollset_remove(abts_case *tc, void *data)$/;"	f	file:
pollset_unlock_rings	include\arch\unix\apr_arch_poll_private.h	87;"	d
pollset_unlock_rings	include\arch\unix\apr_arch_poll_private.h	92;"	d
pong	test\testcond.c	/^static void pong(toolbox_t *box)$/;"	f	file:
pool	include\apr_file_info.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_finfo_t
pool	include\apr_hash.h	/^APR_DECLARE(apr_hash_t *) apr_hash_make(apr_pool_t *pool);$/;"	v
pool	include\apr_network_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_sockaddr_t
pool	include\apr_pools.h	/^APR_DECLARE(apr_abortfunc_t) apr_pool_abort_get(apr_pool_t *pool);$/;"	v
pool	include\apr_pools.h	/^APR_DECLARE(apr_allocator_t *) apr_pool_allocator_get(apr_pool_t *pool);$/;"	v
pool	include\apr_pools.h	/^APR_DECLARE(apr_pool_t *) apr_pool_parent_get(apr_pool_t *pool);$/;"	v
pool	include\apr_portable.h	/^        apr_pool_t *pool;$/;"	m	struct:apr_os_global_mutex_t
pool	include\apr_portable.h	/^APR_DECLARE(const char*) apr_os_default_encoding(apr_pool_t *pool);$/;"	v
pool	include\apr_portable.h	/^APR_DECLARE(const char*) apr_os_locale_encoding(apr_pool_t *pool);$/;"	v
pool	include\apr_tables.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_array_header_t
pool	include\arch\aix\apr_arch_dso.h	/^    apr_pool_t  *pool;$/;"	m	struct:apr_dso_handle_t
pool	include\arch\beos\apr_arch_dso.h	/^    apr_pool_t   *pool;$/;"	m	struct:apr_dso_handle_t
pool	include\arch\beos\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
pool	include\arch\beos\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
pool	include\arch\beos\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
pool	include\arch\beos\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
pool	include\arch\beos\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
pool	include\arch\netware\apr_arch_dso.h	/^    apr_pool_t  *pool;$/;"	m	struct:apr_dso_handle_t
pool	include\arch\netware\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
pool	include\arch\netware\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
pool	include\arch\netware\apr_arch_global_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_global_mutex_t
pool	include\arch\netware\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
pool	include\arch\netware\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
pool	include\arch\netware\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
pool	include\arch\netware\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
pool	include\arch\netware\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
pool	include\arch\os2\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
pool	include\arch\os2\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
pool	include\arch\os2\apr_arch_networkio.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_socket_t
pool	include\arch\os2\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
pool	include\arch\os2\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
pool	include\arch\os2\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
pool	include\arch\os2\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
pool	include\arch\os2\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
pool	include\arch\os390\apr_arch_dso.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dso_handle_t
pool	include\arch\unix\apr_arch_dso.h	/^    apr_pool_t    *pool;$/;"	m	struct:apr_dso_handle_t
pool	include\arch\unix\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
pool	include\arch\unix\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
pool	include\arch\unix\apr_arch_global_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_global_mutex_t
pool	include\arch\unix\apr_arch_networkio.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_socket_t
pool	include\arch\unix\apr_arch_poll_private.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_pollcb_t
pool	include\arch\unix\apr_arch_poll_private.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_pollset_t
pool	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
pool	include\arch\unix\apr_arch_shm.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t
pool	include\arch\unix\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
pool	include\arch\unix\apr_arch_thread_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_mutex_t
pool	include\arch\unix\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
pool	include\arch\unix\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
pool	include\arch\win32\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_dir_t
pool	include\arch\win32\apr_arch_file_io.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_file_t
pool	include\arch\win32\apr_arch_networkio.h	/^    apr_pool_t         *pool;$/;"	m	struct:apr_socket_t
pool	include\arch\win32\apr_arch_proc_mutex.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_proc_mutex_t
pool	include\arch\win32\apr_arch_thread_cond.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_cond_t
pool	include\arch\win32\apr_arch_thread_mutex.h	/^    apr_pool_t       *pool;$/;"	m	struct:apr_thread_mutex_t
pool	include\arch\win32\apr_arch_thread_rwlock.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_rwlock_t
pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_procattr_t
pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_thread_t
pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadattr_t
pool	include\arch\win32\apr_arch_threadproc.h	/^    apr_pool_t *pool;$/;"	m	struct:apr_threadkey_t
pool	memory\unix\apr_pools.c	/^    apr_pool_t      *pool;$/;"	m	struct:psprintf_data	file:
pool	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_clear(apr_pool_t *pool);$/;"	v
pool	memory\unix\apr_pools.c	/^APR_DECLARE(void) apr_pool_destroy(apr_pool_t *pool);$/;"	v
pool	poll\os2\pollset.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_pollset_t	file:
pool	random\unix\apr_random.c	/^    unsigned char *pool;$/;"	m	struct:apr_random_pool_t	file:
pool	shmem\beos\shm.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t	file:
pool	shmem\os2\shm.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t	file:
pool	shmem\win32\shm.c	/^    apr_pool_t *pool;$/;"	m	struct:apr_shm_t	file:
pool	tables\apr_hash.c	/^    apr_pool_t          *pool;$/;"	m	struct:apr_hash_t	file:
pool	test\testlockperf.c	/^apr_pool_t *pool;$/;"	v
pool	test\testud.c	/^static apr_pool_t *pool;$/;"	v	file:
pool_alloc	memory\unix\apr_pools.c	/^static void *pool_alloc(apr_pool_t *pool, apr_size_t size)$/;"	f	file:
pool_clear_debug	memory\unix\apr_pools.c	/^static void pool_clear_debug(apr_pool_t *pool, const char *file_line)$/;"	f	file:
pool_destroy_debug	memory\unix\apr_pools.c	/^static void pool_destroy_debug(apr_pool_t *pool, const char *file_line)$/;"	f	file:
pool_find	memory\unix\apr_pools.c	/^static int pool_find(apr_pool_t *pool, void *data)$/;"	f	file:
pool_hash	random\unix\apr_random.c	/^    apr_crypto_hash_t *pool_hash;$/;"	m	struct:apr_random_t	file:
pool_is_child_of	memory\unix\apr_pools.c	/^static int pool_is_child_of(apr_pool_t *parent, void *data)$/;"	f	file:
pool_num_bytes	memory\unix\apr_pools.c	/^static int pool_num_bytes(apr_pool_t *pool, void *data)$/;"	f	file:
pool_size	random\unix\apr_random.c	/^    unsigned int pool_size;$/;"	m	struct:apr_random_pool_t	file:
pools	random\unix\apr_random.c	/^    apr_random_pool_t *pools;$/;"	m	struct:apr_random_t	file:
pop_count_chars	build\jlibtool.c	/^void pop_count_chars(count_chars *cc)$/;"	f
port	include\apr_network_io.h	/^    apr_port_t port;$/;"	m	struct:apr_sockaddr_t
port	include\arch\unix\apr_arch_poll_private.h	/^    port_event_t *port;$/;"	m	union:__anon25
port_fd	poll\unix\port.c	/^    int port_fd;$/;"	m	struct:apr_pollset_private_t	file:
port_set	poll\unix\port.c	/^    port_event_t *port_set;$/;"	m	struct:apr_pollset_private_t	file:
post_parse_fixup	build\aplibtool.c	/^void post_parse_fixup(cmd_data_t *cmd_data)$/;"	f
post_parse_fixup	build\jlibtool.c	/^void post_parse_fixup(command_t *cmd_data)$/;"	f
post_pool_clear	test\testud.c	/^static void post_pool_clear(abts_case *tc, void *data)$/;"	f	file:
postval	test\testatomic.c	/^    apr_uint32_t postval;$/;"	m	struct:tbox_t	file:
pre_cleanups	memory\unix\apr_pools.c	/^    cleanup_t            *pre_cleanups;$/;"	m	struct:apr_pool_t	file:
preval	test\testatomic.c	/^    apr_uint32_t preval;$/;"	m	struct:tbox_t	file:
print_config	build\jlibtool.c	/^void print_config()$/;"	f
print_hello	test\mod_test.c	/^void print_hello(char str[256])$/;"	f
print_time	test\testtime.c	/^static char* print_time (apr_pool_t *pool, const apr_time_exp_t *xt)$/;"	f	file:
prng_hash	random\unix\apr_random.c	/^    apr_crypto_hash_t *prng_hash;$/;"	m	struct:apr_random_t	file:
proc	include\apr_random.h	/^APR_DECLARE(void) apr_random_after_fork(apr_proc_t *proc);$/;"	v
proc	include\arch\unix\apr_arch_misc.h	/^    apr_proc_t *proc;$/;"	m	struct:apr_other_child_rec_t
proc	include\arch\win32\apr_arch_misc.h	/^    apr_proc_t *proc;$/;"	m	struct:apr_other_child_rec_t
proc	memory\unix\apr_pools.c	/^    apr_proc_t *proc;$/;"	m	struct:process_chain	file:
proc_lock	test\testprocmutex.c	/^static apr_proc_mutex_t *proc_lock;$/;"	v	file:
proc_lock	threadproc\win32\proc.c	/^static CRITICAL_SECTION proc_lock;$/;"	v	file:
proc_mutex	include\apr_portable.h	/^        apr_proc_mutex_t *proc_mutex;$/;"	m	struct:apr_os_global_mutex_t
proc_mutex	include\apr_proc_mutex.h	/^APR_POOL_DECLARE_ACCESSOR(proc_mutex);$/;"	v
proc_mutex	include\arch\unix\apr_arch_global_mutex.h	/^    apr_proc_mutex_t *proc_mutex;$/;"	m	struct:apr_global_mutex_t
proc_mutex	test\testmutexscope.c	/^static apr_proc_mutex_t *proc_mutex;$/;"	v	file:
proc_mutex	test\testprocmutex.c	/^static void proc_mutex(abts_case *tc, void *data)$/;"	f	file:
proc_mutex_choose_method	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_choose_method(apr_proc_mutex_t *new_mutex, apr_lockmech_e mech)$/;"	f	file:
proc_mutex_cleanup	locks\win32\proc_mutex.c	/^static apr_status_t proc_mutex_cleanup(void *mutex_)$/;"	f	file:
proc_mutex_create	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_create(apr_proc_mutex_t *new_mutex, apr_lockmech_e mech, const char *fname)$/;"	f	file:
proc_mutex_fcntl_acquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_fcntl_acquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_fcntl_cleanup	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_fcntl_cleanup(void *mutex_)$/;"	f	file:
proc_mutex_fcntl_create	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_fcntl_create(apr_proc_mutex_t *new_mutex,$/;"	f	file:
proc_mutex_fcntl_release	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_fcntl_release(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_fcntl_setup	locks\unix\proc_mutex.c	/^static void proc_mutex_fcntl_setup(void)$/;"	f	file:
proc_mutex_fcntl_tryacquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_fcntl_tryacquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_flock_acquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_flock_acquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_flock_child_init	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_flock_child_init(apr_proc_mutex_t **mutex,$/;"	f	file:
proc_mutex_flock_cleanup	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_flock_cleanup(void *mutex_)$/;"	f	file:
proc_mutex_flock_create	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_flock_create(apr_proc_mutex_t *new_mutex,$/;"	f	file:
proc_mutex_flock_release	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_flock_release(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_flock_tryacquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_flock_tryacquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_lock_it	locks\unix\proc_mutex.c	/^static struct flock proc_mutex_lock_it;$/;"	v	typeref:struct:flock	file:
proc_mutex_no_child_init	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_no_child_init(apr_proc_mutex_t **mutex,$/;"	f	file:
proc_mutex_op_off	locks\unix\proc_mutex.c	/^static struct sembuf proc_mutex_op_off;$/;"	v	typeref:struct:sembuf	file:
proc_mutex_op_on	locks\unix\proc_mutex.c	/^static struct sembuf proc_mutex_op_on;$/;"	v	typeref:struct:sembuf	file:
proc_mutex_op_try	locks\unix\proc_mutex.c	/^static struct sembuf proc_mutex_op_try;$/;"	v	typeref:struct:sembuf	file:
proc_mutex_posix_acquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_posix_acquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_posix_cleanup	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_posix_cleanup(void *mutex_)$/;"	f	file:
proc_mutex_posix_create	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_posix_create(apr_proc_mutex_t *new_mutex,$/;"	f	file:
proc_mutex_posix_release	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_posix_release(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_posix_tryacquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_posix_tryacquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_proc_pthread_acquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_proc_pthread_acquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_proc_pthread_cleanup	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_proc_pthread_cleanup(void *mutex_)$/;"	f	file:
proc_mutex_proc_pthread_create	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_proc_pthread_create(apr_proc_mutex_t *new_mutex,$/;"	f	file:
proc_mutex_proc_pthread_release	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_proc_pthread_release(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_proc_pthread_tryacquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_proc_pthread_tryacquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_sysv_acquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_sysv_acquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_sysv_cleanup	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_sysv_cleanup(void *mutex_)$/;"	f	file:
proc_mutex_sysv_create	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_sysv_create(apr_proc_mutex_t *new_mutex,$/;"	f	file:
proc_mutex_sysv_release	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_sysv_release(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_sysv_setup	locks\unix\proc_mutex.c	/^static void proc_mutex_sysv_setup(void)$/;"	f	file:
proc_mutex_sysv_tryacquire	locks\unix\proc_mutex.c	/^static apr_status_t proc_mutex_sysv_tryacquire(apr_proc_mutex_t *mutex)$/;"	f	file:
proc_mutex_unlock_it	locks\unix\proc_mutex.c	/^static struct flock proc_mutex_unlock_it;$/;"	v	typeref:struct:flock	file:
proces_result_codes	threadproc\os2\proc.c	/^static void proces_result_codes(RESULTCODES codes, $/;"	f	file:
process_chain	memory\unix\apr_pools.c	/^struct process_chain {$/;"	s	file:
process_chain::kill_how	memory\unix\apr_pools.c	/^    apr_kill_conditions_e kill_how;$/;"	m	struct:process_chain	file:
process_chain::next	memory\unix\apr_pools.c	/^    struct process_chain *next;$/;"	m	struct:process_chain	typeref:struct:process_chain::process_chain	file:
process_chain::proc	memory\unix\apr_pools.c	/^    apr_proc_t *proc;$/;"	m	struct:process_chain	file:
program	build\jlibtool.c	/^    const char *program;$/;"	m	struct:__anon6	file:
program_opts	build\jlibtool.c	/^    count_chars *program_opts;$/;"	m	struct:__anon6	file:
prot_scope_e	file_io\win32\filestat.c	/^typedef enum prot_scope_e {$/;"	g	file:
prot_scope_e	file_io\win32\filestat.c	/^} prot_scope_e;$/;"	t	typeref:enum:prot_scope_e	file:
prot_scope_group	file_io\win32\filestat.c	/^    prot_scope_group = 4,$/;"	e	enum:prot_scope_e	file:
prot_scope_user	file_io\win32\filestat.c	/^    prot_scope_user =  8$/;"	e	enum:prot_scope_e	file:
prot_scope_world	file_io\win32\filestat.c	/^    prot_scope_world = 0,$/;"	e	enum:prot_scope_e	file:
protection	include\apr_file_info.h	/^    apr_fileperms_t protection;$/;"	m	struct:apr_finfo_t
protocol	include\apr_portable.h	/^    int protocol;           \/**< 0 or actual protocol (APR_PROTO_SCTP, APR_PROTO_TCP, etc.) *\/$/;"	m	struct:apr_os_sock_info_t
protocol	include\arch\os2\apr_arch_networkio.h	/^    int protocol;$/;"	m	struct:apr_socket_t
protocol	include\arch\unix\apr_arch_networkio.h	/^    int protocol;$/;"	m	struct:apr_socket_t
protocol	include\arch\win32\apr_arch_networkio.h	/^    int                 protocol;$/;"	m	struct:apr_socket_t
provider	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollcb_provider_t *provider;$/;"	m	struct:apr_pollcb_t
provider	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollset_provider_t *provider;$/;"	m	struct:apr_pollset_t
ps	include\arch\unix\apr_arch_poll_private.h	/^    struct pollfd *ps;$/;"	m	union:__anon25	typeref:struct:__anon25::pollfd
psem_interproc	include\arch\unix\apr_arch_proc_mutex.h	/^    sem_t *psem_interproc;$/;"	m	struct:apr_proc_mutex_t
psize	include\apr_mmap.h	/^    apr_size_t psize;$/;"	m	struct:apr_mmap_t
psprintf_data	memory\unix\apr_pools.c	/^struct psprintf_data {$/;"	s	file:
psprintf_data::free	memory\unix\apr_pools.c	/^    apr_memnode_t   *free;$/;"	m	struct:psprintf_data	file:
psprintf_data::got_a_new_node	memory\unix\apr_pools.c	/^    apr_byte_t       got_a_new_node;$/;"	m	struct:psprintf_data	file:
psprintf_data::mem	memory\unix\apr_pools.c	/^    char      *mem;$/;"	m	struct:psprintf_data	file:
psprintf_data::node	memory\unix\apr_pools.c	/^    apr_memnode_t   *node;$/;"	m	struct:psprintf_data	file:
psprintf_data::pool	memory\unix\apr_pools.c	/^    apr_pool_t      *pool;$/;"	m	struct:psprintf_data	file:
psprintf_data::size	memory\unix\apr_pools.c	/^    apr_size_t size;$/;"	m	struct:psprintf_data	file:
psprintf_data::vbuff	memory\unix\apr_pools.c	/^    apr_vformatter_buff_t vbuff;$/;"	m	struct:psprintf_data	file:
psprintf_flush	memory\unix\apr_pools.c	/^static int psprintf_flush(apr_vformatter_buff_t *vbuff)$/;"	f	file:
pstart	include\apr_mmap.h	/^    apr_off_t  pstart;$/;"	m	struct:apr_mmap_t
pthread_interproc	include\apr_portable.h	/^    pthread_mutex_t *pthread_interproc;$/;"	m	struct:apr_os_proc_mutex_t
pthread_interproc	include\arch\unix\apr_arch_proc_mutex.h	/^    pthread_mutex_t *pthread_interproc;$/;"	m	struct:apr_proc_mutex_t
ptr	shmem\beos\shm.c	/^    void *ptr;$/;"	m	struct:apr_shm_t	file:
push	build\make_exports.awk	/^function push(line) {$/;"	f
push_count_chars	build\jlibtool.c	/^void push_count_chars(count_chars *cc, const char *newval)$/;"	f
put	test\testlock.c	/^} put;$/;"	v	typeref:struct:__anon36
pvsn	include\apr_version.h	/^APR_DECLARE(void) apr_version(apr_version_t *pvsn);$/;"	v
query_set	poll\os2\pollset.c	/^    apr_pollfd_t *query_set;$/;"	m	struct:apr_pollset_t	file:
query_set	poll\unix\poll.c	/^    apr_pollfd_t *query_set;$/;"	m	struct:apr_pollset_private_t	file:
query_set	poll\unix\select.c	/^    apr_pollfd_t *query_set;$/;"	m	struct:apr_pollset_private_t	file:
quiet	test\abts.c	/^static int quiet = 0;$/;"	v	file:
r	include\apr_random.h	/^APR_DECLARE(apr_status_t) apr_random_insecure_ready(apr_random_t *r);$/;"	v
r	include\apr_random.h	/^APR_DECLARE(apr_status_t) apr_random_secure_ready(apr_random_t *r);$/;"	v
r	test\testrand.c	/^static apr_random_t *r;$/;"	v	file:
rand_add_zeroes	test\testrand.c	/^static void rand_add_zeroes(apr_random_t *r)$/;"	f	file:
rand_barrier	test\testrand.c	/^static void rand_barrier(abts_case *tc, void *data)$/;"	f	file:
rand_check_kat	test\testrand.c	/^static int rand_check_kat(rnd_fn *f, apr_random_t *r,$/;"	f	file:
rand_exists	test\testrand.c	/^static void rand_exists(abts_case *tc, void *data)$/;"	f	file:
rand_fork	test\testrand.c	/^static void rand_fork(abts_case *tc, void *data)$/;"	f	file:
rand_kat	test\testrand.c	/^static void rand_kat(abts_case *tc, void *data)$/;"	f	file:
rand_kat2	test\testrand.c	/^static void rand_kat2(abts_case *tc, void *data)$/;"	f	file:
rand_kat3	test\testrand.c	/^static void rand_kat3(abts_case *tc, void *data)$/;"	f	file:
rand_kat4	test\testrand.c	/^static void rand_kat4(abts_case *tc, void *data)$/;"	f	file:
rand_run_kat	test\testrand.c	/^static void rand_run_kat(abts_case *tc, rnd_fn *f, apr_random_t *r,$/;"	f	file:
rand_run_seed_short	test\testrand.c	/^static void rand_run_seed_short(abts_case *tc, rnd_fn *f, apr_random_t *r,$/;"	f	file:
rand_seed_short	test\testrand.c	/^static void rand_seed_short(abts_case *tc, void *data)$/;"	f	file:
rand_seed_short2	test\testrand.c	/^static void rand_seed_short2(abts_case *tc, void *data)$/;"	f	file:
random_bytes	random\unix\apr_random.c	/^    apr_size_t random_bytes;$/;"	m	struct:apr_random_t	file:
randomness	random\unix\apr_random.c	/^    unsigned char *randomness;$/;"	m	struct:apr_random_t	file:
randseed	file_io\unix\mktemp.c	/^static apr_uint32_t randseed=0;$/;"	v	file:
re	build\gen-build.py	/^import re$/;"	i
readExports	dso\aix\dso.c	/^static int readExports(ModulePtr mp)$/;"	f	file:
read_done	include\arch\os2\apr_arch_thread_rwlock.h	/^    HEV read_done;$/;"	m	struct:apr_thread_rwlock_t
read_event	include\arch\win32\apr_arch_thread_rwlock.h	/^    HANDLE      read_event;$/;"	m	struct:apr_thread_rwlock_t
read_with_timeout	file_io\win32\readwrite.c	/^static apr_status_t read_with_timeout(apr_file_t *file, void *buf, apr_size_t len_in, apr_size_t *nbytes)$/;"	f	file:
read_write	test\testpipe.c	/^static void read_write(abts_case *tc, void *data)$/;"	f	file:
read_write_notimeout	test\testpipe.c	/^static void read_write_notimeout(abts_case *tc, void *data)$/;"	f	file:
readers	include\arch\os2\apr_arch_thread_rwlock.h	/^    int readers;$/;"	m	struct:apr_thread_rwlock_t
readers	include\arch\win32\apr_arch_thread_rwlock.h	/^    LONG        readers;$/;"	m	struct:apr_thread_rwlock_t
readp	test\testpipe.c	/^static apr_file_t *readp = NULL;$/;"	v	file:
readset	poll\unix\select.c	/^    fd_set readset, writeset, exceptset;$/;"	m	struct:apr_pollset_private_t	file:
realsize	include\arch\unix\apr_arch_shm.h	/^    apr_size_t realsize; \/* actual segment size *\/$/;"	m	struct:apr_shm_t
reasonstr	test\testoc.c	/^static char reasonstr[256];$/;"	v	file:
recv	include\arch\os2\apr_arch_os2calls.h	52;"	d
recv0_pollset	test\testpoll.c	/^static void recv0_pollset(abts_case *tc, void *data)$/;"	f	file:
recv_1_send_0	test\testpoll.c	/^static void recv_1_send_0(abts_case *tc, void *data)$/;"	f	file:
recv_2_send_1	test\testpoll.c	/^static void recv_2_send_1(abts_case *tc, void *data)$/;"	f	file:
recv_large_pollarray	test\testpoll.c	/^static void recv_large_pollarray(abts_case *tc, void *data)$/;"	f	file:
recv_msg	test\testpoll.c	/^static void recv_msg(apr_socket_t **sockarray, int which, apr_pool_t *p, $/;"	f	file:
recvfrom	include\arch\os2\apr_arch_os2calls.h	59;"	d
ref	include\apr_allocator.h	/^    apr_memnode_t **ref;            \/**< reference to self *\/$/;"	m	struct:apr_memnode_t
ref	memory\unix\apr_pools.c	/^    apr_pool_t          **ref;$/;"	m	struct:apr_pool_t	file:
refCnt	dso\aix\dso.c	/^    int refCnt;			\/* the number of references *\/$/;"	m	struct:Module	file:
register_NLM	misc\netware\libprews.c	/^int register_NLM(void *NLMHandle)$/;"	f
rehash_size	random\unix\apr_random.c	/^    apr_size_t rehash_size;$/;"	m	struct:apr_random_t	file:
rekey	random\unix\apr_random.c	/^static void rekey(apr_random_t *g)$/;"	f	file:
release	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*release)(apr_proc_mutex_t *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
remote	include\apr_portable.h	/^    struct sockaddr *remote; \/**< NULL if not connected *\/$/;"	m	struct:apr_os_sock_info_t	typeref:struct:apr_os_sock_info_t::sockaddr
remote_addr	include\arch\os2\apr_arch_networkio.h	/^    apr_sockaddr_t *remote_addr;$/;"	m	struct:apr_socket_t
remote_addr	include\arch\unix\apr_arch_networkio.h	/^    apr_sockaddr_t *remote_addr;$/;"	m	struct:apr_socket_t
remote_addr	include\arch\win32\apr_arch_networkio.h	/^    apr_sockaddr_t     *remote_addr;$/;"	m	struct:apr_socket_t
remote_addr_unknown	include\arch\os2\apr_arch_networkio.h	/^    int remote_addr_unknown;$/;"	m	struct:apr_socket_t
remote_addr_unknown	include\arch\unix\apr_arch_networkio.h	/^    int remote_addr_unknown;$/;"	m	struct:apr_socket_t
remote_addr_unknown	include\arch\win32\apr_arch_networkio.h	/^    int                 remote_addr_unknown;$/;"	m	struct:apr_socket_t
remove	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*remove)(apr_pollcb_t *, apr_pollfd_t *);$/;"	m	struct:apr_pollcb_provider_t
remove	include\arch\unix\apr_arch_poll_private.h	/^    apr_status_t (*remove)(apr_pollset_t *, const apr_pollfd_t *);$/;"	m	struct:apr_pollset_provider_t
remove_keepalive	test\testsockopt.c	/^static void remove_keepalive(abts_case *tc, void *data)$/;"	f	file:
remove_lockfile	test\testflock.c	/^static void remove_lockfile(abts_case *tc, void *data)$/;"	f	file:
remove_sync_sigs	threadproc\unix\signals.c	/^static void remove_sync_sigs(sigset_t *sig_mask)$/;"	f	file:
replace	helpers\apr_rename.pl	/^sub replace {$/;"	s
report	test\abts.c	/^static int report(abts_suite *suite)$/;"	f	file:
reportError	test\echod.c	/^static void reportError(const char *msg, apr_status_t rv, $/;"	f	file:
reportError	test\sockperf.c	/^static void reportError(const char *msg, apr_status_t rv, $/;"	f	file:
reqevents	include\apr_poll.h	/^    apr_int16_t reqevents;      \/**< requested events *\/$/;"	m	struct:apr_pollfd_t
reqsize	include\arch\unix\apr_arch_shm.h	/^    apr_size_t reqsize;  \/* requested segment size *\/$/;"	m	struct:apr_shm_t
reqsize	shmem\beos\shm.c	/^    apr_size_t reqsize;$/;"	m	struct:apr_shm_t	file:
require_flags	test\testfnmatch.c	/^    int         require_flags;$/;"	m	struct:pattern_s	file:
required_option	test\testargs.c	/^static void required_option(abts_case *tc, void *data)$/;"	f	file:
required_option_notgiven	test\testargs.c	/^static void required_option_notgiven(abts_case *tc, void *data)$/;"	f	file:
res_name_from_filename	file_io\win32\open.c	/^void *res_name_from_filename(const char *file, int global, apr_pool_t *pool)$/;"	f
reseed_size	random\unix\apr_random.c	/^    apr_size_t reseed_size;$/;"	m	struct:apr_random_t	file:
reserved	include\arch\win32\apr_arch_misc.h	/^    PVOID reserved;$/;"	m	union:IOSB::__anon31
reset	include\apr_getopt.h	/^    int reset;$/;"	m	struct:apr_getopt_t
reset_status	test\abts.c	/^static void reset_status(void)$/;"	f	file:
resolve_deps	build\gen-build.py	/^def resolve_deps(header_deps):$/;"	f
resolve_ident	file_io\win32\filestat.c	/^static apr_status_t resolve_ident(apr_finfo_t *finfo, const char *fname,$/;"	f	file:
resolve_prot	file_io\win32\filestat.c	/^static void resolve_prot(apr_finfo_t *finfo, apr_int32_t wanted, PACL dacl)$/;"	f	file:
result_set	poll\os2\pollset.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_t	file:
result_set	poll\unix\epoll.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
result_set	poll\unix\kqueue.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
result_set	poll\unix\poll.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
result_set	poll\unix\port.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
result_set	poll\unix\select.c	/^    apr_pollfd_t *result_set;$/;"	m	struct:apr_pollset_private_t	file:
revents	include\arch\win32\apr_arch_misc.h	/^    SHORT   revents;$/;"	m	struct:pollfd
reverse	misc\unix\getopt.c	/^static void reverse(const char **argv, int start, int len)$/;"	f	file:
ring_lock	poll\unix\epoll.c	/^    apr_thread_mutex_t *ring_lock;$/;"	m	struct:apr_pollset_private_t	file:
ring_lock	poll\unix\kqueue.c	/^    apr_thread_mutex_t *ring_lock;$/;"	m	struct:apr_pollset_private_t	file:
ring_lock	poll\unix\port.c	/^    apr_thread_mutex_t *ring_lock;$/;"	m	struct:apr_pollset_private_t	file:
rnd_fn	test\testrand.c	/^typedef apr_status_t APR_THREAD_FUNC rnd_fn(apr_random_t * r, void *b,$/;"	t	file:
root_absolute	test\testnames.c	/^static void root_absolute(abts_case *tc, void *data)$/;"	f	file:
root_from_cwd_and_back	test\testnames.c	/^static void root_from_cwd_and_back(abts_case *tc, void *data)$/;"	f	file:
root_from_slash	test\testnames.c	/^static void root_from_slash(abts_case *tc, void *data)$/;"	f	file:
root_relative	test\testnames.c	/^static void root_relative(abts_case *tc, void *data)$/;"	f	file:
rootlen	include\arch\win32\apr_arch_file_io.h	/^    apr_size_t rootlen;$/;"	m	struct:apr_dir_t
rpaths	build\jlibtool.c	/^    count_chars *rpaths;$/;"	m	struct:__anon6	file:
rshash	locks\unix\proc_mutex.c	/^static unsigned int rshash (char *p) {$/;"	f	file:
rtnevents	include\apr_poll.h	/^    apr_int16_t rtnevents;      \/**< returned events *\/$/;"	m	struct:apr_pollfd_t
runTest	test\sockperf.c	/^static apr_status_t runTest(struct testSet *ts, struct testResult *res,$/;"	f	file:
run_child_cleanups	memory\unix\apr_pools.c	/^static void run_child_cleanups(cleanup_t **cref)$/;"	f	file:
run_cleanups	memory\unix\apr_pools.c	/^static void run_cleanups(cleanup_t **cref)$/;"	f	file:
run_command	build\jlibtool.c	/^int run_command(command_t *cmd_data, count_chars *cc)$/;"	f
run_mode	build\jlibtool.c	/^int run_mode(command_t *cmd_data)$/;"	f
rwlock	include\apr_thread_rwlock.h	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_destroy(apr_thread_rwlock_t *rwlock);$/;"	v
rwlock	include\apr_thread_rwlock.h	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_rdlock(apr_thread_rwlock_t *rwlock);$/;"	v
rwlock	include\apr_thread_rwlock.h	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_tryrdlock(apr_thread_rwlock_t *rwlock);$/;"	v
rwlock	include\apr_thread_rwlock.h	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_trywrlock(apr_thread_rwlock_t *rwlock);$/;"	v
rwlock	include\apr_thread_rwlock.h	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_unlock(apr_thread_rwlock_t *rwlock);$/;"	v
rwlock	include\apr_thread_rwlock.h	/^APR_DECLARE(apr_status_t) apr_thread_rwlock_wrlock(apr_thread_rwlock_t *rwlock);$/;"	v
rwlock	include\arch\netware\apr_arch_thread_rwlock.h	/^    NXRwLock_t *rwlock;$/;"	m	struct:apr_thread_rwlock_t
rwlock	include\arch\unix\apr_arch_thread_rwlock.h	/^    pthread_rwlock_t rwlock;$/;"	m	struct:apr_thread_rwlock_t
rwlock	test\testlock.c	/^static apr_thread_rwlock_t *rwlock;$/;"	v	file:
s	include\apr_poll.h	/^    apr_socket_t *s;            \/**< socket *\/$/;"	m	union:__anon15
s	test\testpoll.c	/^static apr_socket_t *s[LARGE_NUM_SOCKETS];$/;"	v	file:
s_addr	include\apr_network_io.h	/^    apr_uint32_t  s_addr; \/**< storage to hold the IP# *\/$/;"	m	struct:in_addr
sa	include\apr_network_io.h	/^    } sa;$/;"	m	struct:apr_sockaddr_t	typeref:union:apr_sockaddr_t::__anon12
sa	include\arch\win32\apr_arch_threadproc.h	/^    LPSECURITY_ATTRIBUTES   sa;$/;"	m	struct:apr_procattr_t
sa	test\testpoll.c	/^static apr_sockaddr_t *sa[LARGE_NUM_SOCKETS];$/;"	v	file:
safe_mkdir	build\jlibtool.c	/^void safe_mkdir(const char *path)$/;"	f
safe_strtol	build\jlibtool.c	/^long safe_strtol(const char *nptr, const char **endptr, int base)$/;"	f
salen	include\apr_network_io.h	/^    apr_socklen_t salen;$/;"	m	struct:apr_sockaddr_t
same_drive	file_io\win32\filepath.c	/^static int same_drive(const char *path1, const char *path2)$/;"	f	file:
same_value	test\testhash.c	/^static void same_value(abts_case *tc, void *data)$/;"	f	file:
same_value_custom	test\testhash.c	/^static void same_value_custom(abts_case *tc, void *data)$/;"	f	file:
sas	include\apr_network_io.h	/^        struct sockaddr_storage sas;$/;"	m	union:apr_sockaddr_t::__anon12	typeref:struct:apr_sockaddr_t::__anon12::sockaddr_storage
sd	include\arch\win32\apr_arch_threadproc.h	/^    LPVOID                  sd;$/;"	m	struct:apr_procattr_t
section	include\arch\win32\apr_arch_thread_mutex.h	/^    CRITICAL_SECTION  section;$/;"	m	struct:apr_thread_mutex_t
secure_base	random\unix\apr_random.c	/^    unsigned int secure_base;$/;"	m	struct:apr_random_t	file:
secure_started	random\unix\apr_random.c	/^    unsigned int secure_started:1;$/;"	m	struct:apr_random_t	file:
seedrandom	file_io\unix\mktemp.c	65;"	d	file:
seedrandom	file_io\unix\mktemp.c	71;"	d	file:
select	include\arch\os2\apr_arch_os2calls.h	42;"	d
self	memory\unix\apr_pools.c	/^    apr_memnode_t        *self; \/* The node containing the pool itself *\/$/;"	m	struct:apr_pool_t	file:
self_first_avail	memory\unix\apr_pools.c	/^    char                 *self_first_avail;$/;"	m	struct:apr_pool_t	file:
sem	include\apr_portable.h	/^	sem_id sem;$/;"	m	struct:apr_os_proc_mutex_t
sem	include\arch\beos\apr_arch_thread_cond.h	/^    sem_id sem;$/;"	m	struct:waiter_t
sem	include\arch\beos\apr_arch_threadproc.h	/^    sem_id sem;$/;"	m	struct:apr_thread_once_t
sem	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long sem;$/;"	m	struct:apr_thread_once_t
semaphore	include\arch\win32\apr_arch_thread_cond.h	/^    HANDLE semaphore;$/;"	m	struct:apr_thread_cond_t
semun	include\arch\unix\apr_arch_proc_mutex.h	/^union semun {$/;"	u
semun::array	include\arch\unix\apr_arch_proc_mutex.h	/^    unsigned short *array;$/;"	m	union:semun
semun::buf	include\arch\unix\apr_arch_proc_mutex.h	/^    struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds
semun::val	include\arch\unix\apr_arch_proc_mutex.h	/^    int val;$/;"	m	union:semun
send	include\arch\os2\apr_arch_os2calls.h	53;"	d
send0_pollset	test\testpoll.c	/^static void send0_pollset(abts_case *tc, void *data)$/;"	f	file:
sendRecvBuffer	test\sockperf.c	/^static apr_status_t sendRecvBuffer(apr_time_t *t, const char *buf, $/;"	f	file:
send_2	test\testpoll.c	/^static void send_2(abts_case *tc, void *data)$/;"	f	file:
send_2_signaled_1	test\testpoll.c	/^static void send_2_signaled_1(abts_case *tc, void *data)$/;"	f	file:
send_large_pollarray	test\testpoll.c	/^static void send_large_pollarray(abts_case *tc, void *data)$/;"	f	file:
send_last_pollset	test\testpoll.c	/^static void send_last_pollset(abts_case *tc, void *data)$/;"	f	file:
send_middle_pollset	test\testpoll.c	/^static void send_middle_pollset(abts_case *tc, void *data)$/;"	f	file:
send_msg	test\testpoll.c	/^static void send_msg(apr_socket_t **sockarray, apr_sockaddr_t **sas, int which,$/;"	f	file:
send_pipe	threadproc\beos\proc.c	/^struct send_pipe {$/;"	s	file:
send_pipe::err	threadproc\beos\proc.c	/^	int err;$/;"	m	struct:send_pipe	file:
send_pipe::in	threadproc\beos\proc.c	/^	int in;$/;"	m	struct:send_pipe	file:
send_pipe::out	threadproc\beos\proc.c	/^	int out;$/;"	m	struct:send_pipe	file:
sendfile	network_io\unix\sendrecv.c	259;"	d	file:
sendfile	network_io\unix\sendrecv.c	675;"	d	file:
sendfilev	network_io\unix\sendrecv.c	970;"	d	file:
sendfilevec_t	network_io\unix\sendrecv.c	969;"	d	file:
sendto	include\arch\os2\apr_arch_os2calls.h	58;"	d
sendto_receivefrom	test\testsockets.c	/^static void sendto_receivefrom(abts_case *tc, void *data)$/;"	f	file:
sendto_receivefrom6	test\testsockets.c	/^static void sendto_receivefrom6(abts_case *tc, void *data)$/;"	f	file:
sendto_receivefrom_helper	test\testsockets.c	/^static void sendto_receivefrom_helper(abts_case *tc, const char *addr,$/;"	f	file:
serr	misc\unix\getopt.c	/^static apr_status_t serr(apr_getopt_t *os, const char *err, const char *str,$/;"	f	file:
server	test\sendfile.c	/^static int server(void)$/;"	f	file:
server_gmt_offset	time\unix\time.c	/^static apr_int32_t server_gmt_offset;$/;"	v	file:
servname	include\apr_network_io.h	/^    char *servname;$/;"	m	struct:apr_sockaddr_t
setGlobalPool	misc\netware\libprews.c	/^int setGlobalPool(void *data)$/;"	f
set_debug	test\testsockopt.c	/^static void set_debug(abts_case *tc, void *data)$/;"	f	file:
set_keepalive	test\testsockopt.c	/^static void set_keepalive(abts_case *tc, void *data)$/;"	f	file:
set_socket_vars	network_io\os2\sockets.c	/^static void set_socket_vars(apr_socket_t *sock, int family, int type, int protocol)$/;"	f	file:
set_socket_vars	network_io\unix\sockets.c	/^static void set_socket_vars(apr_socket_t *sock, int family, int type, int protocol)$/;"	f	file:
set_socket_vars	network_io\win32\sockets.c	/^static void set_socket_vars(apr_socket_t *sock, int family, int type, int protocol)$/;"	f	file:
set_timeout	test\testpipe.c	/^static void set_timeout(abts_case *tc, void *data)$/;"	f	file:
set_type	poll\unix\select.c	/^    int set_type;$/;"	m	struct:apr_pollset_private_t	file:
set_userdata	test\testud.c	/^static void set_userdata(abts_case *tc, void *data)$/;"	f	file:
setptr	file_io\os2\seek.c	/^static apr_status_t setptr(apr_file_t *thefile, unsigned long pos )$/;"	f	file:
setptr	file_io\unix\seek.c	/^static apr_status_t setptr(apr_file_t *thefile, apr_off_t pos )$/;"	f	file:
setptr	file_io\win32\seek.c	/^static apr_status_t setptr(apr_file_t *thefile, apr_off_t pos )$/;"	f	file:
setsize	poll\unix\kqueue.c	/^    apr_uint32_t setsize;$/;"	m	struct:apr_pollset_private_t	file:
setsockopt	include\arch\os2\apr_arch_os2calls.h	54;"	d
setup_large_poll	test\testpoll.c	/^static void setup_large_poll(abts_case *tc, void *data)$/;"	f	file:
setup_pollcb	test\testpoll.c	/^static void setup_pollcb(abts_case *tc, void *data)$/;"	f	file:
setup_pollset	test\testpoll.c	/^static void setup_pollset(abts_case *tc, void *data)$/;"	f	file:
setup_small_poll	test\testpoll.c	/^static void setup_small_poll(abts_case *tc, void *data)$/;"	f	file:
setup_socket	test\testsock.c	/^static apr_socket_t *setup_socket(abts_case *tc)$/;"	f	file:
sha256_add	random\unix\sha2_glue.c	/^static void sha256_add(apr_crypto_hash_t *h,const void *data,$/;"	f	file:
sha256_finish	random\unix\sha2_glue.c	/^static void sha256_finish(apr_crypto_hash_t *h,unsigned char *result)$/;"	f	file:
sha256_init	random\unix\sha2_glue.c	/^static void sha256_init(apr_crypto_hash_t *h)$/;"	f	file:
sha256_initial_hash_value	random\unix\sha2.c	/^static const sha2_word32 sha256_initial_hash_value[8] = {$/;"	v	file:
sha2_byte	random\unix\sha2.c	/^typedef apr_byte_t   sha2_byte;         \/* Exactly 1 byte *\/$/;"	t	file:
sha2_hex_digits	random\unix\sha2.c	/^static const char *sha2_hex_digits = "0123456789abcdef";$/;"	v	file:
sha2_word32	random\unix\sha2.c	/^typedef apr_uint32_t sha2_word32;       \/* Exactly 4 bytes *\/$/;"	t	file:
sha2_word64	random\unix\sha2.c	/^typedef apr_uint64_t sha2_word64;       \/* Exactly 8 bytes *\/$/;"	t	file:
sha384_initial_hash_value	random\unix\sha2.c	/^static const sha2_word64 sha384_initial_hash_value[8] = {$/;"	v	file:
sha512_initial_hash_value	random\unix\sha2.c	/^static const sha2_word64 sha512_initial_hash_value[8] = {$/;"	v	file:
share_SHARED	build\jlibtool.c	/^    share_SHARED,$/;"	e	enum:shared_mode_e	file:
share_STATIC	build\jlibtool.c	/^    share_STATIC,$/;"	e	enum:shared_mode_e	file:
share_UNSET	build\jlibtool.c	/^    share_UNSET,$/;"	e	enum:shared_mode_e	file:
shared	build\aplibtool.c	/^bool shared = false;$/;"	v
shared	build\jlibtool.c	/^    enum shared_mode_e shared;$/;"	m	struct:__anon5	typeref:enum:__anon5::shared_mode_e	file:
shared_mode_e	build\jlibtool.c	/^enum shared_mode_e {$/;"	g	file:
shared_name	build\jlibtool.c	/^    library_name shared_name;$/;"	m	struct:__anon6	file:
shared_opts	build\jlibtool.c	/^    library_opts shared_opts;$/;"	m	struct:__anon6	file:
shell_esc	build\aplibtool.c	/^char *shell_esc(const char *str)$/;"	f
shell_esc	build\jlibtool.c	/^char *shell_esc(const char *str)$/;"	f
shm	include\apr_shm.h	/^APR_POOL_DECLARE_ACCESSOR(shm);$/;"	v
shm_cleanup	shmem\win32\shm.c	/^static apr_status_t shm_cleanup(void* shm)$/;"	f	file:
shm_cleanup_attach	shmem\unix\shm.c	/^static apr_status_t shm_cleanup_attach(void *m_)$/;"	f	file:
shm_cleanup_owner	shmem\unix\shm.c	/^static apr_status_t shm_cleanup_owner(void *m_)$/;"	f	file:
shmid	include\arch\unix\apr_arch_shm.h	/^    int shmid;          \/* shmem ID returned from shmget() *\/$/;"	m	struct:apr_shm_t
should_test_run	test\abts.c	/^static int should_test_run(const char *testname) {$/;"	f	file:
shutdown	include\arch\os2\apr_arch_os2calls.h	55;"	d
sibling	memory\unix\apr_pools.c	/^    apr_pool_t           *sibling;$/;"	m	struct:apr_pool_t	file:
sigma0_256	random\unix\sha2.c	139;"	d	file:
sigma0_512	random\unix\sha2.c	145;"	d	file:
sigma1_256	random\unix\sha2.c	140;"	d	file:
sigma1_512	random\unix\sha2.c	146;"	d	file:
signal_description	threadproc\unix\signals.c	/^static const char *signal_description[APR_NUMSIG];$/;"	v	file:
signal_thread_func	threadproc\netware\signals.c	/^static void *signal_thread_func(void *signal_handler)$/;"	f	file:
silent	build\aplibtool.c	/^bool silent = false;$/;"	v
silent	build\jlibtool.c	/^    int silent;$/;"	m	struct:__anon5	file:
sin	include\apr_network_io.h	/^        struct sockaddr_in sin;$/;"	m	union:apr_sockaddr_t::__anon12	typeref:struct:apr_sockaddr_t::__anon12::sockaddr_in
sin6	include\apr_network_io.h	/^        struct sockaddr_in6 sin6;$/;"	m	union:apr_sockaddr_t::__anon12	typeref:struct:apr_sockaddr_t::__anon12::sockaddr_in6
size	include\apr_file_info.h	/^    apr_off_t size;$/;"	m	struct:apr_finfo_t
size	include\apr_mmap.h	/^    apr_size_t size;$/;"	m	struct:apr_mmap_t
size	include\apr_random.h	/^    apr_size_t size;$/;"	m	struct:apr_crypto_hash_t
size	memory\unix\apr_pools.c	/^    apr_size_t size;$/;"	m	struct:psprintf_data	file:
size	shmem\win32\shm.c	/^    apr_size_t  size;$/;"	m	struct:apr_shm_t	file:
size	shmem\win32\shm.c	/^    apr_size_t size;$/;"	m	struct:memblock_t	file:
size	test\sockperf.c	/^    apr_size_t size;$/;"	m	struct:testSet	file:
size	test\sockperf.c	/^    int size;$/;"	m	struct:testResult	file:
size_t_fmt	test\testfmt.c	/^static void size_t_fmt(abts_case *tc, void *data)$/;"	f	file:
skip_end	include\apr_getopt.h	/^    int skip_end;$/;"	m	struct:apr_getopt_t
skip_start	include\apr_getopt.h	/^    int skip_start;$/;"	m	struct:apr_getopt_t
sleep	include\arch\win32\apr_private.h	124;"	d
sleep_one	test\testsleep.c	/^static void sleep_one(abts_case *tc, void *data)$/;"	f	file:
snprintf	build\jlibtool.c	/^static int snprintf( char *str, size_t n, const char *fmt, ... )$/;"	f	file:
snprintf_0NULL	test\teststr.c	/^static void snprintf_0NULL(abts_case *tc, void *data)$/;"	f	file:
snprintf_0nonNULL	test\teststr.c	/^static void snprintf_0nonNULL(abts_case *tc, void *data)$/;"	f	file:
snprintf_flush	strings\apr_snprintf.c	/^static int snprintf_flush(apr_vformatter_buff_t *vbuff)$/;"	f	file:
snprintf_noNULL	test\teststr.c	/^static void snprintf_noNULL(abts_case *tc, void *data)$/;"	f	file:
snprintf_overflow	test\teststr.c	/^static void snprintf_overflow(abts_case *tc, void *data)$/;"	f	file:
snprintf_underflow	test\teststr.c	/^static void snprintf_underflow(abts_case *tc, void *data)$/;"	f	file:
soblock	network_io\unix\sockopt.c	/^static apr_status_t soblock(int sd)$/;"	f	file:
soblock	network_io\win32\sockopt.c	/^static apr_status_t soblock(SOCKET sd)$/;"	f	file:
sock	test\testsockopt.c	/^static apr_socket_t *sock = NULL;$/;"	v	file:
sockAddr	test\sockperf.c	/^static apr_sockaddr_t *sockAddr = NULL;$/;"	v	file:
sock_errno	include\arch\os2\apr_arch_os2calls.h	43;"	d
sock_is_ipv4	network_io\unix\multicast.c	/^static int sock_is_ipv4(apr_socket_t *sock)$/;"	f	file:
sock_is_ipv6	network_io\unix\multicast.c	/^static int sock_is_ipv6(apr_socket_t *sock)$/;"	f	file:
sock_userdata_t	include\arch\os2\apr_arch_networkio.h	/^struct sock_userdata_t {$/;"	s
sock_userdata_t	include\arch\os2\apr_arch_networkio.h	/^typedef struct sock_userdata_t sock_userdata_t;$/;"	t	typeref:struct:sock_userdata_t
sock_userdata_t	include\arch\unix\apr_arch_networkio.h	/^struct sock_userdata_t {$/;"	s
sock_userdata_t	include\arch\unix\apr_arch_networkio.h	/^typedef struct sock_userdata_t sock_userdata_t;$/;"	t	typeref:struct:sock_userdata_t
sock_userdata_t	include\arch\win32\apr_arch_networkio.h	/^struct sock_userdata_t {$/;"	s
sock_userdata_t	include\arch\win32\apr_arch_networkio.h	/^typedef struct sock_userdata_t sock_userdata_t;$/;"	t	typeref:struct:sock_userdata_t
sock_userdata_t::data	include\arch\os2\apr_arch_networkio.h	/^    void *data;$/;"	m	struct:sock_userdata_t
sock_userdata_t::data	include\arch\unix\apr_arch_networkio.h	/^    void *data;$/;"	m	struct:sock_userdata_t
sock_userdata_t::data	include\arch\win32\apr_arch_networkio.h	/^    void *data;$/;"	m	struct:sock_userdata_t
sock_userdata_t::key	include\arch\os2\apr_arch_networkio.h	/^    const char *key;$/;"	m	struct:sock_userdata_t
sock_userdata_t::key	include\arch\unix\apr_arch_networkio.h	/^    const char *key;$/;"	m	struct:sock_userdata_t
sock_userdata_t::key	include\arch\win32\apr_arch_networkio.h	/^    const char *key;$/;"	m	struct:sock_userdata_t
sock_userdata_t::next	include\arch\os2\apr_arch_networkio.h	/^    sock_userdata_t *next;$/;"	m	struct:sock_userdata_t
sock_userdata_t::next	include\arch\unix\apr_arch_networkio.h	/^    sock_userdata_t *next;$/;"	m	struct:sock_userdata_t
sock_userdata_t::next	include\arch\win32\apr_arch_networkio.h	/^    sock_userdata_t *next;$/;"	m	struct:sock_userdata_t
socket	include\apr_network_io.h	/^APR_DECLARE_INHERIT_SET(socket);$/;"	v
socket	include\apr_network_io.h	/^APR_DECLARE_INHERIT_UNSET(socket);$/;"	v
socket	include\apr_network_io.h	/^APR_POOL_DECLARE_ACCESSOR(socket);$/;"	v
socket	include\arch\os2\apr_arch_os2calls.h	41;"	d
socket	include\arch\win32\apr_dbg_win32_handles.h	163;"	d
socket	network_io\os2\sockets.c	/^APR_POOL_IMPLEMENT_ACCESSOR(socket);$/;"	v
socket	network_io\win32\sockets.c	/^APR_POOL_IMPLEMENT_ACCESSOR(socket);$/;"	v
socket_cleanup	network_io\os2\sockets.c	/^static apr_status_t socket_cleanup(void *sock)$/;"	f	file:
socket_cleanup	network_io\unix\sockets.c	/^static apr_status_t socket_cleanup(void *sock)$/;"	f	file:
socket_cleanup	network_io\win32\sockets.c	/^static apr_status_t socket_cleanup(void *sock)$/;"	f	file:
socket_pipe_cleanup	file_io\win32\pipe.c	/^static apr_status_t socket_pipe_cleanup(void *thefile)$/;"	f	file:
socket_userdata	test\testsockets.c	/^static void socket_userdata(abts_case *tc, void *data)$/;"	f	file:
socketdes	include\arch\os2\apr_arch_networkio.h	/^    int socketdes;$/;"	m	struct:apr_socket_t
socketdes	include\arch\unix\apr_arch_networkio.h	/^    int socketdes;$/;"	m	struct:apr_socket_t
socketdes	include\arch\win32\apr_arch_networkio.h	/^    SOCKET              socketdes;$/;"	m	struct:apr_socket_t
soclose	include\arch\os2\apr_arch_os2calls.h	56;"	d
sononblock	network_io\unix\sockopt.c	/^static apr_status_t sononblock(int sd)$/;"	f	file:
sononblock	network_io\win32\sockopt.c	/^static apr_status_t sononblock(SOCKET sd)$/;"	f	file:
ssize_t_fmt	test\testfmt.c	/^static void ssize_t_fmt(abts_case *tc, void *data)$/;"	f	file:
stack_size	include\arch\netware\apr_arch_threadproc.h	/^    apr_size_t  stack_size;$/;"	m	struct:apr_threadattr_t
stacksize	include\arch\os2\apr_arch_threadproc.h	/^    apr_size_t stacksize;$/;"	m	struct:apr_threadattr_t
stacksize	include\arch\win32\apr_arch_threadproc.h	/^    apr_size_t stacksize;$/;"	m	struct:apr_threadattr_t
stat	include\arch\unix\apr_arch_file_io.h	135;"	d
stat_alloc	memory\unix\apr_pools.c	/^    unsigned int          stat_alloc;$/;"	m	struct:apr_pool_t	file:
stat_cache_cleanup	file_io\netware\filestat.c	/^static apr_status_t stat_cache_cleanup(void *data)$/;"	f	file:
stat_clear	memory\unix\apr_pools.c	/^    unsigned int          stat_clear;$/;"	m	struct:apr_pool_t	file:
stat_total_alloc	memory\unix\apr_pools.c	/^    unsigned int          stat_total_alloc;$/;"	m	struct:apr_pool_t	file:
state	random\unix\sha2.h	/^        apr_uint32_t    state[8];$/;"	m	struct:_SHA256_CTX
state	random\unix\sha2.h	/^        apr_uint64_t    state[8];$/;"	m	struct:_SHA512_CTX
state	test\testcond.c	/^} state;$/;"	v	typeref:enum:__anon35
static_name	build\jlibtool.c	/^    library_name static_name;$/;"	m	struct:__anon6	file:
static_opts	build\jlibtool.c	/^    library_opts static_opts;$/;"	m	struct:__anon6	file:
status	test\abts.c	/^static char status[ABTS_STAT_SIZE] = {'|', '\/', '-', '|', '\\\\', '-'};$/;"	v	file:
store_desc	threadproc\unix\signals.c	138;"	d	file:
str_equal	test\teststrnatcmp.c	/^static void str_equal(abts_case *tc, void *data)$/;"	f	file:
str_equal_ignore_case	test\teststrnatcmp.c	/^static void str_equal_ignore_case(abts_case *tc, void *data)$/;"	f	file:
strcasecmp	include\apr_general.h	118;"	d
strcasecmp	strings\apr_cpystrn.c	/^int strcasecmp(const char *a, const char *b)$/;"	f
strdup	strings\apr_cpystrn.c	/^char *strdup(const char *str)$/;"	f
string	build\gen-build.py	/^import string$/;"	i
string	test\testfnmatch.c	/^    const char *string;$/;"	m	struct:pattern_s	file:
string_cleanup	test\testud.c	/^static apr_status_t string_cleanup(void *data)$/;"	f	file:
string_cpystrn	test\teststr.c	/^static void string_cpystrn(abts_case *tc, void *data)$/;"	f	file:
string_error	test\teststr.c	/^static void string_error(abts_case *tc, void *data)$/;"	f	file:
string_long	test\teststr.c	/^static void string_long(abts_case *tc, void *data)$/;"	f	file:
string_strfsize	test\teststr.c	/^static void string_strfsize(abts_case *tc, void *data)$/;"	f	file:
string_strtoff	test\teststr.c	/^static void string_strtoff(abts_case *tc, void *data)$/;"	f	file:
string_strtoi64	test\teststr.c	/^static void string_strtoi64(abts_case *tc, void *data)$/;"	f	file:
strnatcmp0	strings\apr_strnatcmp.c	/^static int strnatcmp0(char const *a, char const *b, int fold_case)$/;"	f	file:
strncasecmp	include\apr_general.h	124;"	d
strncasecmp	strings\apr_cpystrn.c	/^int strncasecmp(const char *a, const char *b, size_t n)$/;"	f
strstr	strings\apr_cpystrn.c	/^char *strstr(char *s1, char *s2)$/;"	f
struct_stat	include\arch\netware\apr_arch_file_io.h	/^typedef struct stat struct_stat;$/;"	t	typeref:struct:stat
struct_stat	include\arch\unix\apr_arch_file_io.h	/^typedef struct stat struct_stat;$/;"	t	typeref:struct:stat
struct_stat	include\arch\unix\apr_arch_file_io.h	/^typedef struct stat64 struct_stat;$/;"	t	typeref:struct:stat64
stub_name	build\aplibtool.c	/^    char *stub_name;$/;"	m	struct:__anon1	file:
stuffbuffer	misc\unix\errorcodes.c	/^static char *stuffbuffer(char *buf, apr_size_t bufsize, const char *s)$/;"	f	file:
sub	network_io\unix\sockaddr.c	/^    apr_uint32_t sub[1];$/;"	m	struct:apr_ipsubnet_t	file:
sub	network_io\unix\sockaddr.c	/^    apr_uint32_t sub[4]; \/* big enough for IPv4 and IPv6 addresses *\/$/;"	m	struct:apr_ipsubnet_t	file:
sub_suite	test\abts.h	/^struct sub_suite {$/;"	s
sub_suite	test\abts.h	/^typedef struct sub_suite sub_suite;$/;"	t	typeref:struct:sub_suite
sub_suite::failed	test\abts.h	/^    int failed;$/;"	m	struct:sub_suite
sub_suite::name	test\abts.h	/^    const char *name;$/;"	m	struct:sub_suite
sub_suite::next	test\abts.h	/^    struct sub_suite *next;$/;"	m	struct:sub_suite	typeref:struct:sub_suite::sub_suite
sub_suite::not_impl	test\abts.h	/^    int not_impl;$/;"	m	struct:sub_suite
sub_suite::not_run	test\abts.h	/^    int not_run;$/;"	m	struct:sub_suite
sub_suite::num_test	test\abts.h	/^    int num_test;$/;"	m	struct:sub_suite
subprocesses	memory\unix\apr_pools.c	/^    struct process_chain *subprocesses;$/;"	m	struct:apr_pool_t	typeref:struct:apr_pool_t::process_chain	file:
success_cleanup	test\testpools.c	/^static apr_status_t success_cleanup(void *data)$/;"	f	file:
suite	test\abts.h	/^    sub_suite *suite;$/;"	m	struct:abts_case
sum_hash	test\testhash.c	/^static void sum_hash(apr_pool_t *p, apr_hash_t *h, int *pcount, int *keySum, int *valSum) $/;"	f	file:
summation_test	test\testhash.c	/^static void summation_test(abts_case *tc, void *data)$/;"	f	file:
sym_list	include\arch\netware\apr_arch_dso.h	/^struct sym_list {$/;"	s
sym_list	include\arch\netware\apr_arch_dso.h	/^typedef struct sym_list sym_list;$/;"	t	typeref:struct:sym_list
sym_list::next	include\arch\netware\apr_arch_dso.h	/^    sym_list *next;$/;"	m	struct:sym_list
sym_list::symbol	include\arch\netware\apr_arch_dso.h	/^    char *symbol;$/;"	m	struct:sym_list
symbol	include\arch\netware\apr_arch_dso.h	/^    char *symbol;$/;"	m	struct:sym_list
symbols	include\arch\netware\apr_arch_dso.h	/^    sym_list    *symbols;$/;"	m	struct:apr_dso_handle_t
t	include\apr_tables.h	/^APR_DECLARE(const apr_array_header_t *) apr_table_elts(const apr_table_t *t);$/;"	v
t	include\apr_tables.h	/^APR_DECLARE(int) apr_is_empty_table(const apr_table_t *t);$/;"	v
t	include\apr_tables.h	/^APR_DECLARE(void) apr_table_clear(apr_table_t *t);$/;"	v
t	include\apr_time.h	/^APR_DECLARE(void) apr_sleep(apr_interval_time_t t);$/;"	v
t1	test\testtable.c	/^static apr_table_t *t1 = NULL;$/;"	v	file:
t1	test\testthread.c	/^static apr_thread_t *t1;$/;"	v	file:
t2	test\testthread.c	/^static apr_thread_t *t2;$/;"	v	file:
t3	test\testthread.c	/^static apr_thread_t *t3;$/;"	v	file:
t4	test\testthread.c	/^static apr_thread_t *t4;$/;"	v	file:
table_add	test\testtable.c	/^static void table_add(abts_case *tc, void *data)$/;"	f	file:
table_clear	test\testtable.c	/^static void table_clear(abts_case *tc, void *data)$/;"	f	file:
table_get	test\testtable.c	/^static void table_get(abts_case *tc, void *data)$/;"	f	file:
table_getnotthere	test\testtable.c	/^static void table_getnotthere(abts_case *tc, void *data)$/;"	f	file:
table_make	test\testtable.c	/^static void table_make(abts_case *tc, void *data)$/;"	f	file:
table_mergesort	tables\apr_tables.c	/^static apr_table_entry_t **table_mergesort(apr_pool_t *pool,$/;"	f	file:
table_nelts	test\testtable.c	/^static void table_nelts(abts_case *tc, void *data)$/;"	f	file:
table_overlap	test\testtable.c	/^static void table_overlap(abts_case *tc, void *data)$/;"	f	file:
table_overlap2	test\testtable.c	/^static void table_overlap2(abts_case *tc, void *data)$/;"	f	file:
table_push	tables\apr_tables.c	374;"	d	file:
table_push	tables\apr_tables.c	376;"	d	file:
table_push	tables\apr_tables.c	379;"	d	file:
table_reindex	tables\apr_tables.c	/^static void table_reindex(apr_table_t *t)$/;"	f	file:
table_set	test\testtable.c	/^static void table_set(abts_case *tc, void *data)$/;"	f	file:
table_unset	test\testtable.c	/^static void table_unset(abts_case *tc, void *data)$/;"	f	file:
tag	memory\unix\apr_pools.c	/^    const char           *tag;$/;"	m	struct:apr_pool_t	file:
tail	test\abts.h	/^    sub_suite *tail;$/;"	m	struct:abts_suite
talkTalk	test\echod.c	/^static apr_status_t talkTalk(apr_socket_t *socket, apr_pool_t *parent)$/;"	f	file:
tbox_t	test\testatomic.c	/^struct tbox_t {$/;"	s	file:
tbox_t	test\testatomic.c	/^typedef struct tbox_t tbox_t;$/;"	t	typeref:struct:tbox_t	file:
tbox_t::func	test\testatomic.c	/^    void (*func)(tbox_t *box);$/;"	m	struct:tbox_t	file:
tbox_t::loop	test\testatomic.c	/^    apr_uint32_t loop;$/;"	m	struct:tbox_t	file:
tbox_t::mem	test\testatomic.c	/^    apr_uint32_t *mem;$/;"	m	struct:tbox_t	file:
tbox_t::postval	test\testatomic.c	/^    apr_uint32_t postval;$/;"	m	struct:tbox_t	file:
tbox_t::preval	test\testatomic.c	/^    apr_uint32_t preval;$/;"	m	struct:tbox_t	file:
tbox_t::tc	test\testatomic.c	/^    abts_case *tc;$/;"	m	struct:tbox_t	file:
tc	test\testatomic.c	/^    abts_case *tc;$/;"	m	struct:tbox_t	file:
tc	test\testcond.c	/^    abts_case *tc;$/;"	m	struct:toolbox_t	file:
tc	test\testpoll.c	/^    abts_case *tc;$/;"	m	struct:pollcb_baton_t	file:
tcp6_socket	test\testsockets.c	/^static void tcp6_socket(abts_case *tc, void *data)$/;"	f	file:
tcp_socket	test\testsockets.c	/^static void tcp_socket(abts_case *tc, void *data)$/;"	f	file:
td	include\arch\beos\apr_arch_threadproc.h	/^	volatile thread_id  td;$/;"	m	struct:beos_private_data
td	include\arch\beos\apr_arch_threadproc.h	/^    thread_id td;$/;"	m	struct:apr_thread_t
td	include\arch\netware\apr_arch_threadproc.h	/^    NXThreadId_t td;$/;"	m	struct:apr_thread_t
td	include\arch\unix\apr_arch_threadproc.h	/^    pthread_t *td;$/;"	m	struct:apr_thread_t
td	include\arch\win32\apr_arch_threadproc.h	/^    HANDLE td;$/;"	m	struct:apr_thread_t
term	dso\aix\dso.c	/^    void (*term) (void);	\/* call static destructors *\/$/;"	m	struct:__anon8	file:
terminate	dso\aix\dso.c	/^static void terminate(void)$/;"	f	file:
testPort	test\sockperf.c	/^static apr_int16_t testPort = 4747;$/;"	v	file:
testResult	test\sockperf.c	/^struct testResult {$/;"	s	file:
testResult::avg	test\sockperf.c	/^    apr_time_t avg;$/;"	m	struct:testResult	file:
testResult::iters	test\sockperf.c	/^    int iters;$/;"	m	struct:testResult	file:
testResult::msecs	test\sockperf.c	/^    apr_time_t msecs[MAX_ITERS];$/;"	m	struct:testResult	file:
testResult::size	test\sockperf.c	/^    int size;$/;"	m	struct:testResult	file:
testRuns	test\sockperf.c	/^} testRuns[] = {$/;"	v	typeref:struct:testSet
testSet	test\sockperf.c	/^struct testSet {$/;"	s	file:
testSet::c	test\sockperf.c	/^    char c;$/;"	m	struct:testSet	file:
testSet::iters	test\sockperf.c	/^    int iters;$/;"	m	struct:testSet	file:
testSet::size	test\sockperf.c	/^    apr_size_t size;$/;"	m	struct:testSet	file:
test_2038	test\testtime.c	/^static void test_2038(abts_case *tc, void *data)$/;"	f	file:
test_add32	test\testatomic.c	/^static void test_add32(abts_case *tc, void *data)$/;"	f	file:
test_addr_info	test\testsock.c	/^static void test_addr_info(abts_case *tc, void *data)$/;"	f	file:
test_ancestor	test\testpools.c	/^static void test_ancestor(abts_case *tc, void *data)$/;"	f	file:
test_anon	test\testshm.c	/^static void test_anon(abts_case *tc, void *data)$/;"	f	file:
test_anon_create	test\testshm.c	/^static void test_anon_create(abts_case *tc, void *data)$/;"	f	file:
test_append	test\testlfs.c	/^static void test_append(abts_case *tc, void *data)$/;"	f	file:
test_atomics_busyloop_threaded	test\testatomic.c	/^static void test_atomics_busyloop_threaded(abts_case *tc, void *data)$/;"	f	file:
test_atomics_threaded	test\testatomic.c	/^static void test_atomics_threaded(abts_case *tc, void *data)$/;"	f	file:
test_atreadeof	test\testsock.c	/^static void test_atreadeof(abts_case *tc, void *data)$/;"	f	file:
test_bad_input	test\testipsub.c	/^static void test_bad_input(abts_case *tc, void *data)$/;"	f	file:
test_badip_str	test\testipsub.c	/^static void test_badip_str(abts_case *tc, void *data)$/;"	f	file:
test_badmask_str	test\testipsub.c	/^static void test_badmask_str(abts_case *tc, void *data)$/;"	f	file:
test_bigfprintf	test\testfile.c	/^static void test_bigfprintf(abts_case *tc, void *data)$/;"	f	file:
test_bigread	test\testfile.c	/^static void test_bigread(abts_case *tc, void *data)$/;"	f	file:
test_buffer_set_get	test\testfile.c	/^static void test_buffer_set_get(abts_case *tc, void *data)$/;"	f	file:
test_buffered	test\testlfs.c	/^static void test_buffered(abts_case *tc, void *data)$/;"	f	file:
test_buffered_write_size	test\testfileinfo.c	/^static void test_buffered_write_size(abts_case *tc, void *data)$/;"	f	file:
test_cas_equal	test\testatomic.c	/^static void test_cas_equal(abts_case *tc, void *data)$/;"	f	file:
test_cas_equal_nonnull	test\testatomic.c	/^static void test_cas_equal_nonnull(abts_case *tc, void *data)$/;"	f	file:
test_cas_notequal	test\testatomic.c	/^static void test_cas_notequal(abts_case *tc, void *data)$/;"	f	file:
test_casptr_equal	test\testatomic.c	/^static void test_casptr_equal(abts_case *tc, void *data)$/;"	f	file:
test_casptr_equal_nonnull	test\testatomic.c	/^static void test_casptr_equal_nonnull(abts_case *tc, void *data)$/;"	f	file:
test_casptr_notequal	test\testatomic.c	/^static void test_casptr_notequal(abts_case *tc, void *data)$/;"	f	file:
test_check_size	test\testshm.c	/^static void test_check_size(abts_case *tc, void *data)$/;"	f	file:
test_child_kill	test\testoc.c	/^static void test_child_kill(abts_case *tc, void *data)$/;"	f	file:
test_cleanups	test\testpools.c	/^static void test_cleanups(abts_case *tc, void *data)$/;"	f	file:
test_closedir	test\testdir.c	/^static void test_closedir(abts_case *tc, void *data)$/;"	f	file:
test_cond	test\testlock.c	/^static void test_cond(abts_case *tc, void *data)$/;"	f	file:
test_create_bind_listen	test\testsock.c	/^static void test_create_bind_listen(abts_case *tc, void *data)$/;"	f	file:
test_create_proc	test\testproc.c	/^static void test_create_proc(abts_case *tc, void *data)$/;"	f	file:
test_ctime	test\testtime.c	/^static void test_ctime(abts_case *tc, void *data)$/;"	f	file:
test_dec32	test\testatomic.c	/^static void test_dec32(abts_case *tc, void *data)$/;"	f	file:
test_delenv	test\testenv.c	/^static void test_delenv(abts_case *tc, void *data)$/;"	f	file:
test_dso_sym	test\testdso.c	/^static void test_dso_sym(abts_case *tc, void *data)$/;"	f	file:
test_dso_sym_library	test\testdso.c	/^static void test_dso_sym_library(abts_case *tc, void *data)$/;"	f	file:
test_dso_sym_return_value	test\testdso.c	/^static void test_dso_sym_return_value(abts_case *tc, void *data)$/;"	f	file:
test_dso_sym_return_value_library	test\testdso.c	/^static void test_dso_sym_return_value_library(abts_case *tc, void *data)$/;"	f	file:
test_dup2	test\testdup.c	/^static void test_dup2(abts_case *tc, void *data)$/;"	f	file:
test_dup2_readwrite	test\testdup.c	/^static void test_dup2_readwrite(abts_case *tc, void *data)$/;"	f	file:
test_emptyenv	test\testenv.c	/^static void test_emptyenv(abts_case *tc, void *data)$/;"	f	file:
test_exclusive	test\testglobalmutex.c	/^static void test_exclusive(abts_case *tc, void *data)$/;"	f	file:
test_exclusive	test\testprocmutex.c	/^static void test_exclusive(abts_case *tc, const char *lockname, $/;"	f	file:
test_exp_get_gmt	test\testtime.c	/^static void test_exp_get_gmt(abts_case *tc, void *data)$/;"	f	file:
test_exp_get_lt	test\testtime.c	/^static void test_exp_get_lt(abts_case *tc, void *data)$/;"	f	file:
test_exp_lt	test\testtime.c	/^static void test_exp_lt(abts_case *tc, void *data)$/;"	f	file:
test_exp_tz	test\testtime.c	/^static void test_exp_tz(abts_case *tc, void *data)$/;"	f	file:
test_fail_read_flush	test\testfile.c	/^static void test_fail_read_flush(abts_case *tc, void *data)$/;"	f	file:
test_fail_write_flush	test\testfile.c	/^static void test_fail_write_flush(abts_case *tc, void *data)$/;"	f	file:
test_file_close	test\testmmap.c	/^static void test_file_close(abts_case *tc, void *data)$/;"	f	file:
test_file_dup	test\testdup.c	/^static void test_file_dup(abts_case *tc, void *data)$/;"	f	file:
test_file_open	test\testmmap.c	/^static void test_file_open(abts_case *tc, void *data)$/;"	f	file:
test_file_readwrite	test\testdup.c	/^static void test_file_readwrite(abts_case *tc, void *data)$/;"	f	file:
test_file_redir	test\testproc.c	/^static void test_file_redir(abts_case *tc, void *data)$/;"	f	file:
test_file_remove	test\testfile.c	/^static void test_file_remove(abts_case *tc, void *data)$/;"	f	file:
test_fileclose	test\testfile.c	/^static void test_fileclose(abts_case *tc, void *data)$/;"	f	file:
test_filename	test\testfile.c	/^static void test_filename(abts_case *tc, void *data)$/;"	f	file:
test_fnmatch	test\testfnmatch.c	/^static void test_fnmatch(abts_case *tc, void *data)$/;"	f	file:
test_fnmatch_test	test\testfnmatch.c	/^static void test_fnmatch_test(abts_case *tc, void *data)$/;"	f	file:
test_format	test\testlfs.c	/^static void test_format(abts_case *tc, void *data)$/;"	f	file:
test_func	test\abts.h	/^typedef void (*test_func)(abts_case *tc, void *data);$/;"	t
test_get_addr	test\testsock.c	/^static void test_get_addr(abts_case *tc, void *data)$/;"	f	file:
test_get_filesize	test\testmmap.c	/^static void test_get_filesize(abts_case *tc, void *data)$/;"	f	file:
test_getc	test\testfile.c	/^static void test_getc(abts_case *tc, void *data)$/;"	f	file:
test_getenv	test\testenv.c	/^static void test_getenv(abts_case *tc, void *data)$/;"	f	file:
test_gets	test\testfile.c	/^static void test_gets(abts_case *tc, void *data)$/;"	f	file:
test_gets_buffered	test\testfile.c	/^static void test_gets_buffered(abts_case *tc, void *data)$/;"	f	file:
test_glob	test\testfnmatch.c	/^static void test_glob(abts_case *tc, void *data)$/;"	f	file:
test_glob_currdir	test\testfnmatch.c	/^static void test_glob_currdir(abts_case *tc, void *data)$/;"	f	file:
test_gmtstr	test\testtime.c	/^static void test_gmtstr(abts_case *tc, void *data)$/;"	f	file:
test_imp_gmt	test\testtime.c	/^static void test_imp_gmt(abts_case *tc, void *data)$/;"	f	file:
test_inc32	test\testatomic.c	/^static void test_inc32(abts_case *tc, void *data)$/;"	f	file:
test_inc_neg1	test\testatomic.c	/^static void test_inc_neg1(abts_case *tc, void *data)$/;"	f	file:
test_info_get	test\testfileinfo.c	/^static void test_info_get(abts_case *tc, void *data)$/;"	f	file:
test_init	test\testatomic.c	/^static void test_init(abts_case *tc, void *data)$/;"	f	file:
test_interesting_subnets	test\testipsub.c	/^static void test_interesting_subnets(abts_case *tc, void *data)$/;"	f	file:
test_ints	test\testvsn.c	/^static void test_ints(abts_case *tc, void *data)$/;"	f	file:
test_load_library	test\testdso.c	/^static void test_load_library(abts_case *tc, void *data)$/;"	f	file:
test_load_module	test\testdso.c	/^static void test_load_module(abts_case *tc, void *data)$/;"	f	file:
test_load_notthere	test\testdso.c	/^static void test_load_notthere(abts_case *tc, void *data)$/;"	f	file:
test_mech	test\testmutexscope.c	/^static void test_mech(apr_lockmech_e mech, const char *mech_name)$/;"	f	file:
test_mech_mode	test\testmutexscope.c	/^static void test_mech_mode(apr_lockmech_e mech, const char *mech_name,$/;"	f	file:
test_mkdir	test\testdir.c	/^static void test_mkdir(abts_case *tc, void *data)$/;"	f	file:
test_mkdir_recurs	test\testdir.c	/^static void test_mkdir_recurs(abts_case *tc, void *data)$/;"	f	file:
test_mkdir_twice	test\testdir.c	/^static void test_mkdir_twice(abts_case *tc, void *data)$/;"	f	file:
test_mktemp	test\testtemp.c	/^static void test_mktemp(abts_case *tc, void *data)$/;"	f	file:
test_mmap	test\testlfs.c	/^static void test_mmap(abts_case *tc, void *data)$/;"	f	file:
test_mmap_contents	test\testmmap.c	/^static void test_mmap_contents(abts_case *tc, void *data)$/;"	f	file:
test_mmap_create	test\testmmap.c	/^static void test_mmap_create(abts_case *tc, void *data)$/;"	f	file:
test_mmap_delete	test\testmmap.c	/^static void test_mmap_delete(abts_case *tc, void *data)$/;"	f	file:
test_mmap_offset	test\testmmap.c	/^static void test_mmap_offset(abts_case *tc, void *data)$/;"	f	file:
test_mod_neg	test\testfile.c	/^static void test_mod_neg(abts_case *tc, void *data)$/;"	f	file:
test_mode_e	test\testmutexscope.c	/^typedef enum {TEST_GLOBAL, TEST_PROC} test_mode_e;$/;"	t	typeref:enum:__anon38	file:
test_mtime_set	test\testfileinfo.c	/^static void test_mtime_set(abts_case *tc, void *data)$/;"	f	file:
test_named	test\testshm.c	/^static void test_named(abts_case *tc, void *data)$/;"	f	file:
test_named_remove	test\testshm.c	/^static void test_named_remove(abts_case *tc, void *data)$/;"	f	file:
test_nolfs	test\testlfs.c	/^static void test_nolfs(abts_case *tc, void *data)$/;"	f	file:
test_notancestor	test\testpools.c	/^static void test_notancestor(abts_case *tc, void *data)$/;"	f	file:
test_now	test\testtime.c	/^static void test_now(abts_case *tc, void *data)$/;"	f	file:
test_nrange	test\internal\testucs.c	/^void test_nrange(struct testval *p)$/;"	f
test_open	test\testlfs.c	/^static void test_open(abts_case *tc, void *data)$/;"	f	file:
test_open_excl	test\testfile.c	/^static void test_open_excl(abts_case *tc, void *data)$/;"	f	file:
test_open_noreadwrite	test\testfile.c	/^static void test_open_noreadwrite(abts_case *tc, void *data)$/;"	f	file:
test_open_read	test\testfile.c	/^static void test_open_read(abts_case *tc, void *data)$/;"	f	file:
test_open_readwrite	test\testfile.c	/^static void test_open_readwrite(abts_case *tc, void *data)$/;"	f	file:
test_open_write	test\testfile.c	/^static void test_open_write(abts_case *tc, void *data)$/;"	f	file:
test_open_writecreate	test\testfile.c	/^static void test_open_writecreate(abts_case *tc, void *data)$/;"	f	file:
test_opendir	test\testdir.c	/^static void test_opendir(abts_case *tc, void *data)$/;"	f	file:
test_opendir_notthere	test\testdir.c	/^static void test_opendir_notthere(abts_case *tc, void *data)$/;"	f	file:
test_pipe_writefull	test\testpipe.c	/^static void test_pipe_writefull(abts_case *tc, void *data)$/;"	f	file:
test_print_addr	test\testsock.c	/^static void test_print_addr(abts_case *tc, void *data)$/;"	f	file:
test_proc_wait	test\testproc.c	/^static void test_proc_wait(abts_case *tc, void *data)$/;"	f	file:
test_puts	test\testfile.c	/^static void test_puts(abts_case *tc, void *data)$/;"	f	file:
test_ranges	test\internal\testucs.c	/^void test_ranges()$/;"	f
test_read	test\testfile.c	/^static void test_read(abts_case *tc, void *data)$/;"	f	file:
test_read32	test\testatomic.c	/^static void test_read32(abts_case *tc, void *data)$/;"	f	file:
test_readdir	test\testlfs.c	/^static void test_readdir(abts_case *tc, void *data)$/;"	f	file:
test_readzero	test\testfile.c	/^static void test_readzero(abts_case *tc, void *data)$/;"	f	file:
test_recv	test\testsock.c	/^static void test_recv(abts_case *tc, void *data)$/;"	f	file:
test_remove	test\testdir.c	/^static void test_remove(abts_case *tc, void *data)$/;"	f	file:
test_remove_notthere	test\testdir.c	/^static void test_remove_notthere(abts_case *tc, void *data)$/;"	f	file:
test_removeall	test\testdir.c	/^static void test_removeall(abts_case *tc, void *data)$/;"	f	file:
test_removeall_fail	test\testdir.c	/^static void test_removeall_fail(abts_case *tc, void *data)$/;"	f	file:
test_reopen	test\testlfs.c	/^static void test_reopen(abts_case *tc, void *data)$/;"	f	file:
test_rewind	test\testdir.c	/^static void test_rewind(abts_case *tc, void *data)$/;"	f	file:
test_rfcstr	test\testtime.c	/^static void test_rfcstr(abts_case *tc, void *data)$/;"	f	file:
test_rmkdir_nocwd	test\testdir.c	/^static void test_rmkdir_nocwd(abts_case *tc, void *data)$/;"	f	file:
test_safe_name	file_io\win32\filestat.c	/^static apr_status_t test_safe_name(const char *name)$/;"	f	file:
test_seek	test\testfile.c	/^static void test_seek(abts_case *tc, void *data)$/;"	f	file:
test_seek	test\testlfs.c	/^static void test_seek(abts_case *tc, void *data)$/;"	f	file:
test_send	test\testsock.c	/^static void test_send(abts_case *tc, void *data)$/;"	f	file:
test_serv_by_name	test\testsock.c	/^static void test_serv_by_name(abts_case *tc, void *data)$/;"	f	file:
test_set32	test\testatomic.c	/^static void test_set32(abts_case *tc, void *data)$/;"	f	file:
test_set_add_inc_sub	test\testatomic.c	/^static void test_set_add_inc_sub(abts_case *tc, void *data)$/;"	f	file:
test_setenv	test\testenv.c	/^static void test_setenv(abts_case *tc, void *data)$/;"	f	file:
test_shm_allocate	test\testshm.c	/^static void test_shm_allocate(abts_case *tc, void *data)$/;"	f	file:
test_singleton_subnets	test\testipsub.c	/^static void test_singleton_subnets(abts_case *tc, void *data)$/;"	f	file:
test_stat	test\testfileinfo.c	/^static void test_stat(abts_case *tc, void *data)$/;"	f	file:
test_stat	test\testlfs.c	/^static void test_stat(abts_case *tc, void *data)$/;"	f	file:
test_stat_eq_finfo	test\testfileinfo.c	/^static void test_stat_eq_finfo(abts_case *tc, void *data)$/;"	f	file:
test_strftime	test\testtime.c	/^static void test_strftime(abts_case *tc, void *data)$/;"	f	file:
test_strftimeoffset	test\testtime.c	/^static void test_strftimeoffset(abts_case *tc, void *data)$/;"	f	file:
test_strftimesmall	test\testtime.c	/^static void test_strftimesmall(abts_case *tc, void *data)$/;"	f	file:
test_strings	test\testvsn.c	/^static void test_strings(abts_case *tc, void *data)$/;"	f	file:
test_strtok	test\teststr.c	/^static void test_strtok(abts_case *tc, void *data)$/;"	f	file:
test_temp_dir	test\testtemp.c	/^static void test_temp_dir(abts_case *tc, void *data)$/;"	f	file:
test_tempdir	file_io\unix\tempdir.c	/^static int test_tempdir(const char *temp_dir, apr_pool_t *p)$/;"	f	file:
test_thread_mutex	test\testlock.c	/^static void test_thread_mutex(abts_case *tc, void *data)$/;"	f	file:
test_thread_mutex	test\testlockperf.c	/^int test_thread_mutex(int num_threads)$/;"	f
test_thread_mutex_nested	test\testlockperf.c	/^int test_thread_mutex_nested(int num_threads)$/;"	f
test_thread_rwlock	test\testlock.c	/^static void test_thread_rwlock(abts_case *tc, void *data)$/;"	f	file:
test_thread_rwlock	test\testlockperf.c	/^int test_thread_rwlock(int num_threads)$/;"	f
test_timeout	test\testsock.c	/^static void test_timeout(abts_case *tc, void *data)$/;"	f	file:
test_timeoutcond	test\testlock.c	/^static void test_timeoutcond(abts_case *tc, void *data)$/;"	f	file:
test_truncate	test\testfile.c	/^static void test_truncate(abts_case *tc, void *data)$/;"	f	file:
test_uncleared_errno	test\testdir.c	/^static void test_uncleared_errno(abts_case *tc, void *data)$/;"	f	file:
test_ungetc	test\testfile.c	/^static void test_ungetc(abts_case *tc, void *data)$/;"	f	file:
test_unload_library	test\testdso.c	/^static void test_unload_library(abts_case *tc, void *data)$/;"	f	file:
test_unload_module	test\testdso.c	/^static void test_unload_module(abts_case *tc, void *data)$/;"	f	file:
test_userdata_get	test\testfile.c	/^static void test_userdata_get(abts_case *tc, void *data)$/;"	f	file:
test_userdata_getnokey	test\testfile.c	/^static void test_userdata_getnokey(abts_case *tc, void *data)$/;"	f	file:
test_userdata_set	test\testfile.c	/^static void test_userdata_set(abts_case *tc, void *data)$/;"	f	file:
test_withlock	test\testflock.c	/^static void test_withlock(abts_case *tc, void *data)$/;"	f	file:
test_withoutlock	test\testflock.c	/^static void test_withoutlock(abts_case *tc, void *data)$/;"	f	file:
test_wrange	test\internal\testucs.c	/^void test_wrange(struct testval *p)$/;"	f
test_wrap_zero	test\testatomic.c	/^static void test_wrap_zero(abts_case *tc, void *data)$/;"	f	file:
test_write	test\testfile.c	/^static void test_write(abts_case *tc, void *data)$/;"	f	file:
test_write	test\testlfs.c	/^static void test_write(abts_case *tc, void *data)$/;"	f	file:
test_writev	test\testfile.c	/^static void test_writev(abts_case *tc, void *data)$/;"	f	file:
test_writev_buffered	test\testfile.c	/^static void test_writev_buffered(abts_case *tc, void *data)$/;"	f	file:
test_writev_buffered_seek	test\testfile.c	/^static void test_writev_buffered_seek(abts_case *tc, void *data)$/;"	f	file:
test_writev_full	test\testfile.c	/^static void test_writev_full(abts_case *tc, void *data)$/;"	f	file:
test_xchg32	test\testatomic.c	/^static void test_xchg32(abts_case *tc, void *data)$/;"	f	file:
test_xchgptr	test\testatomic.c	/^static void test_xchgptr(abts_case *tc, void *data)$/;"	f	file:
test_xthread	test\testfile.c	/^static void test_xthread(abts_case *tc, void *data)$/;"	f	file:
testatomic	test\testatomic.c	/^abts_suite *testatomic(abts_suite *suite)$/;"	f
testcond	test\testcond.c	/^abts_suite *testcond(abts_suite *suite)$/;"	f
testdata	test\testud.c	/^static char *testdata;$/;"	v	file:
testdir	test\testdir.c	/^abts_suite *testdir(abts_suite *suite)$/;"	f
testdso	test\testdso.c	/^abts_suite *testdso(abts_suite *suite)$/;"	f
testdup	test\testdup.c	/^abts_suite *testdup(abts_suite *suite)$/;"	f
testenv	test\testenv.c	/^abts_suite *testenv(abts_suite *suite)$/;"	f
testfile	test\testfile.c	/^abts_suite *testfile(abts_suite *suite)$/;"	f
testfilecopy	test\testfilecopy.c	/^abts_suite *testfilecopy(abts_suite *suite)$/;"	f
testfileinfo	test\testfileinfo.c	/^abts_suite *testfileinfo(abts_suite *suite)$/;"	f
testflock	test\testflock.c	/^abts_suite *testflock(abts_suite *suite)$/;"	f
testfmt	test\testfmt.c	/^abts_suite *testfmt(abts_suite *suite)$/;"	f
testfnmatch	test\testfnmatch.c	/^abts_suite *testfnmatch(abts_suite *suite)$/;"	f
testgetopt	test\testargs.c	/^abts_suite *testgetopt(abts_suite *suite)$/;"	f
testglobalmutex	test\testglobalmutex.c	/^abts_suite *testglobalmutex(abts_suite *suite)$/;"	f
testhash	test\testhash.c	/^abts_suite *testhash(abts_suite *suite)$/;"	f
testipsub	test\testipsub.c	/^abts_suite *testipsub(abts_suite *suite)$/;"	f
testlfs	test\testlfs.c	/^abts_suite *testlfs(abts_suite *suite)$/;"	f
testlist	test\abts.c	/^const char **testlist = NULL;$/;"	v
testlist	test\abts_tests.h	/^const struct testlist {$/;"	s
testlist::func	test\abts_tests.h	/^    abts_suite *(*func)(abts_suite *suite);$/;"	m	struct:testlist
testlock	test\testlock.c	/^abts_suite *testlock(abts_suite *suite)$/;"	f
testmmap	test\testmmap.c	/^abts_suite *testmmap(abts_suite *suite)$/;"	f
testnames	test\testnames.c	/^abts_suite *testnames(abts_suite *suite)$/;"	f
testoc	test\testoc.c	/^abts_suite *testoc(abts_suite *suite)$/;"	f
testpath	test\testpath.c	/^abts_suite *testpath(abts_suite *suite)$/;"	f
testpipe	test\testpipe.c	/^abts_suite *testpipe(abts_suite *suite)$/;"	f
testpoll	test\testpoll.c	/^abts_suite *testpoll(abts_suite *suite)$/;"	f
testpool	test\testpools.c	/^abts_suite *testpool(abts_suite *suite)$/;"	f
testproc	test\testproc.c	/^abts_suite *testproc(abts_suite *suite)$/;"	f
testprocmutex	test\testprocmutex.c	/^abts_suite *testprocmutex(abts_suite *suite)$/;"	f
testrand	test\testrand.c	/^abts_suite *testrand(abts_suite *suite)$/;"	f
testshm	test\testshm.c	/^abts_suite *testshm(abts_suite *suite)$/;"	f
testsleep	test\testsleep.c	/^abts_suite *testsleep(abts_suite *suite)$/;"	f
testsock	test\testsock.c	/^abts_suite *testsock(abts_suite *suite)$/;"	f
testsockets	test\testsockets.c	/^abts_suite *testsockets(abts_suite *suite)$/;"	f
testsockopt	test\testsockopt.c	/^abts_suite *testsockopt(abts_suite *suite)$/;"	f
teststr	test\teststr.c	/^abts_suite *teststr(abts_suite *suite)$/;"	f
teststrnatcmp	test\teststrnatcmp.c	/^abts_suite *teststrnatcmp(abts_suite *suite)$/;"	f
testtable	test\testtable.c	/^abts_suite *testtable(abts_suite *suite)$/;"	f
testtemp	test\testtemp.c	/^abts_suite *testtemp(abts_suite *suite)$/;"	f
testthread	test\testthread.c	/^abts_suite *testthread(abts_suite *suite)$/;"	f
testtime	test\testtime.c	/^abts_suite *testtime(abts_suite *suite)$/;"	f
testud	test\testud.c	/^abts_suite *testud(abts_suite *suite)$/;"	f
testuser	test\testuser.c	/^abts_suite *testuser(abts_suite *suite)$/;"	f
testval	test\internal\testucs.c	/^struct testval {$/;"	s	file:
testval::n	test\internal\testucs.c	/^    unsigned char n[8];$/;"	m	struct:testval	file:
testval::nl	test\internal\testucs.c	/^    int nl;$/;"	m	struct:testval	file:
testval::w	test\internal\testucs.c	/^    wchar_t w[4];$/;"	m	struct:testval	file:
testval::wl	test\internal\testucs.c	/^    int wl;$/;"	m	struct:testval	file:
testvsn	test\testvsn.c	/^abts_suite *testvsn(abts_suite *suite)$/;"	f
thd	include\apr_thread_proc.h	/^APR_DECLARE(apr_status_t) apr_thread_detach(apr_thread_t *thd);$/;"	v
thedir	include\apr_file_info.h	/^APR_DECLARE(apr_status_t) apr_dir_close(apr_dir_t *thedir);$/;"	v
thedir	include\apr_file_info.h	/^APR_DECLARE(apr_status_t) apr_dir_rewind(apr_dir_t *thedir);$/;"	v
thefile	include\apr_file_io.h	/^APR_DECLARE(apr_size_t) apr_file_buffer_size_get(apr_file_t *thefile);$/;"	v
thefile	include\apr_file_io.h	/^APR_DECLARE(apr_status_t) apr_file_datasync(apr_file_t *thefile);$/;"	v
thefile	include\apr_file_io.h	/^APR_DECLARE(apr_status_t) apr_file_flush(apr_file_t *thefile);$/;"	v
thefile	include\apr_file_io.h	/^APR_DECLARE(apr_status_t) apr_file_sync(apr_file_t *thefile);$/;"	v
thefile	include\apr_file_io.h	/^APR_DECLARE(apr_status_t) apr_file_unlock(apr_file_t *thefile);$/;"	v
thefile	test\testmmap.c	/^static apr_file_t *thefile = NULL;$/;"	v	file:
themmap	test\testmmap.c	/^static apr_mmap_t *themmap = NULL;$/;"	v	file:
thesocket	include\apr_network_io.h	/^APR_DECLARE(apr_status_t) apr_socket_close(apr_socket_t *thesocket);$/;"	v
this	tables\apr_hash.c	/^    apr_hash_entry_t   *this, *next;$/;"	m	struct:apr_hash_index_t	file:
thisfinfo	test\testmmap.c	/^static apr_finfo_t thisfinfo;$/;"	v	file:
thisfsize	test\testmmap.c	/^static apr_size_t thisfsize;$/;"	v	file:
thlock	include\arch\netware\apr_arch_file_io.h	/^    struct apr_thread_mutex_t *thlock;$/;"	m	struct:apr_file_t	typeref:struct:apr_file_t::apr_thread_mutex_t
thlock	include\arch\unix\apr_arch_file_io.h	/^    struct apr_thread_mutex_t *thlock;$/;"	m	struct:apr_file_t	typeref:struct:apr_file_t::apr_thread_mutex_t
thread	include\apr_thread_proc.h	/^APR_POOL_DECLARE_ACCESSOR(thread);$/;"	v
thread_cond	include\apr_thread_cond.h	/^APR_POOL_DECLARE_ACCESSOR(thread_cond);$/;"	v
thread_cond_cleanup	locks\beos\thread_cond.c	/^static apr_status_t thread_cond_cleanup(void *data)$/;"	f	file:
thread_cond_cleanup	locks\netware\thread_cond.c	/^static apr_status_t thread_cond_cleanup(void *data)$/;"	f	file:
thread_cond_cleanup	locks\unix\thread_cond.c	/^static apr_status_t thread_cond_cleanup(void *data)$/;"	f	file:
thread_cond_cleanup	locks\win32\thread_cond.c	/^static apr_status_t thread_cond_cleanup(void *data)$/;"	f	file:
thread_cond_consumer	test\testlock.c	/^static void *APR_THREAD_FUNC thread_cond_consumer(apr_thread_t *thd, void *data)$/;"	f	file:
thread_cond_producer	test\testlock.c	/^static void *APR_THREAD_FUNC thread_cond_producer(apr_thread_t *thd, void *data)$/;"	f	file:
thread_count	threadproc\netware\thread.c	/^static int thread_count = 0;$/;"	v	file:
thread_func1	test\testthread.c	/^static void * APR_THREAD_FUNC thread_func1(apr_thread_t *thd, void *data)$/;"	f	file:
thread_func_atomic	test\testatomic.c	/^void *APR_THREAD_FUNC thread_func_atomic(apr_thread_t *thd, void *data)$/;"	f
thread_func_busyloop	test\testatomic.c	/^static void *APR_THREAD_FUNC thread_func_busyloop(apr_thread_t *thd, void *data)$/;"	f	file:
thread_func_mutex	test\testatomic.c	/^void *APR_THREAD_FUNC thread_func_mutex(apr_thread_t *thd, void *data)$/;"	f
thread_init	test\testthread.c	/^static void thread_init(abts_case *tc, void *data)$/;"	f	file:
thread_lock	test\testatomic.c	/^apr_thread_mutex_t *thread_lock;$/;"	v
thread_lock	test\testlockperf.c	/^static apr_thread_mutex_t *thread_lock;$/;"	v	file:
thread_lock	test\testthread.c	/^static apr_thread_mutex_t *thread_lock;$/;"	v	file:
thread_mutex	include\apr_portable.h	/^        apr_thread_mutex_t *thread_mutex;$/;"	m	struct:apr_os_global_mutex_t
thread_mutex	include\apr_thread_mutex.h	/^APR_POOL_DECLARE_ACCESSOR(thread_mutex);$/;"	v
thread_mutex	include\arch\unix\apr_arch_global_mutex.h	/^    apr_thread_mutex_t *thread_mutex;$/;"	m	struct:apr_global_mutex_t
thread_mutex	test\testlock.c	/^static apr_thread_mutex_t *thread_mutex;$/;"	v	file:
thread_mutex	test\testmutexscope.c	/^static apr_thread_mutex_t *thread_mutex;$/;"	v	file:
thread_mutex_cleanup	locks\netware\thread_mutex.c	/^static apr_status_t thread_mutex_cleanup(void *data)$/;"	f	file:
thread_mutex_cleanup	locks\os2\thread_mutex.c	/^static apr_status_t thread_mutex_cleanup(void *themutex)$/;"	f	file:
thread_mutex_cleanup	locks\unix\thread_mutex.c	/^static apr_status_t thread_mutex_cleanup(void *data)$/;"	f	file:
thread_mutex_cleanup	locks\win32\thread_mutex.c	/^static apr_status_t thread_mutex_cleanup(void *data)$/;"	f	file:
thread_mutex_critical_section	include\arch\win32\apr_arch_thread_mutex.h	/^    thread_mutex_critical_section,$/;"	e	enum:thread_mutex_type
thread_mutex_func	test\testlockperf.c	/^void * APR_THREAD_FUNC thread_mutex_func(apr_thread_t *thd, void *data)$/;"	f
thread_mutex_function	test\testlock.c	/^static void *APR_THREAD_FUNC thread_mutex_function(apr_thread_t *thd, void *data)$/;"	f	file:
thread_mutex_nested_mutex	include\arch\win32\apr_arch_thread_mutex.h	/^    thread_mutex_nested_mutex$/;"	e	enum:thread_mutex_type
thread_mutex_type	include\arch\win32\apr_arch_thread_mutex.h	/^typedef enum thread_mutex_type {$/;"	g
thread_mutex_type	include\arch\win32\apr_arch_thread_mutex.h	/^} thread_mutex_type;$/;"	t	typeref:enum:thread_mutex_type
thread_mutex_unnested_event	include\arch\win32\apr_arch_thread_mutex.h	/^    thread_mutex_unnested_event,$/;"	e	enum:thread_mutex_type
thread_name	include\arch\netware\apr_arch_threadproc.h	/^    char *thread_name;$/;"	m	struct:apr_thread_t
thread_name	include\arch\netware\apr_arch_threadproc.h	/^    char *thread_name;$/;"	m	struct:apr_threadattr_t
thread_once_cleanup	threadproc\beos\thread.c	/^static apr_status_t thread_once_cleanup(void *vcontrol)$/;"	f	file:
thread_once_cleanup	threadproc\os2\thread.c	/^static apr_status_t thread_once_cleanup(void *vcontrol)$/;"	f	file:
thread_routine	test\testcond.c	/^static void *APR_THREAD_FUNC thread_routine(apr_thread_t *thd, void *data)$/;"	f	file:
thread_rwlock	include\apr_thread_rwlock.h	/^APR_POOL_DECLARE_ACCESSOR(thread_rwlock);$/;"	v
thread_rwlock	test\testlockperf.c	/^static apr_thread_rwlock_t *thread_rwlock;$/;"	v	file:
thread_rwlock_cleanup	locks\netware\thread_rwlock.c	/^static apr_status_t thread_rwlock_cleanup(void *data)$/;"	f	file:
thread_rwlock_cleanup	locks\os2\thread_rwlock.c	/^static apr_status_t thread_rwlock_cleanup(void *therwlock)$/;"	f	file:
thread_rwlock_cleanup	locks\unix\thread_rwlock.c	/^static apr_status_t thread_rwlock_cleanup(void *data)$/;"	f	file:
thread_rwlock_cleanup	locks\win32\thread_rwlock.c	/^static apr_status_t thread_rwlock_cleanup(void *data)$/;"	f	file:
thread_rwlock_func	test\testlock.c	/^static void *APR_THREAD_FUNC thread_rwlock_func(apr_thread_t *thd, void *data)$/;"	f	file:
thread_rwlock_func	test\testlockperf.c	/^void * APR_THREAD_FUNC thread_rwlock_func(apr_thread_t *thd, void *data)$/;"	f
threadattr_cleanup	threadproc\unix\thread.c	/^static apr_status_t threadattr_cleanup(void *data)$/;"	f	file:
threadproc_global_cleanup	threadproc\win32\proc.c	/^static apr_status_t threadproc_global_cleanup(void *ignored)$/;"	f	file:
threads_not_impl	test\testcond.c	/^static void threads_not_impl(abts_case *tc, void *data)$/;"	f	file:
threads_not_impl	test\testlock.c	/^static void threads_not_impl(abts_case *tc, void *data)$/;"	f	file:
threads_not_impl	test\testthread.c	/^static void threads_not_impl(abts_case *tc, void *data)$/;"	f	file:
tid	include\arch\os2\apr_arch_threadproc.h	/^    unsigned long tid;$/;"	m	struct:apr_thread_t
timeout	include\arch\netware\apr_arch_file_io.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_file_t
timeout	include\arch\os2\apr_arch_file_io.h	/^    int timeout;$/;"	m	struct:apr_file_t
timeout	include\arch\os2\apr_arch_networkio.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_socket_t
timeout	include\arch\unix\apr_arch_file_io.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_file_t
timeout	include\arch\unix\apr_arch_networkio.h	/^    apr_interval_time_t timeout; $/;"	m	struct:apr_socket_t
timeout	include\arch\win32\apr_arch_file_io.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_file_t
timeout	include\arch\win32\apr_arch_networkio.h	/^    apr_interval_time_t timeout;$/;"	m	struct:apr_socket_t
timeout_cond	test\testlock.c	/^static apr_thread_cond_t *timeout_cond;$/;"	v	file:
timeout_ms	include\arch\win32\apr_arch_networkio.h	/^    int                 timeout_ms; \/* MUST MATCH if timeout > 0 *\/$/;"	m	struct:apr_socket_t
timeout_mutex	test\testlock.c	/^static apr_thread_mutex_t *timeout_mutex;$/;"	v	file:
timeout_pollcb	test\testpoll.c	/^static void timeout_pollcb(abts_case *tc, void *data)$/;"	f	file:
timeout_pollin_pollcb	test\testpoll.c	/^static void timeout_pollin_pollcb(abts_case *tc, void *data)$/;"	f	file:
tls_apr_thread	threadproc\win32\thread.c	/^DWORD tls_apr_thread = 0;$/;"	v
tm_gmtoff	include\apr_time.h	/^    apr_int32_t tm_gmtoff;$/;"	m	struct:apr_time_exp_t
tm_hour	include\apr_time.h	/^    apr_int32_t tm_hour;$/;"	m	struct:apr_time_exp_t
tm_isdst	include\apr_time.h	/^    apr_int32_t tm_isdst;$/;"	m	struct:apr_time_exp_t
tm_mday	include\apr_time.h	/^    apr_int32_t tm_mday;$/;"	m	struct:apr_time_exp_t
tm_min	include\apr_time.h	/^    apr_int32_t tm_min;$/;"	m	struct:apr_time_exp_t
tm_mon	include\apr_time.h	/^    apr_int32_t tm_mon;$/;"	m	struct:apr_time_exp_t
tm_sec	include\apr_time.h	/^    apr_int32_t tm_sec;$/;"	m	struct:apr_time_exp_t
tm_usec	include\apr_time.h	/^    apr_int32_t tm_usec;$/;"	m	struct:apr_time_exp_t
tm_wday	include\apr_time.h	/^    apr_int32_t tm_wday;$/;"	m	struct:apr_time_exp_t
tm_yday	include\apr_time.h	/^    apr_int32_t tm_yday;$/;"	m	struct:apr_time_exp_t
tm_year	include\apr_time.h	/^    apr_int32_t tm_year;$/;"	m	struct:apr_time_exp_t
tmp_dirs	build\aplibtool.c	/^    char *tmp_dirs[1024];$/;"	m	struct:__anon1	file:
tmp_dirs	build\jlibtool.c	/^    count_chars *tmp_dirs;$/;"	m	struct:__anon6	file:
tobrowsesources	build\cvtdsp.pl	/^sub tobrowsesources { $/;"	s
todebugpools	build\cvtdsp.pl	/^sub todebugpools { $/;"	s
tool_mode_t	build\jlibtool.c	/^enum tool_mode_t {$/;"	g	file:
toolbox_fnptr_t	test\testcond.c	/^struct toolbox_fnptr_t {$/;"	s	file:
toolbox_fnptr_t	test\testcond.c	/^typedef struct toolbox_fnptr_t toolbox_fnptr_t;$/;"	t	typeref:struct:toolbox_fnptr_t	file:
toolbox_fnptr_t::func	test\testcond.c	/^    void (*func)(toolbox_t *box);$/;"	m	struct:toolbox_fnptr_t	file:
toolbox_t	test\testcond.c	/^struct toolbox_t {$/;"	s	file:
toolbox_t	test\testcond.c	/^typedef struct toolbox_t toolbox_t;$/;"	t	typeref:struct:toolbox_t	file:
toolbox_t::cond	test\testcond.c	/^    apr_thread_cond_t *cond;$/;"	m	struct:toolbox_t	file:
toolbox_t::data	test\testcond.c	/^    void *data;$/;"	m	struct:toolbox_t	file:
toolbox_t::func	test\testcond.c	/^    void (*func)(toolbox_t *box);$/;"	m	struct:toolbox_t	file:
toolbox_t::mutex	test\testcond.c	/^    apr_thread_mutex_t *mutex;$/;"	m	struct:toolbox_t	file:
toolbox_t::tc	test\testcond.c	/^    abts_case *tc;$/;"	m	struct:toolbox_t	file:
totxt	build\lineends.pl	/^sub totxt {$/;"	s
tovc2005	build\cvtdsp.pl	/^sub tovc2005 { $/;"	s
tovc5	build\cvtdsp.pl	/^sub tovc5 { $/;"	s
tovc6	build\cvtdsp.pl	/^sub tovc6 { $/;"	s
tovc64	build\cvtdsp.pl	/^sub tovc64 { $/;"	s
tow3	build\cvtdsp.pl	/^sub tow3 { $/;"	s
tow4	build\cvtdsp.pl	/^sub tow4 { $/;"	s
trailers	include\apr_network_io.h	/^    struct iovec* trailers;$/;"	m	struct:apr_hdtr_t	typeref:struct:apr_hdtr_t::iovec
trigger_pollcb	test\testpoll.c	/^static void trigger_pollcb(abts_case *tc, void *data)$/;"	f	file:
trigger_pollcb_cb	test\testpoll.c	/^static apr_status_t trigger_pollcb_cb(void* baton, apr_pollfd_t *descriptor)$/;"	f	file:
true	build\aplibtool.c	26;"	d	file:
truncate_dll_name	build\aplibtool.c	/^char *truncate_dll_name(char *path)$/;"	f
truncate_dll_name	build\jlibtool.c	/^char *truncate_dll_name(char *path)$/;"	f
tryacquire	include\arch\unix\apr_arch_proc_mutex.h	/^    apr_status_t (*tryacquire)(apr_proc_mutex_t *);$/;"	m	struct:apr_proc_mutex_unix_lock_methods_t
type	include\apr_portable.h	/^    int type;               \/**< always required (SOCK_STREAM, SOCK_DGRAM, etc.) *\/$/;"	m	struct:apr_os_sock_info_t
type	include\arch\os2\apr_arch_networkio.h	/^    int type;$/;"	m	struct:apr_socket_t
type	include\arch\unix\apr_arch_networkio.h	/^    int type;$/;"	m	struct:apr_socket_t
type	include\arch\win32\apr_arch_networkio.h	/^    int                 type; \/* SOCK_STREAM, SOCK_DGRAM *\/$/;"	m	struct:apr_socket_t
type	include\arch\win32\apr_arch_thread_mutex.h	/^    thread_mutex_type type;$/;"	m	struct:apr_thread_mutex_t
type_DYNAMIC_LIB	build\jlibtool.c	/^    type_DYNAMIC_LIB,$/;"	e	enum:lib_type	file:
type_MODULE_LIB	build\jlibtool.c	/^    type_MODULE_LIB,$/;"	e	enum:lib_type	file:
type_OBJECT	build\jlibtool.c	/^    type_OBJECT,$/;"	e	enum:lib_type	file:
type_STATIC_LIB	build\jlibtool.c	/^    type_STATIC_LIB,$/;"	e	enum:lib_type	file:
type_UNKNOWN	build\jlibtool.c	/^    type_UNKNOWN,$/;"	e	enum:lib_type	file:
udp6_socket	test\testsockets.c	/^static void udp6_socket(abts_case *tc, void *data)$/;"	f	file:
udp_socket	test\testsockets.c	/^static void udp_socket(abts_case *tc, void *data)$/;"	f	file:
uid	include\arch\unix\apr_arch_threadproc.h	/^    apr_uid_t   uid;$/;"	m	struct:apr_procattr_t
uid_current	test\testuser.c	/^static void uid_current(abts_case *tc, void *data)$/;"	f	file:
uid_t	include\apr.h	/^typedef  int         uid_t;$/;"	t
uint64_t_fmt	test\testfmt.c	/^static void uint64_t_fmt(abts_case *tc, void *data)$/;"	f	file:
uint64_t_hex_fmt	test\testfmt.c	/^static void uint64_t_hex_fmt(abts_case *tc, void *data)$/;"	f	file:
undef	include\arch\unix\apr_arch_poll_private.h	/^    void *undef;$/;"	m	union:__anon25
undefined_flag	build\jlibtool.c	/^    const char *undefined_flag;$/;"	m	struct:__anon6	file:
ungetchar	include\arch\netware\apr_arch_file_io.h	/^    int ungetchar;    \/* Last char provided by an unget op. (-1 = no char)*\/$/;"	m	struct:apr_file_t
ungetchar	include\arch\unix\apr_arch_file_io.h	/^    int ungetchar;    \/* Last char provided by an unget op. (-1 = no char)*\/$/;"	m	struct:apr_file_t
ungetchar	include\arch\win32\apr_arch_file_io.h	/^    int ungetchar;             \/\/ Last char provided by an unget op. (-1 = no char)$/;"	m	struct:apr_file_t
unicode_to_utf8_path	file_io\win32\open.c	/^apr_status_t unicode_to_utf8_path(char* retstr, apr_size_t retlen,$/;"	f
unknown_arg	test\testargs.c	/^static void unknown_arg(void *str, const char *err, ...)$/;"	f	file:
unregister_NLM	misc\netware\libprews.c	/^int unregister_NLM(void *NLMHandle)$/;"	f
update_status	test\abts.c	/^static void update_status(void)$/;"	f	file:
usable	include\arch\unix\apr_arch_shm.h	/^    void *usable;        \/* base usable address *\/$/;"	m	struct:apr_shm_t
user	include\apr_file_info.h	/^    apr_uid_t user;$/;"	m	struct:apr_finfo_t
user_data	memory\unix\apr_pools.c	/^    apr_hash_t           *user_data;$/;"	m	struct:apr_pool_t	file:
user_token	include\arch\win32\apr_arch_threadproc.h	/^    HANDLE     user_token;$/;"	m	struct:apr_procattr_t
userdata	include\arch\os2\apr_arch_networkio.h	/^    sock_userdata_t *userdata;$/;"	m	struct:apr_socket_t
userdata	include\arch\unix\apr_arch_networkio.h	/^    sock_userdata_t *userdata;$/;"	m	struct:apr_socket_t
userdata	include\arch\win32\apr_arch_networkio.h	/^    sock_userdata_t    *userdata;$/;"	m	struct:apr_socket_t
username	test\testuser.c	/^static void username(abts_case *tc, void *data)$/;"	f	file:
users_not_impl	test\testuser.c	/^static void users_not_impl(abts_case *tc, void *data)$/;"	f	file:
usrmem	shmem\win32\shm.c	/^    void       *usrmem;$/;"	m	struct:apr_shm_t	file:
utf8_to_unicode_path	file_io\win32\open.c	/^apr_status_t utf8_to_unicode_path(apr_wchar_t* retstr, apr_size_t retlen, $/;"	f
val	include\apr_tables.h	/^    char *val;$/;"	m	struct:apr_table_entry_t
val	include\arch\unix\apr_arch_proc_mutex.h	/^    int val;$/;"	m	union:semun
val	tables\apr_hash.c	/^    const void       *val;$/;"	m	struct:apr_hash_entry_t	file:
valid	include\apr_file_info.h	/^    apr_int32_t valid;$/;"	m	struct:apr_finfo_t
validentry	include\arch\os2\apr_arch_file_io.h	/^    int validentry;$/;"	m	struct:apr_dir_t
vals	build\jlibtool.c	/^    const char **vals;$/;"	m	struct:__anon2	file:
value	include\arch\netware\apr_arch_threadproc.h	/^    unsigned long value;$/;"	m	struct:apr_thread_once_t
value	include\arch\win32\apr_arch_threadproc.h	/^    long value;$/;"	m	struct:apr_thread_once_t
value	test\testthread.c	/^static int value = 0;$/;"	v	file:
vbuff	file_io\unix\readwrite.c	/^    apr_vformatter_buff_t vbuff;$/;"	m	struct:apr_file_printf_data	file:
vbuff	file_io\win32\readwrite.c	/^    apr_vformatter_buff_t vbuff;$/;"	m	struct:apr_file_printf_data	file:
vbuff	memory\unix\apr_pools.c	/^    apr_vformatter_buff_t vbuff;$/;"	m	struct:psprintf_data	file:
verbose	test\abts.c	/^static int verbose = 0;$/;"	v	file:
verbose	test\testlockperf.c	/^static int verbose = 0;$/;"	v	file:
version_info	build\jlibtool.c	/^    const char *version_info;$/;"	m	struct:__anon6	file:
vfi	test\testfileinfo.c	/^} vfi[] = {$/;"	v	typeref:struct:view_fileinfo	file:
view_fileinfo	test\testfileinfo.c	/^static const struct view_fileinfo$/;"	s	file:
view_fileinfo::bits	test\testfileinfo.c	/^    apr_int32_t bits;$/;"	m	struct:view_fileinfo	file:
view_fileinfo::description	test\testfileinfo.c	/^    char *description;$/;"	m	struct:view_fileinfo	file:
vsnprintf	build\jlibtool.c	/^static int vsnprintf( char *str, size_t n, const char *fmt, va_list ap )$/;"	f	file:
w	include\arch\win32\apr_arch_file_io.h	/^        } w;$/;"	m	union:apr_dir_t::__anon26	typeref:struct:apr_dir_t::__anon26::__anon27
w	test\internal\testucs.c	/^    wchar_t w[4];$/;"	m	struct:testval	file:
wait_child	test\testglobalmutex.c	/^static int wait_child(abts_case *tc, apr_proc_t *proc)$/;"	f	file:
wait_child	test\testsock.c	/^static int wait_child(abts_case *tc, apr_proc_t *proc) $/;"	f	file:
wait_for_io_or_timeout	network_io\beos\sendrecv.c	/^static apr_status_t wait_for_io_or_timeout(apr_socket_t *sock, int for_read)$/;"	f	file:
waiter_t	include\arch\beos\apr_arch_thread_cond.h	/^struct waiter_t {$/;"	s
waiter_t::link	include\arch\beos\apr_arch_thread_cond.h	/^    APR_RING_ENTRY(waiter_t) link;$/;"	m	struct:waiter_t
waiter_t::sem	include\arch\beos\apr_arch_thread_cond.h	/^    sem_id sem;$/;"	m	struct:waiter_t
waiting	poll\unix\port.c	/^    volatile apr_uint32_t waiting;$/;"	m	struct:apr_pollset_private_t	file:
waitpid	threadproc\unix\procsup.c	/^int waitpid(pid_t pid, int *statusp, int options)$/;"	f
wakeup_pfd	include\arch\unix\apr_arch_poll_private.h	/^    apr_pollfd_t wakeup_pfd;$/;"	m	struct:apr_pollset_t
wakeup_pipe	include\arch\unix\apr_arch_poll_private.h	/^    apr_file_t *wakeup_pipe[2];$/;"	m	struct:apr_pollset_t
warrsztoastr	misc\win32\start.c	/^static int warrsztoastr(const char * const * *retarr,$/;"	f	file:
why_from_exit_code	threadproc\win32\proc.c	/^static apr_exit_why_e why_from_exit_code(DWORD exit) {$/;"	f	file:
widen_envvar_name	misc\win32\env.c	/^static apr_status_t widen_envvar_name (apr_wchar_t *buffer,$/;"	f	file:
win32_strftime_extra	time\win32\timestr.c	/^static apr_size_t win32_strftime_extra(char *s, size_t max, const char *format,$/;"	f	file:
wl	test\internal\testucs.c	/^    int wl;$/;"	m	struct:testval	file:
wmain	misc\win32\apr_app.c	/^int wmain(int argc, const wchar_t **wargv, const wchar_t **wenv)$/;"	f
worldid	file_io\win32\filestat.c	/^static apr_gid_t worldid = NULL;$/;"	v	file:
write_fd	include\arch\unix\apr_arch_misc.h	/^    apr_os_file_t write_fd;$/;"	m	struct:apr_other_child_rec_t
write_fd	include\arch\win32\apr_arch_misc.h	/^    apr_os_file_t write_fd;$/;"	m	struct:apr_other_child_rec_t
write_lock	include\arch\os2\apr_arch_thread_rwlock.h	/^    HMTX write_lock;$/;"	m	struct:apr_thread_rwlock_t
write_mutex	include\arch\win32\apr_arch_thread_rwlock.h	/^    HANDLE      write_mutex;$/;"	m	struct:apr_thread_rwlock_t
write_objects	build\gen-build.py	/^def write_objects(f, legal_deps, h_deps, files):$/;"	f
writep	test\testpipe.c	/^static apr_file_t *writep = NULL;$/;"	v	file:
writer	include\arch\beos\apr_arch_thread_rwlock.h	/^    thread_id writer;$/;"	m	struct:apr_thread_rwlock_t
writeset	poll\unix\select.c	/^    fd_set readset, writeset, exceptset;$/;"	m	struct:apr_pollset_private_t	file:
writev	include\arch\os2\apr_arch_os2calls.h	57;"	d
wsa_cleanup_with_handle	misc\netware\start.c	/^static int wsa_cleanup_with_handle (void *handle)$/;"	f	file:
wsa_startup_with_handle	misc\netware\start.c	/^static int wsa_startup_with_handle (WORD wVersionRequested, LPWSADATA data, void *handle)$/;"	f	file:
x	test\testlock.c	/^static int i = 0, x = 0;$/;"	v	file:
x	test\testlockperf.c	/^int i = 0, x = 0;$/;"	v
x	test\testprocmutex.c	/^static volatile int *x;$/;"	v	file:
x	test\testthread.c	/^static int x = 0;$/;"	v	file:
