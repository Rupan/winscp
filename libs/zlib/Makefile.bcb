# Set your compiler options
CC=bcc32
CFLAG=-DWIN32 -DWIN32_LEAN_AND_MEAN -q -w-ccc -w-rch -w-pia -w-aus -w-par -w-inl -w-eff -w-sus -w-dup -w-spa -w-csu -w-rvl  -c -tWC -tWM -D_stricmp=stricmp -D_strnicmp=strnicmp -O2 -ff -fp -DNE_HAVE_SSL;HAVE_OPENSSL;HAVE_EXPAT;HAVE_EXPAT_H;NE_HAVE_DAV;NE_HAVE_ZLIB;USE_GETADDRINFO;NOUSER;NOGDI;COMPILED_FROM_DSP;XML_STATIC;_RTLDLL; -D__STDC__
LIB_CFLAG=

# zlib directory
SRC_D=.

# The output directory for everything intersting
OUT_D=..\lib
# The output directory for all the temporary muck
TMP_D=tmp

CP=copy
RM=del
MKDIR=mkdir
MKLIB=tlib /P64 /C
ASM=nasm -f obj -d__omf__

######################################################
# You should not need to touch anything below this point
######################################################

# INCL_D - local library directory
# OBJ_D  - temp object file directory
OBJ_D=$(TMP_D)
INCL_D=src
INCL=$(INCL_D);

O_ZLIB=$(OUT_D)\zlib.lib

######################################################
# Don't touch anything below this point
######################################################

INC=-I$(INCL) -I.
LIB_CFLAGS=$(INC) $(CFLAG) $(LIB_CFLAG)
LIBS_DEP=$(O_ZLIB)

#############################################
HEADER=$(INCL_D)\zlib.h

ZLIBOBJS=\
    $(OBJ_D)\adler32.obj \
    $(OBJ_D)\compress.obj \
    $(OBJ_D)\crc32.obj \
    $(OBJ_D)\deflate.obj \
    $(OBJ_D)\gzclose.obj \
    $(OBJ_D)\gzlib.obj \
    $(OBJ_D)\gzread.obj \
    $(OBJ_D)\gzwrite.obj \
    $(OBJ_D)\infback.obj \
    $(OBJ_D)\inffast.obj \
    $(OBJ_D)\inflate.obj \
    $(OBJ_D)\inftrees.obj \
    $(OBJ_D)\trees.obj \
    $(OBJ_D)\uncompr.obj \
    $(OBJ_D)\zutil.obj

$(OBJ_D)\adler32.obj: $(SRC_D)/src/adler32.c
    $(CC) -o$(OBJ_D)\adler32.obj $(LIB_CFLAGS) -c $(SRC_D)/src/adler32.c
$(OBJ_D)\compress.obj: $(SRC_D)/src/compress.c
    $(CC) -o$(OBJ_D)\compress.obj $(LIB_CFLAGS) -c $(SRC_D)/src/compress.c
$(OBJ_D)\crc32.obj: $(SRC_D)/src/crc32.c
    $(CC) -o$(OBJ_D)\crc32.obj $(LIB_CFLAGS) -c $(SRC_D)/src/crc32.c
$(OBJ_D)\deflate.obj: $(SRC_D)/src/deflate.c
    $(CC) -o$(OBJ_D)\deflate.obj $(LIB_CFLAGS) -c $(SRC_D)/src/deflate.c
$(OBJ_D)\gzclose.obj: $(SRC_D)/src/gzclose.c
    $(CC) -o$(OBJ_D)\gzclose.obj $(LIB_CFLAGS) -c $(SRC_D)/src/gzclose.c
$(OBJ_D)\gzlib.obj: $(SRC_D)/src/gzlib.c
    $(CC) -o$(OBJ_D)\gzlib.obj $(LIB_CFLAGS) -c $(SRC_D)/src/gzlib.c
$(OBJ_D)\gzread.obj: $(SRC_D)/src/gzread.c
    $(CC) -o$(OBJ_D)\gzread.obj $(LIB_CFLAGS) -c $(SRC_D)/src/gzread.c
$(OBJ_D)\gzwrite.obj: $(SRC_D)/src/gzwrite.c
    $(CC) -o$(OBJ_D)\gzwrite.obj $(LIB_CFLAGS) -c $(SRC_D)/src/gzwrite.c
$(OBJ_D)\infback.obj: $(SRC_D)/src/infback.c
    $(CC) -o$(OBJ_D)\infback.obj $(LIB_CFLAGS) -c $(SRC_D)/src/infback.c
$(OBJ_D)\inffast.obj: $(SRC_D)/src/inffast.c
    $(CC) -o$(OBJ_D)\inffast.obj $(LIB_CFLAGS) -c $(SRC_D)/src/inffast.c
$(OBJ_D)\inflate.obj: $(SRC_D)/src/inflate.c
    $(CC) -o$(OBJ_D)\inflate.obj $(LIB_CFLAGS) -c $(SRC_D)/src/inflate.c
$(OBJ_D)\inftrees.obj: $(SRC_D)/src/inftrees.c
    $(CC) -o$(OBJ_D)\inftrees.obj $(LIB_CFLAGS) -c $(SRC_D)/src/inftrees.c
$(OBJ_D)\trees.obj: $(SRC_D)/src/trees.c
    $(CC) -o$(OBJ_D)\trees.obj $(LIB_CFLAGS) -c $(SRC_D)/src/trees.c
$(OBJ_D)\uncompr.obj: $(SRC_D)/src/uncompr.c
    $(CC) -o$(OBJ_D)\uncompr.obj $(LIB_CFLAGS) -c $(SRC_D)/src/uncompr.c
$(OBJ_D)\zutil.obj: $(SRC_D)/src/zutil.c
    $(CC) -o$(OBJ_D)\zutil.obj $(LIB_CFLAGS) -c $(SRC_D)/src/zutil.c

$(O_ZLIB): $(ZLIBOBJS)
    if exist $(O_ZLIB) $(RM) $(O_ZLIB)
    $(MKLIB) $(O_ZLIB) @&&!
+$(**: = &^
+)
!

###################################################################
all: banner clean_lib $(TMP_D) $(OUT_D) headers lib

banner:
    @echo Building zlib
    @echo $(ZLIBOBJS)

clean_lib:
    if exist $(O_ZLIB) $(RM) $(O_ZLIB)

$(TMP_D):
    if not exist "$(TMP_D)" ( $(MKDIR) "$(TMP_D)" )

$(OUT_D):
    if not exist "$(OUT_D)" ( $(MKDIR) "$(OUT_D)" )

headers: $(HEADER)
    @

lib: $(LIBS_DEP)

